/* DO NOT EDIT
 * This file is autogenerated
 * Look fix/README for more information how to generate this file
 *
 */

typedef struct _fix_field {
    int      tag;         /* FIX tag */
    int      type;        /* */
    const void *table;
} fix_field;


    static const string_string messages_val[] = {
        { "0", "Heartbeat" },
        { "1", "TestRequest" },
        { "2", "ResendRequest" },
        { "3", "Reject" },
        { "4", "SequenceReset" },
        { "5", "Logout" },
        { "6", "IOI" },
        { "7", "Advertisement" },
        { "8", "ExecutionReport" },
        { "9", "OrderCancelReject" },
        { "A", "Logon" },
        { "B", "News" },
        { "C", "Email" },
        { "D", "NewOrderSingle" },
        { "E", "NewOrderList" },
        { "F", "OrderCancelRequest" },
        { "G", "OrderCancelReplaceRequest" },
        { "H", "OrderStatusRequest" },
        { "J", "AllocationInstruction" },
        { "K", "ListCancelRequest" },
        { "L", "ListExecute" },
        { "M", "ListStatusRequest" },
        { "N", "ListStatus" },
        { "P", "AllocationInstructionAck" },
        { "Q", "DontKnowTrade" },
        { "R", "QuoteRequest" },
        { "S", "Quote" },
        { "T", "SettlementInstructions" },
        { "V", "MarketDataRequest" },
        { "W", "MarketDataSnapshotFullRefresh" },
        { "X", "MarketDataIncrementalRefresh" },
        { "Y", "MarketDataRequestReject" },
        { "Z", "QuoteCancel" },
        { "a", "QuoteStatusRequest" },
        { "b", "MassQuoteAcknowledgement" },
        { "c", "SecurityDefinitionRequest" },
        { "d", "SecurityDefinition" },
        { "e", "SecurityStatusRequest" },
        { "f", "SecurityStatus" },
        { "g", "TradingSessionStatusRequest" },
        { "h", "TradingSessionStatus" },
        { "i", "MassQuote" },
        { "j", "BusinessMessageReject" },
        { "k", "BidRequest" },
        { "l", "BidResponse" },
        { "m", "ListStrikePrice" },
        { "o", "RegistrationInstructions" },
        { "p", "RegistrationInstructionsResponse" },
        { "q", "OrderMassCancelRequest" },
        { "r", "OrderMassCancelReport" },
        { "s", "NewOrderCross" },
        { "t", "CrossOrderCancelReplaceRequest" },
        { "u", "CrossOrderCancelRequest" },
        { "v", "SecurityTypeRequest" },
        { "w", "SecurityTypes" },
        { "x", "SecurityListRequest" },
        { "y", "SecurityList" },
        { "z", "DerivativeSecurityListRequest" },
        { "AA", "DerivativeSecurityList" },
        { "AB", "NewOrderMultileg" },
        { "AC", "MultilegOrderCancelReplace" },
        { "AD", "TradeCaptureReportRequest" },
        { "AE", "TradeCaptureReport" },
        { "AF", "OrderMassStatusRequest" },
        { "AG", "QuoteRequestReject" },
        { "AH", "RFQRequest" },
        { "AI", "QuoteStatusReport" },
        { "AJ", "QuoteResponse" },
        { "AK", "Confirmation" },
        { "AL", "PositionMaintenanceRequest" },
        { "AM", "PositionMaintenanceReport" },
        { "AN", "RequestForPositions" },
        { "AO", "RequestForPositionsAck" },
        { "AP", "PositionReport" },
        { "AQ", "TradeCaptureReportRequestAck" },
        { "AR", "TradeCaptureReportAck" },
        { "AS", "AllocationReport" },
        { "AT", "AllocationReportAck" },
        { "AU", "ConfirmationAck" },
        { "AV", "SettlementInstructionRequest" },
        { "AW", "AssignmentReport" },
        { "AX", "CollateralRequest" },
        { "AY", "CollateralAssignment" },
        { "AZ", "CollateralResponse" },
        { "BA", "CollateralReport" },
        { "BB", "CollateralInquiry" },
        { "BC", "NetworkCounterpartySystemStatusRequest" },
        { "BD", "NetworkCounterpartySystemStatusResponse" },
        { "BE", "UserRequest" },
        { "BF", "UserResponse" },
        { "BG", "CollateralInquiryAck" },
        { "BH", "ConfirmationRequest" },
        { "BO", "ContraryIntentionReport" },
        { "BP", "SecurityDefinitionUpdateReport" },
        { "BK", "SecurityListUpdateReport" },
        { "BL", "AdjustedPositionReport" },
        { "BM", "AllocationInstructionAlert" },
        { "BN", "ExecutionAcknowledgement" },
        { "BJ", "TradingSessionList" },
        { "BI", "TradingSessionListRequest" },
        { "BQ", "SettlementObligationReport" },
        { "BR", "DerivativeSecurityListUpdateReport" },
        { "BS", "TradingSessionListUpdateReport" },
        { "BT", "MarketDefinitionRequest" },
        { "BU", "MarketDefinition" },
        { "BV", "MarketDefinitionUpdateReport" },
        { "BW", "ApplicationMessageRequest" },
        { "BX", "ApplicationMessageRequestAck" },
        { "BY", "ApplicationMessageReport" },
        { "BZ", "OrderMassActionReport" },
        { "CA", "OrderMassActionRequest" },
        { "CB", "UserNotification" },
        { "CC", "StreamAssignmentRequest" },
        { "CD", "StreamAssignmentReport" },
        { "CE", "StreamAssignmentReportACK" },
        { "CF", "PartyDetailsListRequest" },
        { "CG", "PartyDetailsListReport" },
        { 0, NULL }
    };

    static const  value_string AdvSide_val[] = {
        { 'B', "BUY" },
        { 'S', "SELL" },
        { 'T', "TRADE" },
        { 'X', "CROSS" },
        { 0, NULL }
    };


    static const  string_string AdvTransType_val[] = {
        { "C", "CANCEL" },
        { "N", "NEW" },
        { "R", "REPLACE" },
        { 0, NULL }
    };


    static const  value_string CommType_val[] = {
        { '1', "PER UNIT" },
        { '2', "PERCENT" },
        { '3', "ABSOLUTE" },
        { '4', "PERCENTAGE WAIVED CASH DISCOUNT" },
        { '5', "PERCENTAGE WAIVED ENHANCED UNITS" },
        { '6', "POINTS PER BOND OR CONTRACT" },
        { 0, NULL }
    };


    static const  value_string ExecInst_val[] = {
        { '0', "STAY ON OFFER SIDE" },
        { '1', "NOT HELD" },
        { '2', "WORK" },
        { '3', "GO ALONG" },
        { '4', "OVER THE DAY" },
        { '5', "HELD" },
        { '6', "PARTICIPATE DONT INITIATE" },
        { '7', "STRICT SCALE" },
        { '8', "TRY TO SCALE" },
        { '9', "STAY ON BID SIDE" },
        { 'A', "NO CROSS" },
        { 'B', "OK TO CROSS" },
        { 'C', "CALL FIRST" },
        { 'D', "PERCENT OF VOLUME" },
        { 'E', "DO NOT INCREASE" },
        { 'F', "DO NOT REDUCE" },
        { 'G', "ALL OR NONE" },
        { 'H', "REINSTATE ON SYSTEM FAILURE" },
        { 'I', "INSTITUTIONS ONLY" },
        { 'J', "REINSTATE ON TRADING HALT" },
        { 'K', "CANCEL ON TRADING HALT" },
        { 'L', "LAST PEG" },
        { 'M', "MID PRICE PEG" },
        { 'N', "NON NEGOTIABLE" },
        { 'O', "OPENING PEG" },
        { 'P', "MARKET PEG" },
        { 'Q', "CANCEL ON SYSTEM FAILURE" },
        { 'R', "PRIMARY PEG" },
        { 'S', "SUSPEND" },
        { 'T', "FIXED PEG TO LOCAL BEST BID OR OFFER AT TIME OF ORDER" },
        { 'U', "CUSTOMER DISPLAY INSTRUCTION" },
        { 'V', "NETTING" },
        { 'W', "PEG TO VWAP" },
        { 'X', "TRADE ALONG" },
        { 'Y', "TRY TO STOP" },
        { 'Z', "CANCEL IF NOT BEST" },
        { 'a', "TRAILING STOP PEG" },
        { 'b', "STRICT LIMIT" },
        { 'c', "IGNORE PRICE VALIDITY CHECKS" },
        { 'd', "PEG TO LIMIT PRICE" },
        { 'e', "WORK TO TARGET STRATEGY" },
        { 'f', "INTERMARKET SWEEP" },
        { 'j', "SINGLE EXECUTION REQUESTED FOR BLOCK TRADE" },
        { 'g', "EXTERNAL ROUTING ALLOWED" },
        { 'h', "EXTERNAL ROUTING NOT ALLOWED" },
        { 'i', "IMBALANCE ONLY" },
        { 'k', "BEST EXECUTION" },
        { 'l', "SUSPEND ON SYSTEM FAILURE" },
        { 'm', "SUSPEND ON TRADING HALT" },
        { 'n', "REINSTATE ON CONNECTION LOSS" },
        { 'o', "CANCEL ON CONNECTION LOSS" },
        { 'p', "SUSPEND ON CONNECTION LOSS" },
        { 'q', "RELEASE FROM SUSPENSION" },
        { 'r', "EXECUTE AS DELTA NEUTRAL USING VOLATILITY PROVIDED" },
        { 's', "EXECUTE AS DURATION NEUTRAL" },
        { 't', "EXECUTE AS FX NEUTRAL" },
        { 0, NULL }
    };


    static const  value_string ExecTransType_val[] = {
        { '0', "NEW" },
        { '1', "CANCEL" },
        { '2', "CORRECT" },
        { '3', "STATUS" },
        { 0, NULL }
    };


    static const  value_string HandlInst_val[] = {
        { '1', "AUTOMATED EXECUTION ORDER PRIVATE NO BROKER INTERVENTION" },
        { '2', "AUTOMATED EXECUTION ORDER PUBLIC BROKER INTERVENTION OK" },
        { '3', "MANUAL ORDER BEST EXECUTION" },
        { 0, NULL }
    };


    static const  string_string SecurityIDSource_val[] = {
        { "1", "CUSIP" },
        { "2", "SEDOL" },
        { "3", "QUIK" },
        { "4", "ISIN NUMBER" },
        { "5", "RIC CODE" },
        { "6", "ISO CURRENCY CODE" },
        { "7", "ISO COUNTRY CODE" },
        { "8", "EXCHANGE SYMBOL" },
        { "9", "CONSOLIDATED TAPE ASSOCIATION" },
        { "A", "BLOOMBERG SYMBOL" },
        { "B", "WERTPAPIER" },
        { "C", "DUTCH" },
        { "D", "VALOREN" },
        { "E", "SICOVAM" },
        { "F", "BELGIAN" },
        { "G", "COMMON" },
        { "H", "CLEARING HOUSE" },
        { "I", "ISDA FPML PRODUCT SPECIFICATION" },
        { "J", "OPTION PRICE REPORTING AUTHORITY" },
        { "L", "LETTER OF CREDIT" },
        { "K", "ISDA FPML PRODUCT URL" },
        { "M", "MARKETPLACE ASSIGNED IDENTIFIER" },
        { 0, NULL }
    };


    static const  value_string IOIQltyInd_val[] = {
        { 'H', "HIGH" },
        { 'L', "LOW" },
        { 'M', "MEDIUM" },
        { 0, NULL }
    };


    static const  string_string IOIQty_val[] = {
        { "0", "1000000000" },
        { "S", "SMALL" },
        { "M", "MEDIUM" },
        { "L", "LARGE" },
        { "U", "UNDISCLOSED QUANTITY" },
        { 0, NULL }
    };


    static const  value_string IOITransType_val[] = {
        { 'C', "CANCEL" },
        { 'N', "NEW" },
        { 'R', "REPLACE" },
        { 0, NULL }
    };


    static const  value_string LastCapacity_val[] = {
        { '1', "AGENT" },
        { '2', "CROSS AS AGENT" },
        { '3', "CROSS AS PRINCIPAL" },
        { '4', "PRINCIPAL" },
        { 0, NULL }
    };


    static const  string_string MsgType_val[] = {
        { "0", "HEARTBEAT" },
        { "1", "TEST REQUEST" },
        { "2", "RESEND REQUEST" },
        { "3", "REJECT" },
        { "4", "SEQUENCE RESET" },
        { "5", "LOGOUT" },
        { "6", "INDICATION OF INTEREST" },
        { "7", "ADVERTISEMENT" },
        { "8", "EXECUTION REPORT" },
        { "9", "ORDER CANCEL REJECT" },
        { "A", "LOGON" },
        { "AA", "DERIVATIVE SECURITY LIST" },
        { "AB", "NEW ORDER MULTILEG" },
        { "AC", "MULTILEG ORDER CANCEL REPLACE" },
        { "AD", "TRADE CAPTURE REPORT REQUEST" },
        { "AE", "TRADE CAPTURE REPORT" },
        { "AF", "ORDER MASS STATUS REQUEST" },
        { "AG", "QUOTE REQUEST REJECT" },
        { "AH", "RFQ REQUEST" },
        { "AI", "QUOTE STATUS REPORT" },
        { "AJ", "QUOTE RESPONSE" },
        { "AK", "CONFIRMATION" },
        { "AL", "POSITION MAINTENANCE REQUEST" },
        { "AM", "POSITION MAINTENANCE REPORT" },
        { "AN", "REQUEST FOR POSITIONS" },
        { "AO", "REQUEST FOR POSITIONS ACK" },
        { "AP", "POSITION REPORT" },
        { "AQ", "TRADE CAPTURE REPORT REQUEST ACK" },
        { "AR", "TRADE CAPTURE REPORT ACK" },
        { "AS", "ALLOCATION REPORT" },
        { "AT", "ALLOCATION REPORT ACK" },
        { "AU", "CONFIRMATION ACK" },
        { "AV", "SETTLEMENT INSTRUCTION REQUEST" },
        { "AW", "ASSIGNMENT REPORT" },
        { "AX", "COLLATERAL REQUEST" },
        { "AY", "COLLATERAL ASSIGNMENT" },
        { "AZ", "COLLATERAL RESPONSE" },
        { "B", "NEWS" },
        { "BA", "COLLATERAL REPORT" },
        { "BB", "COLLATERAL INQUIRY" },
        { "BC", "NETWORK STATUS REQUEST" },
        { "BD", "NETWORK STATUS RESPONSE" },
        { "BE", "USER REQUEST" },
        { "BF", "USER RESPONSE" },
        { "BG", "COLLATERAL INQUIRY ACK" },
        { "BH", "CONFIRMATION REQUEST" },
        { "BI", "TRADING SESSION LIST REQUEST" },
        { "BJ", "TRADING SESSION LIST" },
        { "BK", "SECURITY LIST UPDATE REPORT" },
        { "BL", "ADJUSTED POSITION REPORT" },
        { "BM", "ALLOCATION INSTRUCTION ALERT" },
        { "BN", "EXECUTION ACKNOWLEDGEMENT" },
        { "BO", "CONTRARY INTENTION REPORT" },
        { "BP", "SECURITY DEFINITION UPDATE REPORT" },
        { "BQ", "SETTLEMENT OBLIGATION REPORT" },
        { "BR", "DERIVATIVE SECURITY LIST UPDATE REPORT" },
        { "BS", "TRADING SESSION LIST UPDATE REPORT" },
        { "BT", "MARKET DEFINITION REQUEST" },
        { "BU", "MARKET DEFINITION" },
        { "BV", "MARKET DEFINITION UPDATE REPORT" },
        { "BW", "APPLICATION MESSAGE REQUEST" },
        { "BX", "APPLICATION MESSAGE REQUEST ACK" },
        { "BY", "APPLICATION MESSAGE REPORT" },
        { "BZ", "ORDER MASS ACTION REPORT" },
        { "C", "EMAIL" },
        { "CA", "ORDER MASS ACTION REQUEST" },
        { "CB", "USER NOTIFICATION" },
        { "CC", "STREAM ASSIGNMENT REQUEST" },
        { "CD", "STREAM ASSIGNMENT REPORT" },
        { "CE", "STREAM ASSIGNMENT REPORT ACK" },
        { "CF", "PARTY DETAILS LIST REQUEST" },
        { "CG", "PARTY DETAILS LIST REPORT" },
        { "D", "ORDER SINGLE" },
        { "E", "ORDER LIST" },
        { "F", "ORDER CANCEL REQUEST" },
        { "G", "ORDER CANCEL REPLACE REQUEST" },
        { "H", "ORDER STATUS REQUEST" },
        { "J", "ALLOCATION INSTRUCTION" },
        { "K", "LIST CANCEL REQUEST" },
        { "L", "LIST EXECUTE" },
        { "M", "LIST STATUS REQUEST" },
        { "N", "LIST STATUS" },
        { "P", "ALLOCATION INSTRUCTION ACK" },
        { "Q", "DONT KNOW TRADE" },
        { "R", "QUOTE REQUEST" },
        { "S", "QUOTE" },
        { "T", "SETTLEMENT INSTRUCTIONS" },
        { "V", "MARKET DATA REQUEST" },
        { "W", "MARKET DATA SNAPSHOT FULL REFRESH" },
        { "X", "MARKET DATA INCREMENTAL REFRESH" },
        { "Y", "MARKET DATA REQUEST REJECT" },
        { "Z", "QUOTE CANCEL" },
        { "a", "QUOTE STATUS REQUEST" },
        { "b", "MASS QUOTE ACKNOWLEDGEMENT" },
        { "c", "SECURITY DEFINITION REQUEST" },
        { "d", "SECURITY DEFINITION" },
        { "e", "SECURITY STATUS REQUEST" },
        { "f", "SECURITY STATUS" },
        { "g", "TRADING SESSION STATUS REQUEST" },
        { "h", "TRADING SESSION STATUS" },
        { "i", "MASS QUOTE" },
        { "j", "BUSINESS MESSAGE REJECT" },
        { "k", "BID REQUEST" },
        { "l", "BID RESPONSE" },
        { "m", "LIST STRIKE PRICE" },
        { "n", "XML MESSAGE" },
        { "o", "REGISTRATION INSTRUCTIONS" },
        { "p", "REGISTRATION INSTRUCTIONS RESPONSE" },
        { "q", "ORDER MASS CANCEL REQUEST" },
        { "r", "ORDER MASS CANCEL REPORT" },
        { "s", "NEW ORDER CROSS" },
        { "t", "CROSS ORDER CANCEL REPLACE REQUEST" },
        { "u", "CROSS ORDER CANCEL REQUEST" },
        { "v", "SECURITY TYPE REQUEST" },
        { "w", "SECURITY TYPES" },
        { "x", "SECURITY LIST REQUEST" },
        { "y", "SECURITY LIST" },
        { "z", "DERIVATIVE SECURITY LIST REQUEST" },
        { 0, NULL }
    };


    static const  value_string OrdStatus_val[] = {
        { '0', "NEW" },
        { '1', "PARTIALLY FILLED" },
        { '2', "FILLED" },
        { '3', "DONE FOR DAY" },
        { '4', "CANCELED" },
        { '5', "REPLACED" },
        { '6', "PENDING CANCEL" },
        { '7', "STOPPED" },
        { '8', "REJECTED" },
        { '9', "SUSPENDED" },
        { 'A', "PENDING NEW" },
        { 'B', "CALCULATED" },
        { 'C', "EXPIRED" },
        { 'D', "ACCEPTED FOR BIDDING" },
        { 'E', "PENDING REPLACE" },
        { 0, NULL }
    };


    static const  value_string OrdType_val[] = {
        { '1', "MARKET" },
        { '2', "LIMIT" },
        { '3', "STOP" },
        { '4', "STOP LIMIT" },
        { '5', "MARKET ON CLOSE" },
        { '6', "WITH OR WITHOUT" },
        { '7', "LIMIT OR BETTER" },
        { '8', "LIMIT WITH OR WITHOUT" },
        { '9', "ON BASIS" },
        { 'A', "ON CLOSE" },
        { 'B', "LIMIT ON CLOSE" },
        { 'C', "FOREX MARKET" },
        { 'D', "PREVIOUSLY QUOTED" },
        { 'E', "PREVIOUSLY INDICATED" },
        { 'F', "FOREX LIMIT" },
        { 'G', "FOREX SWAP" },
        { 'H', "FOREX PREVIOUSLY QUOTED" },
        { 'I', "FUNARI" },
        { 'J', "MARKET IF TOUCHED" },
        { 'K', "MARKET WITH LEFT OVER AS LIMIT" },
        { 'L', "PREVIOUS FUND VALUATION POINT" },
        { 'M', "NEXT FUND VALUATION POINT" },
        { 'P', "PEGGED" },
        { 'Q', "COUNTER ORDER SELECTION" },
        { 0, NULL }
    };


    static const  value_string PossDupFlag_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string Rule80A_val[] = {
        { 'A', "AGENCY SINGLE ORDER" },
        { 'B', "SHORT EXEMPT TRANSACTION B" },
        { 'C', "PROPRIETARY NON ALGORITHMIC PROGRAM TRADE" },
        { 'D', "PROGRAM ORDER INDEX ARB FOR MEMBER FIRM ORG" },
        { 'E', "SHORT EXEMPT TRANSACTION FOR PRINCIPAL" },
        { 'F', "SHORT EXEMPT TRANSACTION F" },
        { 'H', "SHORT EXEMPT TRANSACTION H" },
        { 'I', "INDIVIDUAL INVESTOR SINGLE ORDER" },
        { 'J', "PROPRIETARY ALGORITHMIC PROGRAM TRADING" },
        { 'K', "AGENCY ALGORITHMIC PROGRAM TRADING" },
        { 'L', "SHORT EXEMPT TRANSACTION FOR MEMBER COMPETING MARKET MAKER AFFLIATED WITH THE FIRM CLEARING THE TRADE" },
        { 'M', "PROGRAM ORDER INDEX ARB FOR OTHER MEMBER" },
        { 'N', "AGENT FOR OTHER MEMBER NON ALGORITHMIC PROGRAM TRADE" },
        { 'O', "PROPRIETARY TRANSACTIONS FOR COMPETING MARKET MAKER THAT IS AFFILIATED WITH THE CLEARING MEMBER" },
        { 'P', "PRINCIPAL" },
        { 'R', "TRANSACTIONS FOR THE ACCOUNT OF A NON MEMBER COMPTING MARKET MAKER" },
        { 'S', "SPECIALIST TRADES" },
        { 'T', "TRANSACTIONS FOR THE ACCOUNT OF AN UNAFFILIATED MEMBERS COMPETING MARKET MAKER" },
        { 'U', "AGENCY INDEX ARBITRAGE" },
        { 'W', "ALL OTHER ORDERS AS AGENT FOR OTHER MEMBER" },
        { 'X', "SHORT EXEMPT TRANSACTION FOR MEMBER COMPETING MARKET MAKER NOT AFFILIATED WITH THE FIRM CLEARING THE TRADE" },
        { 'Y', "AGENCY NON ALGORITHMIC PROGRAM TRADE" },
        { 'Z', "SHORT EXEMPT TRANSACTION FOR NON MEMBER COMPETING MARKET MAKER" },
        { 0, NULL }
    };


    static const  value_string Side_val[] = {
        { '1', "BUY" },
        { '2', "SELL" },
        { '3', "BUY MINUS" },
        { '4', "SELL PLUS" },
        { '5', "SELL SHORT" },
        { '6', "SELL SHORT EXEMPT" },
        { '7', "UNDISCLOSED" },
        { '8', "CROSS" },
        { '9', "CROSS SHORT" },
        { 'A', "CROSS SHORT EXEMPT" },
        { 'B', "AS DEFINED" },
        { 'C', "OPPOSITE" },
        { 'D', "SUBSCRIBE" },
        { 'E', "REDEEM" },
        { 'F', "LEND" },
        { 'G', "BORROW" },
        { 0, NULL }
    };


    static const  value_string TimeInForce_val[] = {
        { '0', "DAY" },
        { '1', "GOOD TILL CANCEL" },
        { '2', "AT THE OPENING" },
        { '3', "IMMEDIATE OR CANCEL" },
        { '4', "FILL OR KILL" },
        { '5', "GOOD TILL CROSSING" },
        { '6', "GOOD TILL DATE" },
        { '7', "AT THE CLOSE" },
        { '8', "GOOD THROUGH CROSSING" },
        { '9', "AT CROSSING" },
        { 0, NULL }
    };


    static const  value_string Urgency_val[] = {
        { '0', "NORMAL" },
        { '1', "FLASH" },
        { '2', "BACKGROUND" },
        { 0, NULL }
    };


    static const  string_string SettlType_val[] = {
        { "0", "REGULAR" },
        { "1", "CASH" },
        { "2", "NEXT DAY" },
        { "3", "T PLUS 2" },
        { "4", "T PLUS 3" },
        { "5", "T PLUS 4" },
        { "6", "FUTURE" },
        { "7", "WHEN AND IF ISSUED" },
        { "8", "SELLERS OPTION" },
        { "9", "T PLUS 5" },
        { "C", "FX SPOT NEXT SETTLEMENT" },
        { "B", "BROKEN DATE" },
        { 0, NULL }
    };


    static const  string_string SymbolSfx_val[] = {
        { "CD", "EUCP WITH LUMP SUM INTEREST RATHER THAN DISCOUNT PRICE" },
        { "WI", "WHEN ISSUED FOR A SECURITY TO BE REISSUED UNDER AN OLD CUSIP OR ISIN" },
        { 0, NULL }
    };


    static const  value_string AllocTransType_val[] = {
        { '0', "NEW" },
        { '1', "REPLACE" },
        { '2', "CANCEL" },
        { '3', "PRELIMINARY" },
        { '4', "CALCULATED" },
        { '5', "CALCULATED WITHOUT PRELIMINARY" },
        { '6', "REVERSAL" },
        { 0, NULL }
    };


    static const  value_string PositionEffect_val[] = {
        { 'C', "CLOSE" },
        { 'F', "FIFO" },
        { 'O', "OPEN" },
        { 'R', "ROLLED" },
        { 'N', "CLOSE BUT NOTIFY ON OPEN" },
        { 'D', "DEFAULT" },
        { 0, NULL }
    };


    static const  value_string ProcessCode_val[] = {
        { '0', "REGULAR" },
        { '1', "SOFT DOLLAR" },
        { '2', "STEP IN" },
        { '3', "STEP OUT" },
        { '4', "SOFT DOLLAR STEP IN" },
        { '5', "SOFT DOLLAR STEP OUT" },
        { '6', "PLAN SPONSOR" },
        { 0, NULL }
    };


    static const  value_string AllocStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "BLOCK LEVEL REJECT" },
        { 2, "ACCOUNT LEVEL REJECT" },
        { 3, "RECEIVED" },
        { 4, "INCOMPLETE" },
        { 5, "REJECTED BY INTERMEDIARY" },
        { 6, "ALLOCATION PENDING" },
        { 7, "REVERSED" },
        { 0, NULL }
    };


    static const  value_string AllocRejCode_val[] = {
        { 0, "UNKNOWN ACCOUNT" },
        { 1, "INCORRECT QUANTITY" },
        { 10, "UNKNOWN OR STALE EXECID" },
        { 11, "MISMATCHED DATA" },
        { 12, "UNKNOWN CLORDID" },
        { 13, "WAREHOUSE REQUEST REJECTED" },
        { 2, "INCORRECT AVERAGEG PRICE" },
        { 3, "UNKNOWN EXECUTING BROKER MNEMONIC" },
        { 4, "COMMISSION DIFFERENCE" },
        { 5, "UNKNOWN ORDERID" },
        { 6, "UNKNOWN LISTID" },
        { 7, "OTHER 7" },
        { 8, "INCORRECT ALLOCATED QUANTITY" },
        { 9, "CALCULATION DIFFERENCE" },
        { 99, "OTHER 99" },
        { 0, NULL }
    };


    static const  value_string EmailType_val[] = {
        { '0', "NEW" },
        { '1', "REPLY" },
        { '2', "ADMIN REPLY" },
        { 0, NULL }
    };


    static const  value_string PossResend_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string EncryptMethod_val[] = {
        { 0, "NONE" },
        { 1, "PKCS 1" },
        { 2, "DES" },
        { 3, "PKCS 3" },
        { 4, "PGP 4" },
        { 5, "PGP 5" },
        { 6, "PEM" },
        { 0, NULL }
    };


    static const  value_string CxlRejReason_val[] = {
        { 0, "TOO LATE TO CANCEL" },
        { 1, "UNKNOWN ORDER" },
        { 2, "BROKER" },
        { 3, "ORDER ALREADY IN PENDING CANCEL OR PENDING REPLACE STATUS" },
        { 4, "UNABLE TO PROCESS ORDER MASS CANCEL REQUEST" },
        { 5, "ORIGORDMODTIME" },
        { 6, "DUPLICATE CLORDID" },
        { 99, "OTHER" },
        { 18, "INVALID PRICE INCREMENT" },
        { 7, "PRICE EXCEEDS CURRENT PRICE" },
        { 8, "PRICE EXCEEDS CURRENT PRICE BAND" },
        { 0, NULL }
    };


    static const  value_string OrdRejReason_val[] = {
        { 0, "BROKER" },
        { 1, "UNKNOWN SYMBOL" },
        { 10, "INVALID INVESTOR ID" },
        { 11, "UNSUPPORTED ORDER CHARACTERISTIC" },
        { 12, "SURVEILLENCE OPTION" },
        { 13, "INCORRECT QUANTITY" },
        { 14, "INCORRECT ALLOCATED QUANTITY" },
        { 15, "UNKNOWN ACCOUNT" },
        { 2, "EXCHANGE CLOSED" },
        { 3, "ORDER EXCEEDS LIMIT" },
        { 4, "TOO LATE TO ENTER" },
        { 5, "UNKNOWN ORDER" },
        { 6, "DUPLICATE ORDER" },
        { 7, "DUPLICATE OF A VERBALLY COMMUNICATED ORDER" },
        { 8, "STALE ORDER" },
        { 9, "TRADE ALONG REQUIRED" },
        { 99, "OTHER" },
        { 18, "INVALID PRICE INCREMENT" },
        { 16, "PRICE EXCEEDS CURRENT PRICE BAND" },
        { 0, NULL }
    };


    static const  value_string IOIQualifier_val[] = {
        { 'A', "ALL OR NONE" },
        { 'B', "MARKET ON CLOSE" },
        { 'C', "AT THE CLOSE" },
        { 'D', "VWAP" },
        { 'I', "IN TOUCH WITH" },
        { 'L', "LIMIT" },
        { 'M', "MORE BEHIND" },
        { 'O', "AT THE OPEN" },
        { 'P', "TAKING A POSITION" },
        { 'Q', "AT THE MARKET" },
        { 'R', "READY TO TRADE" },
        { 'S', "PORTFOLIO SHOWN" },
        { 'T', "THROUGH THE DAY" },
        { 'V', "VERSUS" },
        { 'W', "INDICATION" },
        { 'X', "CROSSING OPPORTUNITY" },
        { 'Y', "AT THE MIDPOINT" },
        { 'Z', "PRE OPEN" },
        { 0, NULL }
    };


    static const  value_string ReportToExch_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string LocateReqd_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ForexReq_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string GapFillFlag_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string DKReason_val[] = {
        { 'A', "UNKNOWN SYMBOL" },
        { 'B', "WRONG SIDE" },
        { 'C', "QUANTITY EXCEEDS ORDER" },
        { 'D', "NO MATCHING ORDER" },
        { 'E', "PRICE EXCEEDS LIMIT" },
        { 'F', "CALCULATION DIFFERENCE" },
        { 'Z', "OTHER" },
        { 0, NULL }
    };


    static const  value_string IOINaturalFlag_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  string_string MiscFeeType_val[] = {
        { "1", "REGULATORY" },
        { "10", "PER TRANSACTION" },
        { "11", "CONVERSION" },
        { "12", "AGENT" },
        { "2", "TAX" },
        { "3", "LOCAL COMMISSION" },
        { "4", "EXCHANGE FEES" },
        { "5", "STAMP" },
        { "6", "LEVY" },
        { "7", "OTHER" },
        { "8", "MARKUP" },
        { "9", "CONSUMPTION TAX" },
        { "13", "TRANSFER FEE" },
        { "14", "SECURITY LENDING" },
        { 0, NULL }
    };


    static const  value_string ResetSeqNumFlag_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ExecType_val[] = {
        { '0', "NEW" },
        { '1', "PARTIAL FILL" },
        { '2', "FILL" },
        { '3', "DONE FOR DAY" },
        { '4', "CANCELED" },
        { '5', "REPLACED" },
        { '6', "PENDING CANCEL" },
        { '7', "STOPPED" },
        { '8', "REJECTED" },
        { '9', "SUSPENDED" },
        { 'A', "PENDING NEW" },
        { 'B', "CALCULATED" },
        { 'C', "EXPIRED" },
        { 'D', "RESTATED" },
        { 'E', "PENDING REPLACE" },
        { 'F', "TRADE" },
        { 'G', "TRADE CORRECT" },
        { 'H', "TRADE CANCEL" },
        { 'I', "ORDER STATUS" },
        { 'J', "TRADE IN A CLEARING HOLD" },
        { 'K', "TRADE HAS BEEN RELEASED TO CLEARING" },
        { 'L', "TRIGGERED OR ACTIVATED BY SYSTEM" },
        { 0, NULL }
    };


    static const  value_string SettlCurrFxRateCalc_val[] = {
        { 'M', "MULTIPLY" },
        { 'D', "DIVIDE" },
        { 0, NULL }
    };


    static const  value_string SettlInstMode_val[] = {
        { '0', "DEFAULT" },
        { '1', "STANDING INSTRUCTIONS PROVIDED" },
        { '2', "SPECIFIC ALLOCATION ACCOUNT OVERRIDING" },
        { '3', "SPECIFIC ALLOCATION ACCOUNT STANDING" },
        { '4', "SPECIFIC ORDER FOR A SINGLE ACCOUNT" },
        { '5', "REQUEST REJECT" },
        { 0, NULL }
    };


    static const  value_string SettlInstTransType_val[] = {
        { 'C', "CANCEL" },
        { 'N', "NEW" },
        { 'R', "REPLACE" },
        { 'T', "RESTATE" },
        { 0, NULL }
    };


    static const  value_string SettlInstSource_val[] = {
        { '1', "BROKERS INSTRUCTIONS" },
        { '2', "INSTITUTIONS INSTRUCTIONS" },
        { '3', "INVESTOR" },
        { 0, NULL }
    };


    static const  string_string SettlLocation_val[] = {
        { "CED", "CEDEL" },
        { "DTC", "DEPOSITORY TRUST COMPANY" },
        { "EUR", "EURO CLEAR" },
        { "FED", "FEDERAL BOOK ENTRY" },
        { "ISO_Country_Code", "LOCAL MARKET SETTLE LOCATION" },
        { "PNY", "PHYSICAL" },
        { "PTC", "PARTICIPANT TRUST COMPANY" },
        { 0, NULL }
    };


    static const  string_string SecurityType_val[] = {
        { "ABS", "ASSET BACKED SECURITIES" },
        { "AMENDED", "AMENDED RESTATED" },
        { "AN", "OTHER ANTICIPATION NOTES" },
        { "BA", "BANKERS ACCEPTANCE" },
        { "BN", "BANK NOTES" },
        { "BOX", "BILL OF EXCHANGES" },
        { "BRADY", "BRADY BOND" },
        { "BRIDGE", "BRIDGE LOAN" },
        { "BUYSELL", "BUY SELLBACK" },
        { "CB", "CONVERTIBLE BOND" },
        { "CD", "CERTIFICATE OF DEPOSIT" },
        { "CL", "CALL LOANS" },
        { "CMBS", "CORP MORTGAGE BACKED SECURITIES" },
        { "CMO", "COLLATERALIZED MORTGAGE OBLIGATION" },
        { "COFO", "CERTIFICATE OF OBLIGATION" },
        { "COFP", "CERTIFICATE OF PARTICIPATION" },
        { "CORP", "CORPORATE BOND" },
        { "CP", "COMMERCIAL PAPER" },
        { "CPP", "CORPORATE PRIVATE PLACEMENT" },
        { "CS", "COMMON STOCK" },
        { "DEFLTED", "DEFAULTED" },
        { "DINP", "DEBTOR IN POSSESSION" },
        { "DN", "DEPOSIT NOTES" },
        { "DUAL", "DUAL CURRENCY" },
        { "EUCD", "EURO CERTIFICATE OF DEPOSIT" },
        { "EUCORP", "EURO CORPORATE BOND" },
        { "EUCP", "EURO COMMERCIAL PAPER" },
        { "EUSOV", "EURO SOVEREIGNS" },
        { "EUSUPRA", "EURO SUPRANATIONAL COUPONS" },
        { "FAC", "FEDERAL AGENCY COUPON" },
        { "FADN", "FEDERAL AGENCY DISCOUNT NOTE" },
        { "FOR", "FOREIGN EXCHANGE CONTRACT" },
        { "FORWARD", "FORWARD" },
        { "FUT", "FUTURE" },
        { "GO", "GENERAL OBLIGATION BONDS" },
        { "IET", "IOETTE MORTGAGE" },
        { "LOFC", "LETTER OF CREDIT" },
        { "LQN", "LIQUIDITY NOTE" },
        { "MATURED", "MATURED" },
        { "MBS", "MORTGAGE BACKED SECURITIES" },
        { "MF", "MUTUAL FUND" },
        { "MIO", "MORTGAGE INTEREST ONLY" },
        { "MLEG", "MULTILEG INSTRUMENT" },
        { "MPO", "MORTGAGE PRINCIPAL ONLY" },
        { "MPP", "MORTGAGE PRIVATE PLACEMENT" },
        { "MPT", "MISCELLANEOUS PASS THROUGH" },
        { "MT", "MANDATORY TENDER" },
        { "MTN", "MEDIUM TERM NOTES" },
        { "NONE", "NO SECURITY TYPE" },
        { "ONITE", "OVERNIGHT" },
        { "OPT", "OPTION" },
        { "PEF", "PRIVATE EXPORT FUNDING" },
        { "PFAND", "PFANDBRIEFE" },
        { "PN", "PROMISSORY NOTE" },
        { "PS", "PREFERRED STOCK" },
        { "PZFJ", "PLAZOS FIJOS" },
        { "RAN", "REVENUE ANTICIPATION NOTE" },
        { "REPLACD", "REPLACED" },
        { "REPO", "REPURCHASE" },
        { "RETIRED", "RETIRED" },
        { "REV", "REVENUE BONDS" },
        { "RVLV", "REVOLVER LOAN" },
        { "RVLVTRM", "REVOLVER TERM LOAN" },
        { "SECLOAN", "SECURITIES LOAN" },
        { "SECPLEDGE", "SECURITIES PLEDGE" },
        { "SPCLA", "SPECIAL ASSESSMENT" },
        { "SPCLO", "SPECIAL OBLIGATION" },
        { "SPCLT", "SPECIAL TAX" },
        { "STN", "SHORT TERM LOAN NOTE" },
        { "STRUCT", "STRUCTURED NOTES" },
        { "SUPRA", "USD SUPRANATIONAL COUPONS" },
        { "SWING", "SWING LINE FACILITY" },
        { "TAN", "TAX ANTICIPATION NOTE" },
        { "TAXA", "TAX ALLOCATION" },
        { "TBA", "TO BE ANNOUNCED" },
        { "TBILL", "US TREASURY BILL TBILL" },
        { "TBOND", "US TREASURY BOND" },
        { "TCAL", "PRINCIPAL STRIP OF A CALLABLE BOND OR NOTE" },
        { "TD", "TIME DEPOSIT" },
        { "TECP", "TAX EXEMPT COMMERCIAL PAPER" },
        { "TERM", "TERM LOAN" },
        { "TINT", "INTEREST STRIP FROM ANY BOND OR NOTE" },
        { "TIPS", "TREASURY INFLATION PROTECTED SECURITIES" },
        { "TNOTE", "US TREASURY NOTE TNOTE" },
        { "TPRN", "PRINCIPAL STRIP FROM A NON CALLABLE BOND OR NOTE" },
        { "TRAN", "TAX REVENUE ANTICIPATION NOTE" },
        { "UST", "US TREASURY NOTE UST" },
        { "USTB", "US TREASURY BILL USTB" },
        { "VRDN", "VARIABLE RATE DEMAND NOTE" },
        { "WAR", "WARRANT" },
        { "WITHDRN", "WITHDRAWN" },
        { "?", "WILDCARD ENTRY FOR USE ON SECURITY DEFINITION REQUEST" },
        { "XCN", "EXTENDED COMM NOTE" },
        { "XLINKD", "INDEXED LINKED" },
        { "YANK", "YANKEE CORPORATE BOND" },
        { "YCD", "YANKEE CERTIFICATE OF DEPOSIT" },
        { "OOP", "OPTIONS ON PHYSICAL" },
        { "OOF", "OPTIONS ON FUTURES" },
        { "CASH", "CASH" },
        { "OOC", "OPTIONS ON COMBO" },
        { "IRS", "INTEREST RATE SWAP" },
        { "BDN", "BANK DEPOSITORY NOTE" },
        { "CAMM", "CANADIAN MONEY MARKETS" },
        { "CAN", "CANADIAN TREASURY NOTES" },
        { "CTB", "CANADIAN TREASURY BILLS" },
        { "CDS", "CREDIT DEFAULT SWAP" },
        { "CMB", "CANADIAN MORTGAGE BONDS" },
        { "EUFRN", "EURO CORPORATE FLOATING RATE NOTES" },
        { "FRN", "US CORPORATE FLOATING RATE NOTES" },
        { "PROV", "CANADIAN PROVINCIAL BONDS" },
        { "SLQN", "SECURED LIQUIDITY NOTE" },
        { "TB", "TREASURY BILL" },
        { "TLQN", "TERM LIQUIDITY NOTE" },
        { "TMCP", "TAXABLE MUNICIPAL CP" },
        { "FXNDF", "NON DELIVERABLE FORWARD" },
        { "FXSPOT", "FX SPOT" },
        { "FXFWD", "FX FORWARD" },
        { "FXSWAP", "FX SWAP" },
        { 0, NULL }
    };


    static const  value_string StandInstDbType_val[] = {
        { 0, "OTHER" },
        { 1, "DTC SID" },
        { 2, "THOMSON ALERT" },
        { 3, "A GLOBAL CUSTODIAN" },
        { 4, "ACCOUNTNET" },
        { 0, NULL }
    };


    static const  value_string SettlDeliveryType_val[] = {
        { 0, "VERSUS PAYMENT DELIVER" },
        { 1, "FREE DELIVER" },
        { 2, "TRI PARTY" },
        { 3, "HOLD IN CUSTODY" },
        { 0, NULL }
    };


    static const  value_string AllocLinkType_val[] = {
        { 0, "FX NETTING" },
        { 1, "FX SWAP" },
        { 0, NULL }
    };


    static const  value_string PutOrCall_val[] = {
        { 0, "PUT" },
        { 1, "CALL" },
        { 0, NULL }
    };


    static const  value_string CoveredOrUncovered_val[] = {
        { 0, "COVERED" },
        { 1, "UNCOVERED" },
        { 0, NULL }
    };


    static const  value_string CustomerOrFirm_val[] = {
        { 0, "CUSTOMER" },
        { 1, "FIRM" },
        { 0, NULL }
    };


    static const  value_string NotifyBrokerOfCredit_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string AllocHandlInst_val[] = {
        { 1, "MATCH" },
        { 2, "FORWARD" },
        { 3, "FORWARD AND MATCH" },
        { 0, NULL }
    };


    static const  value_string RoutingType_val[] = {
        { 1, "TARGET FIRM" },
        { 2, "TARGET LIST" },
        { 3, "BLOCK FIRM" },
        { 4, "BLOCK LIST" },
        { 0, NULL }
    };


    static const  value_string Benchmark_val[] = {
        { '1', "CURVE" },
        { '2', "5YR" },
        { '3', "OLD5" },
        { '4', "10YR" },
        { '5', "OLD10" },
        { '6', "30YR" },
        { '7', "OLD30" },
        { '8', "3MOLIBOR" },
        { '9', "6MOLIBOR" },
        { 0, NULL }
    };


    static const  string_string BenchmarkCurveName_val[] = {
        { "EONIA", "EONIA" },
        { "EUREPO", "EUREPO" },
        { "Euribor", "EURIBOR" },
        { "FutureSWAP", "FUTURESWAP" },
        { "LIBID", "LIBID" },
        { "LIBOR", "LIBOR" },
        { "MuniAAA", "MUNIAAA" },
        { "OTHER", "OTHER" },
        { "Pfandbriefe", "PFANDBRIEFE" },
        { "SONIA", "SONIA" },
        { "SWAP", "SWAP" },
        { "Treasury", "TREASURY" },
        { 0, NULL }
    };


    static const  string_string StipulationType_val[] = {
        { "ABS", "ABSOLUTE PREPAYMENT SPEED" },
        { "AMT", "ALTERNATIVE MINIMUM TAX" },
        { "AUTOREINV", "AUTO REINVESTMENT AT RATE OR BETTER" },
        { "BANKQUAL", "BANK QUALIFIED" },
        { "BGNCON", "BARGAIN CONDITIONS" },
        { "COUPON", "COUPON RANGE" },
        { "CPP", "CONSTANT PREPAYMENT PENALTY" },
        { "CPR", "CONSTANT PREPAYMENT RATE" },
        { "CPY", "CONSTANT PREPAYMENT YIELD" },
        { "CURRENCY", "ISO CURRENCY CODE" },
        { "CUSTOMDATE", "CUSTOM START END DATE" },
        { "GEOG", "GEOGRAPHICS AND RANGE" },
        { "HAIRCUT", "VALUATION DISCOUNT" },
        { "HEP", "FINAL CPR OF HOME EQUITY PREPAYMENT CURVE" },
        { "INSURED", "INSURED" },
        { "ISSUE", "YEAR OR YEAR MONTH OF ISSUE" },
        { "ISSUER", "ISSUERS TICKER" },
        { "ISSUESIZE", "ISSUE SIZE RANGE" },
        { "LOOKBACK", "LOOKBACK DAYS" },
        { "LOT", "EXPLICIT LOT IDENTIFIER" },
        { "LOTVAR", "LOT VARIANCE" },
        { "MAT", "MATURITY YEAR AND MONTH" },
        { "MATURITY", "MATURITY RANGE" },
        { "MAXSUBS", "MAXIMUM SUBSTITUTIONS" },
        { "MHP", "PERCENT OF MANUFACTURED HOUSING PREPAYMENT CURVE" },
        { "MINDNOM", "MINIMUM DENOMINATION" },
        { "MININCR", "MINIMUM INCREMENT" },
        { "MINQTY", "MINIMUM QUANTITY" },
        { "MPR", "MONTHLY PREPAYMENT RATE" },
        { "PAYFREQ", "PAYMENT FREQUENCY CALENDAR" },
        { "PIECES", "NUMBER OF PIECES" },
        { "PMAX", "POOLS MAXIMUM" },
        { "PPC", "PERCENT OF PROSPECTUS PREPAYMENT CURVE" },
        { "PPL", "POOLS PER LOT" },
        { "PPM", "POOLS PER MILLION" },
        { "PPT", "POOLS PER TRADE" },
        { "PRICE", "PRICE RANGE" },
        { "PRICEFREQ", "PRICING FREQUENCY" },
        { "PROD", "PRODUCTION YEAR" },
        { "PROTECT", "CALL PROTECTION" },
        { "PSA", "PERCENT OF BMA PREPAYMENT CURVE" },
        { "PURPOSE", "PURPOSE" },
        { "PXSOURCE", "BENCHMARK PRICE SOURCE" },
        { "RATING", "RATING SOURCE AND RANGE" },
        { "REDEMPTION", "TYPE OF REDEMPTION" },
        { "RESTRICTED", "RESTRICTED" },
        { "SECTOR", "MARKET SECTOR" },
        { "SECTYPE", "SECURITY TYPE INCLUDED OR EXCLUDED" },
        { "SMM", "SINGLE MONTHLY MORTALITY" },
        { "STRUCT", "STRUCTURE" },
        { "SUBSFREQ", "SUBSTITUTIONS FREQUENCY" },
        { "SUBSLEFT", "SUBSTITUTIONS LEFT" },
        { "TEXT", "FREEFORM TEXT" },
        { "TRDVAR", "TRADE VARIANCE" },
        { "WAC", "WEIGHTED AVERAGE COUPON" },
        { "WAL", "WEIGHTED AVERAGE LIFE COUPON" },
        { "WALA", "WEIGHTED AVERAGE LOAN AGE" },
        { "WAM", "WEIGHTED AVERAGE MATURITY" },
        { "WHOLE", "WHOLE POOL" },
        { "YIELD", "YIELD RANGE" },
        { "AVFICO", "AVERAGE FICO SCORE" },
        { "AVSIZE", "AVERAGE LOAN SIZE" },
        { "MAXBAL", "MAXIMUM LOAN BALANCE" },
        { "POOL", "POOL IDENTIFIER" },
        { "ROLLTYPE", "TYPE OF ROLL TRADE" },
        { "REFTRADE", "REFERENCE TO ROLLING OR CLOSING TRADE" },
        { "REFPRIN", "PRINCIPAL OF ROLLING OR CLOSING TRADE" },
        { "REFINT", "INTEREST OF ROLLING OR CLOSING TRADE" },
        { "AVAILQTY", "AVAILABLE OFFER QUANTITY TO BE SHOWN TO THE STREET" },
        { "BROKERCREDIT", "BROKERS SALES CREDIT" },
        { "INTERNALPX", "OFFER PRICE TO BE SHOWN TO INTERNAL BROKERS" },
        { "INTERNALQTY", "OFFER QUANTITY TO BE SHOWN TO INTERNAL BROKERS" },
        { "LEAVEQTY", "THE MINIMUM RESIDUAL OFFER QUANTITY" },
        { "MAXORDQTY", "MAXIMUM ORDER SIZE" },
        { "ORDRINCR", "ORDER QUANTITY INCREMENT" },
        { "PRIMARY", "PRIMARY OR SECONDARY MARKET INDICATOR" },
        { "SALESCREDITOVR", "BROKER SALES CREDIT OVERRIDE" },
        { "TRADERCREDIT", "TRADERS CREDIT" },
        { "DISCOUNT", "DISCOUNT RATE" },
        { "YTM", "YIELD TO MATURITY" },
        { 0, NULL }
    };


    static const  string_string StipulationValue_val[] = {
        { "CD", "SPECIAL CUM DIVIDEND" },
        { "XD", "SPECIAL EX DIVIDEND" },
        { "CC", "SPECIAL CUM COUPON" },
        { "XC", "SPECIAL EX COUPON" },
        { "CB", "SPECIAL CUM BONUS" },
        { "XB", "SPECIAL EX BONUS" },
        { "CR", "SPECIAL CUM RIGHTS" },
        { "XR", "SPECIAL EX RIGHTS" },
        { "CP", "SPECIAL CUM CAPITAL REPAYMENTS" },
        { "XP", "SPECIAL EX CAPITAL REPAYMENTS" },
        { "CS", "CASH SETTLEMENT" },
        { "SP", "SPECIAL PRICE" },
        { "TR", "REPORT FOR EUROPEAN EQUITY MARKET SECURITIES" },
        { "GD", "GUARANTEED DELIVERY" },
        { 0, NULL }
    };


    static const  string_string YieldType_val[] = {
        { "AFTERTAX", "AFTER TAX YIELD" },
        { "ANNUAL", "ANNUAL YIELD" },
        { "ATISSUE", "YIELD AT ISSUE" },
        { "AVGMATURITY", "YIELD TO AVG MATURITY" },
        { "BOOK", "BOOK YIELD" },
        { "CALL", "YIELD TO NEXT CALL" },
        { "CHANGE", "YIELD CHANGE SINCE CLOSE" },
        { "CLOSE", "CLOSING YIELD" },
        { "COMPOUND", "COMPOUND YIELD" },
        { "CURRENT", "CURRENT YIELD" },
        { "GOVTEQUIV", "GVNT EQUIVALENT YIELD" },
        { "GROSS", "true GROSS YIELD" },
        { "INFLATION", "YIELD WITH INFLATION ASSUMPTION" },
        { "INVERSEFLOATER", "INVERSE FLOATER BOND YIELD" },
        { "LASTCLOSE", "MOST RECENT CLOSING YIELD" },
        { "LASTMONTH", "CLOSING YIELD MOST RECENT MONTH" },
        { "LASTQUARTER", "CLOSING YIELD MOST RECENT QUARTER" },
        { "LASTYEAR", "CLOSING YIELD MOST RECENT YEAR" },
        { "LONGAVGLIFE", "YIELD TO LONGEST AVERAGE LIFE" },
        { "MARK", "MARK TO MARKET YIELD" },
        { "MATURITY", "YIELD TO MATURITY" },
        { "NEXTREFUND", "YIELD TO NEXT REFUND" },
        { "OPENAVG", "OPEN AVERAGE YIELD" },
        { "PREVCLOSE", "PREVIOUS CLOSE YIELD" },
        { "PROCEEDS", "PROCEEDS YIELD" },
        { "PUT", "YIELD TO NEXT PUT" },
        { "SEMIANNUAL", "SEMI ANNUAL YIELD" },
        { "SHORTAVGLIFE", "YIELD TO SHORTEST AVERAGE LIFE" },
        { "SIMPLE", "SIMPLE YIELD" },
        { "TAXEQUIV", "TAX EQUIVALENT YIELD" },
        { "TENDER", "YIELD TO TENDER DATE" },
        { "TRUE", "true YIELD" },
        { "VALUE1_32", "YIELD VALUE OF 1 32" },
        { "WORST", "YIELD TO WORST" },
        { 0, NULL }
    };


    static const  value_string TradedFlatSwitch_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string SubscriptionRequestType_val[] = {
        { '0', "SNAPSHOT" },
        { '1', "SNAPSHOT PLUS UPDATES" },
        { '2', "DISABLE PREVIOUS SNAPSHOT PLUS UPDATE REQUEST" },
        { 0, NULL }
    };


    static const  value_string MDUpdateType_val[] = {
        { 0, "FULL REFRESH" },
        { 1, "INCREMENTAL REFRESH" },
        { 0, NULL }
    };


    static const  value_string AggregatedBook_val[] = {
        { 'Y', "YES" },
        { 'N', "NO" },
        { 0, NULL }
    };


    static const  value_string MDEntryType_val[] = {
        { '0', "BID" },
        { '1', "OFFER" },
        { '2', "TRADE" },
        { '3', "INDEX VALUE" },
        { '4', "OPENING PRICE" },
        { '5', "CLOSING PRICE" },
        { '6', "SETTLEMENT PRICE" },
        { '7', "TRADING SESSION HIGH PRICE" },
        { '8', "TRADING SESSION LOW PRICE" },
        { '9', "TRADING SESSION VWAP PRICE" },
        { 'A', "IMBALANCE" },
        { 'B', "TRADE VOLUME" },
        { 'C', "OPEN INTEREST" },
        { 'D', "COMPOSITE UNDERLYING PRICE" },
        { 'E', "SIMULATED SELL PRICE" },
        { 'F', "SIMULATED BUY PRICE" },
        { 'G', "MARGIN RATE" },
        { 'H', "MID PRICE" },
        { 'J', "EMPTY BOOK" },
        { 'K', "SETTLE HIGH PRICE" },
        { 'L', "SETTLE LOW PRICE" },
        { 'M', "PRIOR SETTLE PRICE" },
        { 'N', "SESSION HIGH BID" },
        { 'O', "SESSION LOW OFFER" },
        { 'P', "EARLY PRICES" },
        { 'Q', "AUCTION CLEARING PRICE" },
        { 'S', "SWAP VALUE FACTOR" },
        { 'R', "DAILY VALUE ADJUSTMENT FOR LONG POSITIONS" },
        { 'T', "CUMULATIVE VALUE ADJUSTMENT FOR LONG POSITIONS" },
        { 'U', "DAILY VALUE ADJUSTMENT FOR SHORT POSITIONS" },
        { 'V', "CUMULATIVE VALUE ADJUSTMENT FOR SHORT POSITIONS" },
        { 'Y', "RECOVERY RATE" },
        { 'Z', "RECOVERY RATE FOR LONG" },
        { 'a', "RECOVERY RATE FOR SHORT" },
        { 'W', "FIXING PRICE" },
        { 'X', "CASH RATE" },
        { 0, NULL }
    };


    static const  value_string TickDirection_val[] = {
        { '0', "PLUS TICK" },
        { '1', "ZERO PLUS TICK" },
        { '2', "MINUS TICK" },
        { '3', "ZERO MINUS TICK" },
        { 0, NULL }
    };


    static const  string_string QuoteCondition_val[] = {
        { "A", "OPEN ACTIVE" },
        { "B", "CLOSED INACTIVE" },
        { "C", "EXCHANGE BEST" },
        { "D", "CONSOLIDATED BEST" },
        { "E", "LOCKED" },
        { "F", "CROSSED" },
        { "G", "DEPTH" },
        { "H", "FAST TRADING" },
        { "I", "NON FIRM" },
        { "L", "MANUAL SLOW QUOTE" },
        { "J", "OUTRIGHT PRICE" },
        { "K", "IMPLIED PRICE" },
        { "M", "DEPTH ON OFFER" },
        { "N", "DEPTH ON BID" },
        { "O", "CLOSING" },
        { "P", "NEWS DISSEMINATION" },
        { "Q", "TRADING RANGE" },
        { "R", "ORDER INFLUX" },
        { "S", "DUE TO RELATED" },
        { "T", "NEWS PENDING" },
        { "U", "ADDITIONAL INFO" },
        { "V", "ADDITIONAL INFO DUE TO RELATED" },
        { "W", "RESUME" },
        { "X", "VIEW OF COMMON" },
        { "Y", "VOLUME ALERT" },
        { "Z", "ORDER IMBALANCE" },
        { "a", "EQUIPMENT CHANGEOVER" },
        { "b", "NO OPEN" },
        { "c", "REGULAR ETH" },
        { "d", "AUTOMATIC EXECUTION" },
        { "e", "AUTOMATIC EXECUTION ETH" },
        { "f ", "FAST MARKET ETH" },
        { "g", "INACTIVE ETH" },
        { "h", "ROTATION" },
        { "i", "ROTATION ETH" },
        { "j", "HALT" },
        { "k", "HALT ETH" },
        { "l", "DUE TO NEWS DISSEMINATION" },
        { "m", "DUE TO NEWS PENDING" },
        { "n", "TRADING RESUME" },
        { "o", "OUT OF SEQUENCE" },
        { "p", "BID SPECIALIST" },
        { "q", "OFFER SPECIALIST" },
        { "r", "BID OFFER SPECIALIST" },
        { "s", "END OF DAY SAM" },
        { "t", "FORBIDDEN SAM" },
        { "u", "FROZEN SAM" },
        { "v", "PREOPENING SAM" },
        { "w", "OPENING SAM" },
        { "x", "OPEN SAM" },
        { "y", "SURVEILLANCE SAM" },
        { "z", "SUSPENDED SAM" },
        { "0", "RESERVED SAM" },
        { "1", "NO ACTIVE SAM" },
        { "2", "RESTRICTED" },
        { "3", "REST OF BOOK VWAP" },
        { "4", "BETTER PRICES IN CONDITIONAL ORDERS" },
        { "5", "MEDIAN PRICE" },
        { "6", "FULL CURVE" },
        { "7", "FLAT CURVE" },
        { 0, NULL }
    };


    static const  string_string TradeCondition_val[] = {
        { "A", "CASH" },
        { "B", "AVERAGE PRICE TRADE" },
        { "C", "CASH TRADE" },
        { "D", "NEXT DAY" },
        { "E", "OPENING REOPENING TRADE DETAIL" },
        { "F", "INTRADAY TRADE DETAIL" },
        { "G", "RULE 127 TRADE" },
        { "H", "RULE 155 TRADE" },
        { "I", "SOLD LAST" },
        { "J", "NEXT DAY TRADE" },
        { "K", "OPENED" },
        { "L", "SELLER" },
        { "M", "SOLD" },
        { "N", "STOPPED STOCK" },
        { "P", "IMBALANCE MORE BUYERS" },
        { "Q", "IMBALANCE MORE SELLERS" },
        { "R", "OPENING PRICE" },
        { "S", "BARGAIN CONDITION" },
        { "T", "CONVERTED PRICE INDICATOR" },
        { "U", "EXCHANGE LAST" },
        { "V", "FINAL PRICE OF SESSION" },
        { "W", "EX PIT" },
        { "X", "CROSSED X" },
        { "Y", "TRADES RESULTING FROM MANUAL SLOW QUOTE" },
        { "Z", "TRADES RESULTING FROM INTERMARKET SWEEP" },
        { "0", "CANCEL" },
        { "a", "VOLUME ONLY" },
        { "b", "DIRECT PLUS" },
        { "c", "ACQUISITION" },
        { "d", "BUNCHED" },
        { "e", "DISTRIBUTION" },
        { "f", "BUNCHED SALE" },
        { "g", "SPLIT TRADE" },
        { "h", "CANCEL STOPPED" },
        { "i", "CANCEL ETH" },
        { "j", "CANCEL STOPPED ETH" },
        { "k", "OUT OF SEQUENCE ETH" },
        { "l", "CANCEL LAST ETH" },
        { "m", "SOLD LAST SALE ETH" },
        { "n", "CANCEL LAST" },
        { "o", "SOLD LAST SALE" },
        { "p", "CANCEL OPEN" },
        { "q", "CANCEL OPEN ETH" },
        { "r", "OPENED SALE ETH" },
        { "s", "CANCEL ONLY" },
        { "t", "CANCEL ONLY ETH" },
        { "u", "LATE OPEN ETH" },
        { "v", "AUTO EXECUTION ETH" },
        { "w", "REOPEN" },
        { "x", "REOPEN ETH" },
        { "y", "ADJUSTED" },
        { "z", "ADJUSTED ETH" },
        { "AA", "SPREAD" },
        { "AB", "SPREAD ETH" },
        { "AC", "STRADDLE" },
        { "AD", "STRADDLE ETH" },
        { "AE", "STOPPED" },
        { "AF", "STOPPED ETH" },
        { "AG", "REGULAR ETH" },
        { "AH", "COMBO" },
        { "AI", "COMBO ETH" },
        { "AJ", "OFFICIAL CLOSING PRICE" },
        { "AK", "PRIOR REFERENCE PRICE" },
        { "AL", "STOPPED SOLD LAST" },
        { "AM", "STOPPED OUT OF SEQUENCE" },
        { "AN", "OFFICIAL CLOSING PRICE" },
        { "AO", "CROSSED AO" },
        { "AP", "FAST MARKET" },
        { "AQ", "AUTOMATIC EXECUTION" },
        { "AR", "FORM T" },
        { "AS", "BASKET INDEX" },
        { "AT", "BURST BASKET" },
        { "1", "IMPLIED TRADE" },
        { "AV", "OUTSIDE SPREAD" },
        { "2", "MARKETPLACE ENTERED TRADE" },
        { "3", "MULT ASSET CLASS MULTILEG TRADE" },
        { "4", "MULTILEG TO MULTILEG TRADE" },
        { 0, NULL }
    };


    static const  value_string MDUpdateAction_val[] = {
        { '0', "NEW" },
        { '1', "CHANGE" },
        { '2', "DELETE" },
        { '3', "DELETE THRU" },
        { '4', "DELETE FROM" },
        { '5', "OVERLAY" },
        { 0, NULL }
    };


    static const  value_string MDReqRejReason_val[] = {
        { '0', "UNKNOWN SYMBOL" },
        { '1', "DUPLICATE MDREQID" },
        { '2', "INSUFFICIENT BANDWIDTH" },
        { '3', "INSUFFICIENT PERMISSIONS" },
        { '4', "UNSUPPORTED SUBSCRIPTIONREQUESTTYPE" },
        { '5', "UNSUPPORTED MARKETDEPTH" },
        { '6', "UNSUPPORTED MDUPDATETYPE" },
        { '7', "UNSUPPORTED AGGREGATEDBOOK" },
        { '8', "UNSUPPORTED MDENTRYTYPE" },
        { '9', "UNSUPPORTED TRADINGSESSIONID" },
        { 'A', "UNSUPPORTED SCOPE" },
        { 'B', "UNSUPPORTED OPENCLOSESETTLEFLAG" },
        { 'C', "UNSUPPORTED MDIMPLICITDELETE" },
        { 'D', "INSUFFICIENT CREDIT" },
        { 0, NULL }
    };


    static const  value_string DeleteReason_val[] = {
        { '0', "CANCELLATION" },
        { '1', "ERROR" },
        { 0, NULL }
    };


    static const  value_string OpenCloseSettlFlag_val[] = {
        { '0', "DAILY OPEN" },
        { '1', "SESSION OPEN" },
        { '2', "DELIVERY SETTLEMENT ENTRY" },
        { '3', "EXPECTED ENTRY" },
        { '4', "ENTRY FROM PREVIOUS BUSINESS DAY" },
        { '5', "THEORETICAL PRICE VALUE" },
        { 0, NULL }
    };


    static const  value_string FinancialStatus_val[] = {
        { '1', "BANKRUPT" },
        { '2', "PENDING DELISTING" },
        { '3', "RESTRICTED" },
        { 0, NULL }
    };


    static const  value_string CorporateAction_val[] = {
        { 'A', "EX DIVIDEND" },
        { 'B', "EX DISTRIBUTION" },
        { 'C', "EX RIGHTS" },
        { 'D', "NEW" },
        { 'E', "EX INTEREST" },
        { 'F', "CASH DIVIDEND" },
        { 'G', "STOCK DIVIDEND" },
        { 'H', "NON INTEGER STOCK SPLIT" },
        { 'I', "REVERSE STOCK SPLIT" },
        { 'J', "STANDARD INTEGER STOCK SPLIT" },
        { 'K', "POSITION CONSOLIDATION" },
        { 'L', "LIQUIDATION REORGANIZATION" },
        { 'M', "MERGER REORGANIZATION" },
        { 'N', "RIGHTS OFFERING" },
        { 'O', "SHAREHOLDER MEETING" },
        { 'P', "SPINOFF" },
        { 'Q', "TENDER OFFER" },
        { 'R', "WARRANT" },
        { 'S', "SPECIAL ACTION" },
        { 'T', "SYMBOL CONVERSION" },
        { 'U', "CUSIP" },
        { 'V', "LEAP ROLLOVER" },
        { 'W', "SUCCESSION EVENT" },
        { 0, NULL }
    };


    static const  value_string QuoteStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "CANCEL FOR SYMBOL" },
        { 10, "PENDING" },
        { 11, "PASS" },
        { 12, "LOCKED MARKET WARNING" },
        { 13, "CROSS MARKET WARNING" },
        { 14, "CANCELED DUE TO LOCK MARKET" },
        { 15, "CANCELED DUE TO CROSS MARKET" },
        { 2, "CANCELED FOR SECURITY TYPE" },
        { 3, "CANCELED FOR UNDERLYING" },
        { 4, "CANCELED ALL" },
        { 5, "REJECTED" },
        { 6, "REMOVED FROM MARKET" },
        { 7, "EXPIRED" },
        { 8, "QUERY" },
        { 9, "QUOTE NOT FOUND" },
        { 16, "ACTIVE" },
        { 17, "CANCELED" },
        { 18, "UNSOLICITED QUOTE REPLENISHMENT" },
        { 19, "PENDING END TRADE" },
        { 20, "TOO LATE TO END" },
        { 0, NULL }
    };


    static const  value_string QuoteCancelType_val[] = {
        { 1, "CANCEL FOR ONE OR MORE SECURITIES" },
        { 2, "CANCEL FOR SECURITY TYPE" },
        { 3, "CANCEL FOR UNDERLYING SECURITY" },
        { 4, "CANCEL ALL QUOTES" },
        { 5, "CANCEL QUOTE SPECIFIED IN QUOTEID" },
        { 6, "CANCEL BY QUOTETYPE" },
        { 7, "CANCEL FOR SECURITY ISSUER" },
        { 8, "CANCEL FOR ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string QuoteRejectReason_val[] = {
        { 1, "UNKNOWN SYMBOL" },
        { 2, "EXCHANGE" },
        { 3, "QUOTE REQUEST EXCEEDS LIMIT" },
        { 4, "TOO LATE TO ENTER" },
        { 5, "UNKNOWN QUOTE" },
        { 6, "DUPLICATE QUOTE" },
        { 7, "INVALID BID ASK SPREAD" },
        { 8, "INVALID PRICE" },
        { 9, "NOT AUTHORIZED TO QUOTE SECURITY" },
        { 99, "OTHER" },
        { 10, "PRICE EXCEEDS CURRENT PRICE BAND" },
        { 11, "QUOTE LOCKED" },
        { 12, "INVALID OR UNKNOWN SECURITY ISSUER" },
        { 13, "INVALID OR UNKNOWN ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string QuoteResponseLevel_val[] = {
        { 0, "NO ACKNOWLEDGEMENT" },
        { 1, "ACKNOWLEDGE ONLY NEGATIVE OR ERRONEOUS QUOTES" },
        { 2, "ACKNOWLEDGE EACH QUOTE MESSAGE" },
        { 3, "SUMMARY ACKNOWLEDGEMENT" },
        { 0, NULL }
    };


    static const  value_string QuoteRequestType_val[] = {
        { 1, "MANUAL" },
        { 2, "AUTOMATIC" },
        { 0, NULL }
    };


    static const  value_string SecurityRequestType_val[] = {
        { 0, "REQUEST SECURITY IDENTITY AND SPECIFICATIONS" },
        { 1, "REQUEST SECURITY IDENTITY FOR THE SPECIFICATIONS PROVIDED" },
        { 2, "REQUEST LIST SECURITY TYPES" },
        { 3, "REQUEST LIST SECURITIES" },
        { 4, "SYMBOL" },
        { 5, "SECURITYTYPE AND OR CFICODE" },
        { 6, "PRODUCT" },
        { 7, "TRADINGSESSIONID" },
        { 8, "ALL SECURITIES" },
        { 9, "MARKETID OR MARKETID PLUS MARKETSEGMENTID" },
        { 0, NULL }
    };


    static const  value_string SecurityResponseType_val[] = {
        { 1, "ACCEPT SECURITY PROPOSAL AS IS" },
        { 2, "ACCEPT SECURITY PROPOSAL WITH REVISIONS AS INDICATED IN THE MESSAGE" },
        { 3, "LIST OF SECURITY TYPES RETURNED PER REQUEST" },
        { 4, "LIST OF SECURITIES RETURNED PER REQUEST" },
        { 5, "REJECT SECURITY PROPOSAL" },
        { 6, "CANNOT MATCH SELECTION CRITERIA" },
        { 0, NULL }
    };


    static const  value_string UnsolicitedIndicator_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string SecurityTradingStatus_val[] = {
        { 1, "OPENING DELAY" },
        { 10, "MARKET ON CLOSE IMBALANCE SELL" },
        { 11, "11" },
        { 12, "NO MARKET IMBALANCE" },
        { 13, "NO MARKET ON CLOSE IMBALANCE" },
        { 14, "ITS PRE OPENING" },
        { 15, "NEW PRICE INDICATION" },
        { 16, "TRADE DISSEMINATION TIME" },
        { 17, "READY TO TRADE" },
        { 18, "NOT AVAILABLE FOR TRADING" },
        { 19, "NOT TRADED ON THIS MARKET" },
        { 2, "TRADING HALT" },
        { 20, "UNKNOWN OR INVALID" },
        { 21, "PRE OPEN" },
        { 22, "OPENING ROTATION" },
        { 23, "FAST MARKET" },
        { 3, "RESUME" },
        { 4, "NO OPEN" },
        { 5, "PRICE INDICATION" },
        { 6, "TRADING RANGE INDICATION" },
        { 7, "MARKET IMBALANCE BUY" },
        { 8, "MARKET IMBALANCE SELL" },
        { 9, "MARKET ON CLOSE IMBALANCE BUY" },
        { 24, "PRE CROSS" },
        { 25, "CROSS" },
        { 26, "POST CLOSE" },
        { 0, NULL }
    };


    static const  value_string HaltReasonInt_val[] = {
        { 0, "NEWS DISSEMINATION" },
        { 1, "ORDER INFLUX" },
        { 2, "ORDER IMBALANCE" },
        { 3, "ADDITIONAL INFORMATION" },
        { 4, "NEWS PENDING" },
        { 5, "EQUIPMENT CHANGEOVER" },
        { 0, NULL }
    };


    static const  value_string InViewOfCommon_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string DueToRelated_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string Adjustment_val[] = {
        { 1, "CANCEL" },
        { 2, "ERROR" },
        { 3, "CORRECTION" },
        { 0, NULL }
    };


    static const  string_string TradingSessionID_val[] = {
        { "1", "DAY" },
        { "2", "HALFDAY" },
        { "3", "MORNING" },
        { "4", "AFTERNOON" },
        { "5", "EVENING" },
        { "6", "AFTER HOURS" },
        { 0, NULL }
    };


    static const  value_string TradSesMethod_val[] = {
        { 1, "ELECTRONIC" },
        { 2, "OPEN OUTCRY" },
        { 3, "TWO PARTY" },
        { 0, NULL }
    };


    static const  value_string TradSesMode_val[] = {
        { 1, "TESTING" },
        { 2, "SIMULATED" },
        { 3, "PRODUCTION" },
        { 0, NULL }
    };


    static const  value_string TradSesStatus_val[] = {
        { 0, "UNKNOWN" },
        { 1, "HALTED" },
        { 2, "OPEN" },
        { 3, "CLOSED" },
        { 4, "PRE OPEN" },
        { 5, "PRE CLOSE" },
        { 6, "REQUEST REJECTED" },
        { 0, NULL }
    };


    static const  string_string MessageEncoding_val[] = {
        { "ISO-2022-JP", "ISO 2022 JP" },
        { "EUC-JP", "EUC JP" },
        { "SHIFT_JIS", "SHIFT JIS" },
        { "UTF-8", "UTF 8" },
        { 0, NULL }
    };


    static const  value_string SessionRejectReason_val[] = {
        { 0, "INVALID TAG NUMBER" },
        { 1, "REQUIRED TAG MISSING" },
        { 10, "SENDINGTIME ACCURACY PROBLEM" },
        { 11, "INVALID MSGTYPE" },
        { 12, "XML VALIDATION ERROR" },
        { 13, "TAG APPEARS MORE THAN ONCE" },
        { 14, "TAG SPECIFIED OUT OF REQUIRED ORDER" },
        { 15, "REPEATING GROUP FIELDS OUT OF ORDER" },
        { 16, "INCORRECT NUMINGROUP COUNT FOR REPEATING GROUP" },
        { 17, "NON DATA VALUE INCLUDES FIELD DELIMITER" },
        { 2, "TAG NOT DEFINED FOR THIS MESSAGE TYPE" },
        { 3, "UNDEFINED TAG" },
        { 4, "TAG SPECIFIED WITHOUT A VALUE" },
        { 5, "VALUE IS INCORRECT" },
        { 6, "INCORRECT DATA FORMAT FOR VALUE" },
        { 7, "DECRYPTION PROBLEM" },
        { 8, "SIGNATURE PROBLEM" },
        { 9, "COMPID PROBLEM" },
        { 99, "OTHER" },
        { 18, "INVALID UNSUPPORTED APPLICATION VERSION" },
        { 0, NULL }
    };


    static const  value_string BidRequestTransType_val[] = {
        { 'C', "CANCEL" },
        { 'N', "NO" },
        { 0, NULL }
    };


    static const  value_string SolicitedFlag_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ExecRestatementReason_val[] = {
        { 0, "GT CORPORATE ACTION" },
        { 1, "GT RENEWAL" },
        { 10, "WAREHOUSE RECAP" },
        { 2, "VERBAL CHANGE" },
        { 3, "REPRICING OF ORDER" },
        { 4, "BROKER OPTION" },
        { 5, "PARTIAL DECLINE OF ORDERQTY" },
        { 6, "CANCEL ON TRADING HALT" },
        { 7, "CANCEL ON SYSTEM FAILURE" },
        { 8, "MARKET" },
        { 9, "CANCELED NOT BEST" },
        { 99, "OTHER" },
        { 11, "PEG REFRESH" },
        { 0, NULL }
    };


    static const  value_string BusinessRejectReason_val[] = {
        { 0, "OTHER" },
        { 1, "UNKNOWN ID" },
        { 2, "UNKNOWN SECURITY" },
        { 3, "UNSUPPORTED MESSAGE TYPE" },
        { 4, "APPLICATION NOT AVAILABLE" },
        { 5, "CONDITIONALLY REQUIRED FIELD MISSING" },
        { 6, "NOT AUTHORIZED" },
        { 7, "DELIVERTO FIRM NOT AVAILABLE AT THIS TIME" },
        { 18, "INVALID PRICE INCREMENT" },
        { 0, NULL }
    };


    static const  value_string MsgDirection_val[] = {
        { 'R', "RECEIVE" },
        { 'S', "SEND" },
        { 0, NULL }
    };


    static const  value_string DiscretionInst_val[] = {
        { '0', "RELATED TO DISPLAYED PRICE" },
        { '1', "RELATED TO MARKET PRICE" },
        { '2', "RELATED TO PRIMARY PRICE" },
        { '3', "RELATED TO LOCAL PRIMARY PRICE" },
        { '4', "RELATED TO MIDPOINT PRICE" },
        { '5', "RELATED TO LAST TRADE PRICE" },
        { '6', "RELATED TO VWAP" },
        { '7', "AVERAGE PRICE GUARANTEE" },
        { 0, NULL }
    };


    static const  value_string BidType_val[] = {
        { 1, "NON DISCLOSED STYLE" },
        { 2, "DISCLOSED STYLE" },
        { 3, "NO BIDDING PROCESS" },
        { 0, NULL }
    };


    static const  value_string BidDescriptorType_val[] = {
        { 1, "SECTOR" },
        { 2, "COUNTRY" },
        { 3, "INDEX" },
        { 0, NULL }
    };


    static const  value_string SideValueInd_val[] = {
        { 1, "SIDE VALUE 1" },
        { 2, "SIDE VALUE 2" },
        { 0, NULL }
    };


    static const  value_string LiquidityIndType_val[] = {
        { 1, "5 DAY MOVING AVERAGE" },
        { 2, "20 DAY MOVING AVERAGE" },
        { 3, "NORMAL MARKET SIZE" },
        { 4, "OTHER" },
        { 0, NULL }
    };


    static const  value_string ExchangeForPhysical_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ProgRptReqs_val[] = {
        { 1, "BUY SIDE EXPLICITLY REQUESTS STATUS USING STATUE REQUEST" },
        { 2, "SELL SIDE PERIODICALLY SENDS STATUS USING LIST STATUS PERIOD OPTIONALLY SPECIFIED IN PROGRESSPERIOD" },
        { 3, "REAL TIME EXECUTION REPORTS" },
        { 0, NULL }
    };


    static const  value_string IncTaxInd_val[] = {
        { 1, "NET" },
        { 2, "GROSS" },
        { 0, NULL }
    };


    static const  value_string BidTradeType_val[] = {
        { 'A', "AGENCY" },
        { 'G', "VWAP GUARANTEE" },
        { 'J', "GUARANTEED CLOSE" },
        { 'R', "RISK TRADE" },
        { 0, NULL }
    };


    static const  value_string BasisPxType_val[] = {
        { '2', "CLOSING PRICE AT MORNING SESSION" },
        { '3', "CLOSING PRICE" },
        { '4', "CURRENT PRICE" },
        { '5', "SQ" },
        { '6', "VWAP THROUGH A DAY" },
        { '7', "VWAP THROUGH A MORNING SESSION" },
        { '8', "VWAP THROUGH AN AFTERNOON SESSION" },
        { '9', "VWAP THROUGH A DAY EXCEPT YORI" },
        { 'A', "VWAP THROUGH A MORNING SESSION EXCEPT YORI" },
        { 'B', "VWAP THROUGH AN AFTERNOON SESSION EXCEPT YORI" },
        { 'C', "STRIKE" },
        { 'D', "OPEN" },
        { 'Z', "OTHERS" },
        { 0, NULL }
    };


    static const  value_string PriceType_val[] = {
        { 1, "PERCENTAGE" },
        { 10, "FIXED CABINET TRADE PRICE" },
        { 11, "VARIABLE CABINET TRADE PRICE" },
        { 2, "PER UNIT" },
        { 3, "FIXED AMOUNT" },
        { 4, "DISCOUNT" },
        { 5, "PREMIUM" },
        { 6, "SPREAD" },
        { 7, "TED PRICE" },
        { 8, "TED YIELD" },
        { 9, "YIELD" },
        { 13, "PRODUCT TICKS IN HALFS" },
        { 14, "PRODUCT TICKS IN FOURTHS" },
        { 15, "PRODUCT TICKS IN EIGHTS" },
        { 16, "PRODUCT TICKS IN SIXTEENTHS" },
        { 17, "PRODUCT TICKS IN THIRTY SECONDS" },
        { 18, "PRODUCT TICKS IN SIXTY FORTHS" },
        { 19, "PRODUCT TICKS IN ONE TWENTY EIGHTS" },
        { 0, NULL }
    };


    static const  value_string GTBookingInst_val[] = {
        { 0, "BOOK OUT ALL TRADES ON DAY OF EXECUTION" },
        { 1, "ACCUMULATE EXECTUIONS UNTIL FORDER IS FILLED OR EXPIRES" },
        { 2, "ACCUMULATE UNTIL VERBALLLY NOTIFIED OTHERWISE" },
        { 0, NULL }
    };


    static const  value_string ListStatusType_val[] = {
        { 1, "ACK" },
        { 2, "RESPONSE" },
        { 3, "TIMED" },
        { 4, "EXEC STARTED" },
        { 5, "ALL DONE" },
        { 6, "ALERT" },
        { 0, NULL }
    };


    static const  value_string NetGrossInd_val[] = {
        { 1, "NET" },
        { 2, "GROSS" },
        { 0, NULL }
    };


    static const  value_string ListOrderStatus_val[] = {
        { 1, "IN BIDDING PROCESS" },
        { 2, "RECEIVED FOR EXECUTION" },
        { 3, "EXECUTING" },
        { 4, "CANCELLING" },
        { 5, "ALERT" },
        { 6, "ALL DONE" },
        { 7, "REJECT" },
        { 0, NULL }
    };


    static const  value_string ListExecInstType_val[] = {
        { '1', "IMMEDIATE" },
        { '2', "WAIT FOR EXECUT INSTRUCTION" },
        { '3', "EXCHANGE SWITCH CIV ORDER 3" },
        { '4', "EXCHANGE SWITCH CIV ORDER 4" },
        { '5', "EXCHANGE SWITCH CIV ORDER 5" },
        { 0, NULL }
    };


    static const  value_string CxlRejResponseTo_val[] = {
        { '1', "ORDER CANCEL REQUEST" },
        { '2', "ORDER CANCEL REPLACE REQUEST" },
        { 0, NULL }
    };


    static const  value_string MultiLegReportingType_val[] = {
        { '1', "SINGLE SECURITY" },
        { '2', "INDIVIDUAL LEG OF A MULTI LEG SECURITY" },
        { '3', "MULTI LEG SECURITY" },
        { 0, NULL }
    };


    static const  value_string PartyIDSource_val[] = {
        { '1', "KOREAN INVESTOR ID" },
        { '2', "TAIWANESE QUALIFIED FOREIGN INVESTOR ID QFII FID" },
        { '3', "TAIWANESE TRADING ACCT" },
        { '4', "MALAYSIAN CENTRAL DEPOSITORY" },
        { '5', "CHINESE INVESTOR ID" },
        { '6', "UK NATIONAL INSURANCE OR PENSION NUMBER" },
        { '7', "US SOCIAL SECURITY NUMBER" },
        { '8', "US EMPLOYER OR TAX ID NUMBER" },
        { '9', "AUSTRALIAN BUSINESS NUMBER" },
        { 'A', "AUSTRALIAN TAX FILE NUMBER" },
        { 'B', "BIC" },
        { 'C', "GENERALLY ACCEPTED MARKET PARTICIPANT IDENTIFIER" },
        { 'D', "PROPRIETARY" },
        { 'E', "ISO COUNTRY CODE" },
        { 'F', "SETTLEMENT ENTITY LOCATION" },
        { 'G', "MIC" },
        { 'H', "CSD PARTICIPANT MEMBER CODE" },
        { 'I', "DIRECTED BROKER THREE CHARACTER ACRONYM AS DEFINED IN ISITC ETC BEST PRACTICE GUIDELINES DOCUMENT" },
        { 0, NULL }
    };


    static const  value_string PartyRole_val[] = {
        { 1, "EXECUTING FIRM" },
        { 10, "SETTLEMENT LOCATION" },
        { 11, "ORDER ORIGINATION TRADER" },
        { 12, "EXECUTING TRADER" },
        { 13, "ORDER ORIGINATION FIRM" },
        { 14, "GIVEUP CLEARING FIRM" },
        { 15, "CORRESPONDENT CLEARING FIRM" },
        { 16, "EXECUTING SYSTEM" },
        { 17, "CONTRA FIRM" },
        { 18, "CONTRA CLEARING FIRM" },
        { 19, "SPONSORING FIRM" },
        { 2, "BROKER OF CREDIT" },
        { 20, "UNDERLYING CONTRA FIRM" },
        { 21, "CLEARING ORGANIZATION" },
        { 22, "EXCHANGE" },
        { 24, "CUSTOMER ACCOUNT" },
        { 25, "CORRESPONDENT CLEARING ORGANIZATION" },
        { 26, "CORRESPONDENT BROKER" },
        { 27, "BUYER SELLER" },
        { 28, "CUSTODIAN" },
        { 29, "INTERMEDIARY" },
        { 3, "CLIENT ID" },
        { 30, "AGENT" },
        { 31, "SUB CUSTODIAN" },
        { 32, "BENEFICIARY" },
        { 33, "INTERESTED PARTY" },
        { 34, "REGULATORY BODY" },
        { 35, "LIQUIDITY PROVIDER" },
        { 36, "ENTERING TRADER" },
        { 37, "CONTRA TRADER" },
        { 38, "POSITION ACCOUNT" },
        { 4, "CLEARING FIRM" },
        { 5, "INVESTOR ID" },
        { 6, "INTRODUCING FIRM" },
        { 7, "ENTERING FIRM" },
        { 8, "LOCATE" },
        { 9, "FUND MANAGER CLIENT ID" },
        { 60, "INTRODUCING BROKER" },
        { 41, "CONTRA POSITION ACCOUNT" },
        { 42, "CONTRA EXCHANGE" },
        { 43, "INTERNAL CARRY ACCOUNT" },
        { 44, "ORDER ENTRY OPERATOR ID" },
        { 45, "SECONDARY ACCOUNT NUMBER" },
        { 46, "FOREIGN FIRM" },
        { 47, "THIRD PARTY ALLOCATION FIRM" },
        { 48, "CLAIMING ACCOUNT" },
        { 49, "ASSET MANAGER" },
        { 50, "PLEDGOR ACCOUNT" },
        { 51, "PLEDGEE ACCOUNT" },
        { 52, "LARGE TRADER REPORTABLE ACCOUNT" },
        { 53, "TRADER MNEMONIC" },
        { 54, "SENDER LOCATION" },
        { 55, "SESSION ID" },
        { 56, "ACCEPTABLE COUNTERPARTY" },
        { 57, "UNACCEPTABLE COUNTERPARTY" },
        { 58, "ENTERING UNIT" },
        { 59, "EXECUTING UNIT" },
        { 39, "CONTRA INVESTOR ID" },
        { 40, "TRANSFER TO FIRM" },
        { 61, "QUOTE ORIGINATOR" },
        { 62, "REPORT ORIGINATOR" },
        { 63, "SYSTEMATIC INTERNALISER" },
        { 64, "MULTILATERAL TRADING FACILITY" },
        { 65, "REGULATED MARKET" },
        { 66, "MARKET MAKER" },
        { 67, "INVESTMENT FIRM" },
        { 68, "HOST COMPETENT AUTHORITY" },
        { 69, "HOME COMPETENT AUTHORITY" },
        { 70, "COMPETENT AUTHORITY OF THE MOST RELEVANT MARKET IN TERMS OF LIQUIDITY" },
        { 71, "COMPETENT AUTHORITY OF THE TRANSACTION" },
        { 72, "REPORTING INTERMEDIARY" },
        { 73, "EXECUTION VENUE" },
        { 74, "MARKET DATA ENTRY ORIGINATOR" },
        { 75, "LOCATION ID" },
        { 76, "DESK ID" },
        { 77, "MARKET DATA MARKET" },
        { 78, "ALLOCATION ENTITY" },
        { 79, "PRIME BROKER PROVIDING GENERAL TRADE SERVICES" },
        { 80, "STEP OUT FIRM" },
        { 81, "BROKERCLEARINGID" },
        { 82, "CENTRAL REGISTRATION DEPOSITORY" },
        { 83, "CLEARING ACCOUNT" },
        { 84, "ACCEPTABLE SETTLING COUNTERPARTY" },
        { 85, "UNACCEPTABLE SETTLING COUNTERPARTY" },
        { 0, NULL }
    };


    static const  value_string Product_val[] = {
        { 1, "AGENCY" },
        { 10, "MORTGAGE" },
        { 11, "MUNICIPAL" },
        { 12, "OTHER" },
        { 13, "FINANCING" },
        { 2, "COMMODITY" },
        { 3, "CORPORATE" },
        { 4, "CURRENCY" },
        { 5, "EQUITY" },
        { 6, "GOVERNMENT" },
        { 7, "INDEX" },
        { 8, "LOAN" },
        { 9, "MONEYMARKET" },
        { 0, NULL }
    };


    static const  value_string TestMessageIndicator_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string QuantityType_val[] = {
        { 1, "SHARES" },
        { 2, "BONDS" },
        { 3, "CURRENTFACE" },
        { 4, "ORIGINALFACE" },
        { 5, "CURRENCY" },
        { 6, "CONTRACTS" },
        { 7, "OTHER" },
        { 8, "PAR" },
        { 0, NULL }
    };


    static const  value_string RoundingDirection_val[] = {
        { '0', "ROUND TO NEAREST" },
        { '1', "ROUND DOWN" },
        { '2', "ROUND UP" },
        { 0, NULL }
    };


    static const  value_string DistribPaymentMethod_val[] = {
        { 1, "CREST" },
        { 10, "BPAY" },
        { 11, "HIGH VALUE CLEARING SYSTEM HVACS" },
        { 12, "REINVEST IN FUND" },
        { 2, "NSCC" },
        { 3, "EUROCLEAR" },
        { 4, "CLEARSTREAM" },
        { 5, "CHEQUE" },
        { 6, "TELEGRAPHIC TRANSFER" },
        { 7, "FED WIRE" },
        { 8, "DIRECT CREDIT" },
        { 9, "ACH CREDIT" },
        { 0, NULL }
    };


    static const  value_string CancellationRights_val[] = {
        { 'N', "NO EXECUTION ONLY" },
        { 'M', "NO WAIVER AGREEMENT" },
        { 'O', "NO INSTITUTIONAL" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string MoneyLaunderingStatus_val[] = {
        { '1', "EXEMPT 1" },
        { '2', "EXEMPT 2" },
        { '3', "EXEMPT 3" },
        { 'N', "NOT CHECKED" },
        { 'Y', "PASSED" },
        { 0, NULL }
    };


    static const  value_string ExecPriceType_val[] = {
        { 'B', "BID PRICE" },
        { 'C', "CREATION PRICE" },
        { 'D', "CREATION PRICE PLUS ADJUSTMENT PERCENT" },
        { 'E', "CREATION PRICE PLUS ADJUSTMENT AMOUNT" },
        { 'O', "OFFER PRICE" },
        { 'P', "OFFER PRICE MINUS ADJUSTMENT PERCENT" },
        { 'Q', "OFFER PRICE MINUS ADJUSTMENT AMOUNT" },
        { 'S', "SINGLE PRICE" },
        { 0, NULL }
    };


    static const  value_string TradeReportTransType_val[] = {
        { 0, "NEW" },
        { 1, "CANCEL" },
        { 2, "REPLACE" },
        { 3, "RELEASE" },
        { 4, "REVERSE" },
        { 5, "CANCEL DUE TO BACK OUT OF TRADE" },
        { 0, NULL }
    };


    static const  value_string PaymentMethod_val[] = {
        { 1, "CREST" },
        { 10, "DIRECT CREDIT" },
        { 11, "CREDIT CARD" },
        { 12, "ACH DEBIT" },
        { 13, "ACH CREDIT" },
        { 14, "BPAY" },
        { 15, "HIGH VALUE CLEARING SYSTEM" },
        { 2, "NSCC" },
        { 3, "EUROCLEAR" },
        { 4, "CLEARSTREAM" },
        { 5, "CHEQUE" },
        { 6, "TELEGRAPHIC TRANSFER" },
        { 7, "FED WIRE" },
        { 8, "DEBIT CARD" },
        { 9, "DIRECT DEBIT" },
        { 0, NULL }
    };


    static const  value_string TaxAdvantageType_val[] = {
        { 0, "NONE NOT APPLICABLE" },
        { 1, "MAXI ISA" },
        { 10, "EMPLOYEE 10" },
        { 11, "EMPLOYER 11" },
        { 12, "EMPLOYER 12" },
        { 13, "NON FUND PROTOTYPE IRA" },
        { 14, "NON FUND QUALIFIED PLAN" },
        { 15, "DEFINED CONTRIBUTION PLAN" },
        { 16, "INDIVIDUAL RETIREMENT ACCOUNT 16" },
        { 17, "INDIVIDUAL RETIREMENT ACCOUNT 17" },
        { 18, "KEOGH" },
        { 19, "PROFIT SHARING PLAN" },
        { 2, "TESSA" },
        { 20, "401" },
        { 21, "SELF DIRECTED IRA" },
        { 22, "403" },
        { 23, "457" },
        { 24, "ROTH IRA 24" },
        { 25, "ROTH IRA 25" },
        { 26, "ROTH CONVERSION IRA 26" },
        { 27, "ROTH CONVERSION IRA 27" },
        { 28, "EDUCATION IRA 28" },
        { 29, "EDUCATION IRA 29" },
        { 3, "MINI CASH ISA" },
        { 4, "MINI STOCKS AND SHARES ISA" },
        { 5, "MINI INSURANCE ISA" },
        { 6, "CURRENT YEAR PAYMENT" },
        { 7, "PRIOR YEAR PAYMENT" },
        { 8, "ASSET TRANSFER" },
        { 9, "EMPLOYEE 9" },
        { 999, "OTHER" },
        { 0, NULL }
    };


    static const  value_string FundRenewWaiv_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string RegistStatus_val[] = {
        { 'A', "ACCEPTED" },
        { 'H', "HELD" },
        { 'N', "REMINDER" },
        { 'R', "REJECTED" },
        { 0, NULL }
    };


    static const  value_string RegistRejReasonCode_val[] = {
        { 1, "INVALID UNACCEPTABLE ACCOUNT TYPE" },
        { 10, "INVALID UNACEEPTABLE INVESTOR ID SOURCE" },
        { 11, "INVALID UNACCEPTABLE DATE OF BIRTH" },
        { 12, "INVALID UNACCEPTABLE INVESTOR COUNTRY OF RESIDENCE" },
        { 13, "INVALID UNACCEPTABLE NO DISTRIB INSTNS" },
        { 14, "INVALID UNACCEPTABLE DISTRIB PERCENTAGE" },
        { 15, "INVALID UNACCEPTABLE DISTRIB PAYMENT METHOD" },
        { 16, "INVALID UNACCEPTABLE CASH DISTRIB AGENT ACCT NAME" },
        { 17, "INVALID UNACCEPTABLE CASH DISTRIB AGENT CODE" },
        { 18, "INVALID UNACCEPTABLE CASH DISTRIB AGENT ACCT NUM" },
        { 2, "INVALID UNACCEPTABLE TAX EXEMPT TYPE" },
        { 3, "INVALID UNACCEPTABLE OWNERSHIP TYPE" },
        { 4, "INVALID UNACCEPTABLE NO REG DETAILS" },
        { 5, "INVALID UNACCEPTABLE REG SEQ NO" },
        { 6, "INVALID UNACCEPTABLE REG DETAILS" },
        { 7, "INVALID UNACCEPTABLE MAILING DETAILS" },
        { 8, "INVALID UNACCEPTABLE MAILING INSTRUCTIONS" },
        { 9, "INVALID UNACCEPTABLE INVESTOR ID" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string RegistTransType_val[] = {
        { '0', "NEW" },
        { '1', "REPLACE" },
        { '2', "CANCEL" },
        { 0, NULL }
    };


    static const  value_string OwnershipType_val[] = {
        { '2', "JOINT TRUSTEES" },
        { 'J', "JOINT INVESTORS" },
        { 'T', "TENANTS IN COMMON" },
        { 0, NULL }
    };


    static const  value_string ContAmtType_val[] = {
        { 1, "COMMISSION AMOUNT" },
        { 10, "EXIT CHARGE PERCENT" },
        { 11, "FUND BASED RENEWAL COMMISSION PERCENT" },
        { 12, "PROJECTED FUND VALUE" },
        { 13, "FUND BASED RENEWAL COMMISSION AMOUNT 13" },
        { 14, "FUND BASED RENEWAL COMMISSION AMOUNT 14" },
        { 15, "NET SETTLEMENT AMOUNT" },
        { 2, "COMMISSION PERCENT" },
        { 3, "INITIAL CHARGE AMOUNT" },
        { 4, "INITIAL CHARGE PERCENT" },
        { 5, "DISCOUNT AMOUNT" },
        { 6, "DISCOUNT PERCENT" },
        { 7, "DILUTION LEVY AMOUNT" },
        { 8, "DILUTION LEVY PERCENT" },
        { 9, "EXIT CHARGE AMOUNT" },
        { 0, NULL }
    };


    static const  value_string OwnerType_val[] = {
        { 1, "INDIVIDUAL INVESTOR" },
        { 10, "NETWORKING SUB ACCOUNT" },
        { 11, "NON PROFIT ORGANIZATION" },
        { 12, "CORPORATE BODY" },
        { 13, "NOMINEE" },
        { 2, "PUBLIC COMPANY" },
        { 3, "PRIVATE COMPANY" },
        { 4, "INDIVIDUAL TRUSTEE" },
        { 5, "COMPANY TRUSTEE" },
        { 6, "PENSION PLAN" },
        { 7, "CUSTODIAN UNDER GIFTS TO MINORS ACT" },
        { 8, "TRUSTS" },
        { 9, "FIDUCIARIES" },
        { 0, NULL }
    };


    static const  value_string OrderCapacity_val[] = {
        { 'A', "AGENCY" },
        { 'G', "PROPRIETARY" },
        { 'I', "INDIVIDUAL" },
        { 'P', "PRINCIPAL" },
        { 'R', "RISKLESS PRINCIPAL" },
        { 'W', "AGENT FOR OTHER MEMBER" },
        { 0, NULL }
    };


    static const  value_string OrderRestrictions_val[] = {
        { '1', "PROGRAM TRADE" },
        { '2', "INDEX ARBITRAGE" },
        { '3', "NON INDEX ARBITRAGE" },
        { '4', "COMPETING MARKET MAKER" },
        { '5', "ACTING AS MARKET MAKER OR SPECIALIST IN THE SECURITY" },
        { '6', "ACTING AS MARKET MAKER OR SPECIALIST IN THE UNDERLYING SECURITY OF A DERIVATIVE SECURITY" },
        { '7', "FOREIGN ENTITY" },
        { '8', "EXTERNAL MARKET PARTICIPANT" },
        { '9', "EXTERNAL INTER CONNECTED MARKET LINKAGE" },
        { 'A', "RISKLESS ARBITRAGE" },
        { 'B', "ISSUER HOLDING" },
        { 'C', "ISSUE PRICE STABILIZATION" },
        { 'D', "NON ALGORITHMIC" },
        { 'E', "ALGORITHMIC" },
        { 'F', "CROSS" },
        { 0, NULL }
    };


    static const  value_string MassCancelRequestType_val[] = {
        { '1', "CANCEL ORDERS FOR A SECURITY" },
        { '2', "CANCEL ORDERS FOR AN UNDERLYING SECURITY" },
        { '3', "CANCEL ORDERS FOR A PRODUCT" },
        { '4', "CANCEL ORDERS FOR A CFICODE" },
        { '5', "CANCEL ORDERS FOR A SECURITYTYPE" },
        { '6', "CANCEL ORDERS FOR A TRADING SESSION" },
        { '7', "CANCEL ALL ORDERS" },
        { '8', "CANCEL ORDERS FOR A MARKET" },
        { '9', "CANCEL ORDERS FOR A MARKET SEGMENT" },
        { 'A', "CANCEL ORDERS FOR A SECURITY GROUP" },
        { 'B', "CANCEL FOR SECURITY ISSUER" },
        { 'C', "CANCEL FOR ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string MassCancelResponse_val[] = {
        { '0', "CANCEL REQUEST REJECTED" },
        { '1', "CANCEL ORDERS FOR A SECURITY" },
        { '2', "CANCEL ORDERS FOR AN UNDERLYING SECURITY" },
        { '3', "CANCEL ORDERS FOR A PRODUCT" },
        { '4', "CANCEL ORDERS FOR A CFICODE" },
        { '5', "CANCEL ORDERS FOR A SECURITYTYPE" },
        { '6', "CANCEL ORDERS FOR A TRADING SESSION" },
        { '7', "CANCEL ALL ORDERS" },
        { '8', "CANCEL ORDERS FOR A MARKET" },
        { '9', "CANCEL ORDERS FOR A MARKET SEGMENT" },
        { 'A', "CANCEL ORDERS FOR A SECURITY GROUP" },
        { 'B', "CANCEL ORDERS FOR A SECURITIES ISSUER" },
        { 'C', "CANCEL ORDERS FOR ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string MassCancelRejectReason_val[] = {
        { 0, "MASS CANCEL NOT SUPPORTED" },
        { 1, "INVALID OR UNKNOWN SECURITY" },
        { 2, "INVALID OR UNKNOWN UNDERLYING SECURITY" },
        { 3, "INVALID OR UNKNOWN PRODUCT" },
        { 4, "INVALID OR UNKNOWN CFICODE" },
        { 5, "INVALID OR UNKNOWN SECURITYTYPE" },
        { 6, "INVALID OR UNKNOWN TRADING SESSION" },
        { 99, "OTHER" },
        { 7, "INVALID OR UNKNOWN MARKET" },
        { 8, "INVALID OR UNKNOWN MARKET SEGMENT" },
        { 9, "INVALID OR UNKNOWN SECURITY GROUP" },
        { 10, "INVALID OR UNKNOWN SECURITY ISSUER" },
        { 11, "INVALID OR UNKNOWN ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string QuoteType_val[] = {
        { 0, "INDICATIVE" },
        { 1, "TRADEABLE" },
        { 2, "RESTRICTED TRADEABLE" },
        { 3, "COUNTER" },
        { 0, NULL }
    };


    static const  value_string CashMargin_val[] = {
        { '1', "CASH" },
        { '2', "MARGIN OPEN" },
        { '3', "MARGIN CLOSE" },
        { 0, NULL }
    };


    static const  value_string Scope_val[] = {
        { '1', "LOCAL MARKET" },
        { '2', "NATIONAL" },
        { '3', "GLOBAL" },
        { 0, NULL }
    };


    static const  value_string MDImplicitDelete_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string CrossType_val[] = {
        { 1, "CROSS AON" },
        { 2, "CROSS IOC" },
        { 3, "CROSS ONE SIDE" },
        { 4, "CROSS SAME PRICE" },
        { 0, NULL }
    };


    static const  value_string CrossPrioritization_val[] = {
        { 0, "NONE" },
        { 1, "BUY SIDE IS PRIORITIZED" },
        { 2, "SELL SIDE IS PRIORITIZED" },
        { 0, NULL }
    };


    static const  value_string NoSides_val[] = {
        { '1', "ONE SIDE" },
        { '2', "BOTH SIDES" },
        { 0, NULL }
    };


    static const  value_string SecurityListRequestType_val[] = {
        { 0, "SYMBOL" },
        { 1, "SECURITYTYPE AND OR CFICODE" },
        { 2, "PRODUCT" },
        { 3, "TRADINGSESSIONID" },
        { 4, "ALL SECURITIES" },
        { 5, "MARKETID OR MARKETID PLUS MARKETSEGMENTID" },
        { 0, NULL }
    };


    static const  value_string SecurityRequestResult_val[] = {
        { 0, "VALID REQUEST" },
        { 1, "INVALID OR UNSUPPORTED REQUEST" },
        { 2, "NO INSTRUMENTS FOUND THAT MATCH SELECTION CRITERIA" },
        { 3, "NOT AUTHORIZED TO RETRIEVE INSTRUMENT DATA" },
        { 4, "INSTRUMENT DATA TEMPORARILY UNAVAILABLE" },
        { 5, "REQUEST FOR INSTRUMENT DATA NOT SUPPORTED" },
        { 0, NULL }
    };


    static const  value_string MultiLegRptTypeReq_val[] = {
        { 0, "REPORT BY MULITLEG SECURITY ONLY" },
        { 1, "REPORT BY MULTILEG SECURITY AND BY INSTRUMENT LEGS BELONGING TO THE MULTILEG SECURITY" },
        { 2, "REPORT BY INSTRUMENT LEGS BELONGING TO THE MULTILEG SECURITY ONLY" },
        { 0, NULL }
    };


    static const  value_string TradSesStatusRejReason_val[] = {
        { 1, "UNKNOWN OR INVALID TRADINGSESSIONID" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string TradeRequestType_val[] = {
        { 0, "ALL TRADES" },
        { 1, "MATCHED TRADES MATCHING CRITERIA PROVIDED ON REQUEST" },
        { 2, "UNMATCHED TRADES THAT MATCH CRITERIA" },
        { 3, "UNREPORTED TRADES THAT MATCH CRITERIA" },
        { 4, "ADVISORIES THAT MATCH CRITERIA" },
        { 0, NULL }
    };


    static const  value_string PreviouslyReported_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string MatchStatus_val[] = {
        { '0', "COMPARED MATCHED OR AFFIRMED" },
        { '1', "UNCOMPARED UNMATCHED OR UNAFFIRMED" },
        { '2', "ADVISORY OR ALERT" },
        { 0, NULL }
    };


    static const  string_string MatchType_val[] = {
        { "A1", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADE TYPE AND SPECIAL TRADE INDICATOR PLUS FOUR BADGES AND EXECUTION TIME" },
        { "A2", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADE TYPE AND SPECIAL TRADE INDICATOR PLUS FOUR BADGES" },
        { "A3", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADE TYPE AND SPECIAL TRADE INDICATOR PLUS TWO BADGES AND EXECUTION TIME" },
        { "A4", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADE TYPE AND SPECIAL TRADE INDICATOR PLUS TWO BADGES" },
        { "A5", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADETYPE AND SPECIAL TRADE INDICATOR PLUS EXECUTION TIME" },
        { "M3", "ACT ACCEPTED TRADE" },
        { "M4", "ACT DEFAULT TRADE" },
        { "M5", "ACT DEFAULT AFTER M2" },
        { "M6", "ACT M6 MATCH" },
        { "AQ", "COMPARED RECORDS RESULTING FROM STAMPED ADVISORIES OR SPECIALIST ACCEPTS PAIR OFFS" },
        { "M1", "EXACT MATCH ON TRADE DATE STOCK SYMBOL QUANTITY PRICE TRADE TYPE AND SPECIAL TRADE INDICATOR MINUS BADGES AND TIMES ACT M1 MATCH" },
        { "M2", "SUMMARIZED MATCH MINUS BADGES AND TIMES ACT M2 MATCH" },
        { "MT", "OCS LOCKED IN NON ACT" },
        { "S1", "SUMMARIZED MATCH USING A1 EXACT MATCH CRITERIA EXCEPT QUANTITY IS SUMMARIED" },
        { "S2", "SUMMARIZED MATCH USING A2 EXACT MATCH CRITERIA EXCEPT QUANTITY IS SUMMARIZED" },
        { "S3", "SUMMARIZED MATCH USING A3 EXACT MATCH CRITERIA EXCEPT QUANTITY IS SUMMARIZED" },
        { "S4", "SUMMARIZED MATCH USING A4 EXACT MATCH CRITERIA EXCEPT QUANTITY IS SUMMARIZED" },
        { "S5", "SUMMARIZED MATCH USING A5 EXACT MATCH CRITERIA EXCEPT QUANTITY IS SUMMARIZED" },
        { "1", "ONE PARTY TRADE REPORT" },
        { "2", "TWO PARTY TRADE REPORT" },
        { "3", "CONFIRMED TRADE REPORT" },
        { "4", "AUTO MATCH" },
        { "5", "CROSS AUCTION" },
        { "6", "COUNTER ORDER SELECTION" },
        { "7", "CALL AUCTION" },
        { "8", "ISSUING BUY BACK AUCTION" },
        { 0, NULL }
    };


    static const  value_string OddLot_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ClearingInstruction_val[] = {
        { 0, "PROCESS NORMALLY" },
        { 1, "EXCLUDE FROM ALL NETTING" },
        { 10, "AUTOMATIC GIVE UP MODE" },
        { 11, "QUALIFIED SERVICE REPRESENTATIVE QSR" },
        { 12, "CUSTOMER TRADE" },
        { 13, "SELF CLEARING" },
        { 2, "BILATERAL NETTING ONLY" },
        { 3, "EX CLEARING" },
        { 4, "SPECIAL TRADE" },
        { 5, "MULTILATERAL NETTING" },
        { 6, "CLEAR AGAINST CENTRAL COUNTERPARTY" },
        { 7, "EXCLUDE FROM CENTRAL COUNTERPARTY" },
        { 8, "MANUAL MODE" },
        { 9, "AUTOMATIC POSTING MODE" },
        { 0, NULL }
    };


    static const  value_string AccountType_val[] = {
        { 1, "ACCOUNT IS CARRIED ON CUSTOMER SIDE OF THE BOOKS" },
        { 2, "ACCOUNT IS CARRIED ON NON CUSTOMER SIDE OF BOOKS" },
        { 3, "HOUSE TRADER" },
        { 4, "FLOOR TRADER" },
        { 6, "ACCOUNT IS CARRIED ON NON CUSTOMER SIDE OF BOOKS AND IS CROSS MARGINED" },
        { 7, "ACCOUNT IS HOUSE TRADER AND IS CROSS MARGINED" },
        { 8, "JOINT BACK OFFICE ACCOUNT" },
        { 0, NULL }
    };


    static const  value_string CustOrderCapacity_val[] = {
        { 1, "MEMBER TRADING FOR THEIR OWN ACCOUNT" },
        { 2, "CLEARING FIRM TRADING FOR ITS PROPRIETARY ACCOUNT" },
        { 3, "MEMBER TRADING FOR ANOTHER MEMBER" },
        { 4, "ALL OTHER" },
        { 0, NULL }
    };


    static const  value_string MassStatusReqType_val[] = {
        { 1, "STATUS FOR ORDERS FOR A SECURITY" },
        { 2, "STATUS FOR ORDERS FOR AN UNDERLYING SECURITY" },
        { 3, "STATUS FOR ORDERS FOR A PRODUCT" },
        { 4, "STATUS FOR ORDERS FOR A CFICODE" },
        { 5, "STATUS FOR ORDERS FOR A SECURITYTYPE" },
        { 6, "STATUS FOR ORDERS FOR A TRADING SESSION" },
        { 7, "STATUS FOR ALL ORDERS" },
        { 8, "STATUS FOR ORDERS FOR A PARTYID" },
        { 9, "STATUS FOR SECURITY ISSUER" },
        { 10, "STATUS FOR ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string DayBookingInst_val[] = {
        { '0', "CAN TRIGGER BOOKING WITHOUT REFERENCE TO THE ORDER INITIATOR" },
        { '1', "SPEAK WITH ORDER INITIATOR BEFORE BOOKING" },
        { '2', "ACCUMULATE" },
        { 0, NULL }
    };


    static const  value_string BookingUnit_val[] = {
        { '0', "EACH PARTIAL EXECUTION IS A BOOKABLE UNIT" },
        { '1', "AGGREGATE PARTIAL EXECUTIONS ON THIS ORDER AND BOOK ONE TRADE PER ORDER" },
        { '2', "AGGREGATE EXECUTIONS FOR THIS SYMBOL SIDE AND SETTLEMENT DATE" },
        { 0, NULL }
    };


    static const  value_string PreallocMethod_val[] = {
        { '0', "PRO RATA" },
        { '1', "DO NOT PRO RATA" },
        { 0, NULL }
    };


    static const  string_string TradingSessionSubID_val[] = {
        { "1", "PRE TRADING" },
        { "2", "OPENING OR OPENING AUCTION" },
        { "3", "3" },
        { "4", "CLOSING OR CLOSING AUCTION" },
        { "5", "POST TRADING" },
        { "6", "INTRADAY AUCTION" },
        { "7", "QUIESCENT" },
        { 0, NULL }
    };


    static const  value_string AllocType_val[] = {
        { 1, "CALCULATED" },
        { 2, "PRELIMINARY" },
        { 3, "SELLSIDE CALCULATED USING PRELIMINARY" },
        { 4, "SELLSIDE CALCULATED WITHOUT PRELIMINARY" },
        { 5, "READY TO BOOK" },
        { 6, "BUYSIDE READY TO BOOK" },
        { 7, "WAREHOUSE INSTRUCTION" },
        { 8, "REQUEST TO INTERMEDIARY" },
        { 9, "ACCEPT" },
        { 10, "REJECT" },
        { 11, "ACCEPT PENDING" },
        { 12, "INCOMPLETE GROUP" },
        { 13, "COMPLETE GROUP" },
        { 14, "REVERSAL PENDING" },
        { 0, NULL }
    };


    static const  string_string ClearingFeeIndicator_val[] = {
        { "1", "1ST YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "2", "2ND YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "3", "3RD YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "4", "4TH YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "5", "5TH YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "9", "6TH YEAR DELEGATE TRADING FOR OWN ACCOUNT" },
        { "B", "CBOE MEMBER" },
        { "C", "NON MEMBER AND CUSTOMER" },
        { "E", "EQUITY MEMBER AND CLEARING MEMBER" },
        { "F", "FULL AND ASSOCIATE MEMBER TRADING FOR OWN ACCOUNT AND AS FLOOR BROKERS" },
        { "H", "106H AND 106J FIRMS" },
        { "I", "GIM IDEM AND COM MEMBERSHIP INTEREST HOLDERS" },
        { "L", "LESSEE 106F EMPLOYEES" },
        { "M", "ALL OTHER OWNERSHIP TYPES" },
        { 0, NULL }
    };


    static const  value_string WorkingIndicator_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string PriorityIndicator_val[] = {
        { 0, "PRIORITY UNCHANGED" },
        { 1, "LOST PRIORITY AS RESULT OF ORDER CHANGE" },
        { 0, NULL }
    };


    static const  value_string LegalConfirm_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string SecDefStatus_val[] = {
        { 0, "PENDING APPROVAL" },
        { 1, "APPROVED" },
        { 2, "REJECTED" },
        { 3, "UNAUTHORIZED REQUEST" },
        { 4, "INVALID DEFINITION REQUEST" },
        { 0, NULL }
    };


    static const  value_string QuoteRequestRejectReason_val[] = {
        { 1, "UNKNOWN SYMBOL" },
        { 10, "PASS" },
        { 2, "EXCHANGE" },
        { 3, "QUOTE REQUEST EXCEEDS LIMIT" },
        { 4, "TOO LATE TO ENTER" },
        { 5, "INVALID PRICE" },
        { 6, "NOT AUTHORIZED TO REQUEST QUOTE" },
        { 7, "NO MATCH FOR INQUIRY" },
        { 8, "NO MARKET FOR INSTRUMENT" },
        { 9, "NO INVENTORY" },
        { 99, "OTHER" },
        { 11, "INSUFFICIENT CREDIT" },
        { 0, NULL }
    };


    static const  value_string AcctIDSource_val[] = {
        { 1, "BIC" },
        { 2, "SID CODE" },
        { 3, "TFM" },
        { 4, "OMGEO" },
        { 5, "DTCC CODE" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string ConfirmStatus_val[] = {
        { 1, "RECEIVED" },
        { 2, "MISMATCHED ACCOUNT" },
        { 3, "MISSING SETTLEMENT INSTRUCTIONS" },
        { 4, "CONFIRMED" },
        { 5, "REQUEST REJECTED" },
        { 0, NULL }
    };


    static const  value_string ConfirmTransType_val[] = {
        { 0, "NEW" },
        { 1, "REPLACE" },
        { 2, "CANCEL" },
        { 0, NULL }
    };


    static const  value_string DeliveryForm_val[] = {
        { 1, "BOOK ENTRY" },
        { 2, "BEARER" },
        { 0, NULL }
    };


    static const  value_string LegSwapType_val[] = {
        { 1, "PAR FOR PAR" },
        { 2, "MODIFIED DURATION" },
        { 4, "RISK" },
        { 5, "PROCEEDS" },
        { 0, NULL }
    };


    static const  value_string QuotePriceType_val[] = {
        { 1, "PERCENT" },
        { 10, "YIELD" },
        { 2, "PER SHARE" },
        { 3, "FIXED AMOUNT" },
        { 4, "DISCOUNT" },
        { 5, "PREMIUM" },
        { 6, "SPREAD" },
        { 7, "TED PRICE" },
        { 8, "TED YIELD" },
        { 9, "YIELD SPREAD" },
        { 0, NULL }
    };


    static const  value_string QuoteRespType_val[] = {
        { 1, "HIT LIFT" },
        { 2, "COUNTER" },
        { 3, "EXPIRED" },
        { 4, "COVER" },
        { 5, "DONE AWAY" },
        { 6, "PASS" },
        { 7, "END TRADE" },
        { 8, "TIMED OUT" },
        { 0, NULL }
    };


    static const  string_string PosType_val[] = {
        { "ALC", "ALLOCATION TRADE QTY" },
        { "AS", "OPTION ASSIGNMENT" },
        { "ASF", "AS OF TRADE QTY" },
        { "DLV", "DELIVERY QTY" },
        { "ETR", "ELECTRONIC TRADE QTY" },
        { "EX", "OPTION EXERCISE QTY" },
        { "FIN", "END OF DAY QTY" },
        { "IAS", "INTRA SPREAD QTY" },
        { "IES", "INTER SPREAD QTY" },
        { "PA", "ADJUSTMENT QTY" },
        { "PIT", "PIT TRADE QTY" },
        { "SOD", "START OF DAY QTY" },
        { "SPL", "INTEGRAL SPLIT" },
        { "TA", "TRANSACTION FROM ASSIGNMENT" },
        { "TOT", "TOTAL TRANSACTION QTY" },
        { "TQ", "TRANSACTION QUANTITY" },
        { "TRF", "TRANSFER TRADE QTY" },
        { "TX", "TRANSACTION FROM EXERCISE" },
        { "XM", "CROSS MARGIN QTY" },
        { "RCV", "RECEIVE QUANTITY" },
        { "CAA", "CORPORATE ACTION ADJUSTMENT" },
        { "DN", "DELIVERY NOTICE QTY" },
        { "EP", "EXCHANGE FOR PHYSICAL QTY" },
        { "PNTN", "PRIVATELY NEGOTIATED TRADE QTY" },
        { "DLT", "NET DELTA QTY" },
        { "CEA", "CREDIT EVENT ADJUSTMENT" },
        { "SEA", "SUCCESSION EVENT ADJUSTMENT" },
        { 0, NULL }
    };


    static const  value_string PosQtyStatus_val[] = {
        { 0, "SUBMITTED" },
        { 1, "ACCEPTED" },
        { 2, "REJECTED" },
        { 0, NULL }
    };


    static const  string_string PosAmtType_val[] = {
        { "CASH", "CASH AMOUNT" },
        { "CRES", "CASH RESIDUAL AMOUNT" },
        { "FMTM", "FINAL MARK TO MARKET AMOUNT" },
        { "IMTM", "INCREMENTAL MARK TO MARKET AMOUNT" },
        { "PREM", "PREMIUM AMOUNT" },
        { "SMTM", "START OF DAY MARK TO MARKET AMOUNT" },
        { "TVAR", "TRADE VARIATION AMOUNT" },
        { "VADJ", "VALUE ADJUSTED AMOUNT" },
        { "SETL", "SETTLEMENT VALUE" },
        { "ICPN", "INITIAL TRADE COUPON AMOUNT" },
        { "ACPN", "ACCRUED COUPON AMOUNT" },
        { "CPN", "COUPON AMOUNT" },
        { "IACPN", "INCREMENTAL ACCRUED COUPON" },
        { "CMTM", "COLLATERALIZED MARK TO MARKET" },
        { "ICMTM", "INCREMENTAL COLLATERALIZED MARK TO MARKET" },
        { "DLV", "COMPENSATION AMOUNT" },
        { "BANK", "TOTAL BANKED AMOUNT" },
        { "COLAT", "TOTAL COLLATERALIZED AMOUNT" },
        { 0, NULL }
    };


    static const  value_string PosTransType_val[] = {
        { 1, "EXERCISE" },
        { 2, "DO NOT EXERCISE" },
        { 3, "POSITION ADJUSTMENT" },
        { 4, "POSITION CHANGE SUBMISSION MARGIN DISPOSITION" },
        { 5, "PLEDGE" },
        { 6, "LARGE TRADER SUBMISSION" },
        { 0, NULL }
    };


    static const  value_string PosMaintAction_val[] = {
        { 1, "NEW" },
        { 2, "REPLACE" },
        { 3, "CANCEL" },
        { 4, "REVERSE" },
        { 0, NULL }
    };


    static const  string_string SettlSessID_val[] = {
        { "ITD", "INTRADAY" },
        { "RTH", "REGULAR TRADING HOURS" },
        { "ETH", "ELECTRONIC TRADING HOURS" },
        { "EOD", "END OF DAY" },
        { 0, NULL }
    };


    static const  value_string AdjustmentType_val[] = {
        { 0, "PROCESS REQUEST AS MARGIN DISPOSITION" },
        { 1, "DELTA PLUS" },
        { 2, "DELTA MINUS" },
        { 3, "FINAL" },
        { 0, NULL }
    };


    static const  value_string PosMaintStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "ACCEPTED WITH WARNINGS" },
        { 2, "REJECTED" },
        { 3, "COMPLETED" },
        { 4, "COMPLETED WITH WARNINGS" },
        { 0, NULL }
    };


    static const  value_string PosMaintResult_val[] = {
        { 0, "SUCCESSFUL COMPLETION" },
        { 1, "REJECTED" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string PosReqType_val[] = {
        { 0, "POSITIONS" },
        { 1, "TRADES" },
        { 2, "EXERCISES" },
        { 3, "ASSIGNMENTS" },
        { 4, "SETTLEMENT ACTIVITY" },
        { 5, "BACKOUT MESSAGE" },
        { 6, "DELTA POSITIONS" },
        { 0, NULL }
    };


    static const  value_string ResponseTransportType_val[] = {
        { 0, "INBAND" },
        { 1, "OUT OF BAND" },
        { 0, NULL }
    };


    static const  value_string PosReqResult_val[] = {
        { 0, "VALID REQUEST" },
        { 1, "INVALID OR UNSUPPORTED REQUEST" },
        { 2, "NO POSITIONS FOUND THAT MATCH CRITERIA" },
        { 3, "NOT AUTHORIZED TO REQUEST POSITIONS" },
        { 4, "REQUEST FOR POSITION NOT SUPPORTED" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string PosReqStatus_val[] = {
        { 0, "COMPLETED" },
        { 1, "COMPLETED WITH WARNINGS" },
        { 2, "REJECTED" },
        { 0, NULL }
    };


    static const  value_string SettlPriceType_val[] = {
        { 1, "FINAL" },
        { 2, "THEORETICAL" },
        { 0, NULL }
    };


    static const  value_string AssignmentMethod_val[] = {
        { 'P', "PRO RATA" },
        { 'R', "RANDOM" },
        { 0, NULL }
    };


    static const  value_string ExerciseMethod_val[] = {
        { 'A', "AUTOMATIC" },
        { 'M', "MANUAL" },
        { 0, NULL }
    };


    static const  value_string TradeRequestResult_val[] = {
        { 0, "SUCCESSFUL" },
        { 1, "INVALID OR UNKNOWN INSTRUMENT" },
        { 2, "INVALID TYPE OF TRADE REQUESTED" },
        { 3, "INVALID PARTIES" },
        { 4, "INVALID TRANSPORT TYPE REQUESTED" },
        { 5, "INVALID DESTINATION REQUESTED" },
        { 8, "TRADEREQUESTTYPE NOT SUPPORTED" },
        { 9, "NOT AUTHORIZED" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string TradeRequestStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "COMPLETED" },
        { 2, "REJECTED" },
        { 0, NULL }
    };


    static const  value_string TradeReportRejectReason_val[] = {
        { 0, "SUCCESSFUL" },
        { 1, "INVALID PARTY ONFORMATION" },
        { 2, "UNKNOWN INSTRUMENT" },
        { 3, "UNAUTHORIZED TO REPORT TRADES" },
        { 4, "INVALID TRADE TYPE" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string SideMultiLegReportingType_val[] = {
        { 1, "SINGLE SECURITY" },
        { 2, "INDIVIDUAL LEG OF A MULTILEG SECURITY" },
        { 3, "MULTILEG SECURITY" },
        { 0, NULL }
    };


    static const  value_string TrdRegTimestampType_val[] = {
        { 1, "EXECUTION TIME" },
        { 2, "TIME IN" },
        { 3, "TIME OUT" },
        { 4, "BROKER RECEIPT" },
        { 5, "BROKER EXECUTION" },
        { 6, "DESK RECEIPT" },
        { 7, "SUBMISSION TO CLEARING" },
        { 0, NULL }
    };


    static const  value_string ConfirmType_val[] = {
        { 1, "STATUS" },
        { 2, "CONFIRMATION" },
        { 3, "CONFIRMATION REQUEST REJECTED" },
        { 0, NULL }
    };


    static const  value_string ConfirmRejReason_val[] = {
        { 1, "MISMATCHED ACCOUNT" },
        { 2, "MISSING SETTLEMENT INSTRUCTIONS" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string BookingType_val[] = {
        { 0, "REGULAR BOOKING" },
        { 1, "CFD" },
        { 2, "TOTAL RETURN SWAP" },
        { 0, NULL }
    };


    static const  value_string AllocSettlInstType_val[] = {
        { 0, "USE DEFAULT INSTRUCTIONS" },
        { 1, "DERIVE FROM PARAMETERS PROVIDED" },
        { 2, "FULL DETAILS PROVIDED" },
        { 3, "SSI DB IDS PROVIDED" },
        { 4, "PHONE FOR INSTRUCTIONS" },
        { 0, NULL }
    };


    static const  value_string DlvyInstType_val[] = {
        { 'C', "CASH" },
        { 'S', "SECURITIES" },
        { 0, NULL }
    };


    static const  value_string TerminationType_val[] = {
        { 1, "OVERNIGHT" },
        { 2, "TERM" },
        { 3, "FLEXIBLE" },
        { 4, "OPEN" },
        { 0, NULL }
    };


    static const  value_string SettlInstReqRejCode_val[] = {
        { 0, "UNABLE TO PROCESS REQUEST" },
        { 1, "UNKNOWN ACCOUNT" },
        { 2, "NO MATCHING SETTLEMENT INSTRUCTIONS FOUND" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string AllocReportType_val[] = {
        { 3, "SELLSIDE CALCULATED USING PRELIMINARY" },
        { 4, "SELLSIDE CALCULATED WITHOUT PRELIMINARY" },
        { 5, "WAREHOUSE RECAP" },
        { 8, "REQUEST TO INTERMEDIARY" },
        { 2, "PRELIMINARY REQUEST TO INTERMEDIARY" },
        { 9, "ACCEPT" },
        { 10, "REJECT" },
        { 11, "ACCEPT PENDING" },
        { 12, "COMPLETE" },
        { 14, "REVERSE PENDING" },
        { 0, NULL }
    };


    static const  value_string AllocCancReplaceReason_val[] = {
        { 1, "ORIGINAL DETAILS INCOMPLETE INCORRECT" },
        { 2, "CHANGE IN UNDERLYING ORDER DETAILS" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string AllocAccountType_val[] = {
        { 1, "ACCOUNT IS CARRIED PN CUSTOMER SIDE OF BOOKS" },
        { 2, "ACCOUNT IS CARRIED ON NON CUSTOMER SIDE OF BOOKS" },
        { 3, "HOUSE TRADER" },
        { 4, "FLOOR TRADER" },
        { 6, "ACCOUNT IS CARRIED ON NON CUSTOMER SIDE OF BOOKS AND IS CROSS MARGINED" },
        { 7, "ACCOUNT IS HOUSE TRADER AND IS CROSS MARGINED" },
        { 8, "JOINT BACK OFFICE ACCOUNT" },
        { 0, NULL }
    };


    static const  value_string PartySubIDType_val[] = {
        { 1, "FIRM" },
        { 10, "SECURITIES ACCOUNT NUMBER" },
        { 11, "REGISTRATION NUMBER" },
        { 12, "REGISTERED ADDRESS 12" },
        { 13, "REGULATORY STATUS" },
        { 14, "REGISTRATION NAME" },
        { 15, "CASH ACCOUNT NUMBER" },
        { 16, "BIC" },
        { 17, "CSD PARTICIPANT MEMBER CODE" },
        { 18, "REGISTERED ADDRESS 18" },
        { 19, "FUND ACCOUNT NAME" },
        { 2, "PERSON" },
        { 20, "TELEX NUMBER" },
        { 21, "FAX NUMBER" },
        { 22, "SECURITIES ACCOUNT NAME" },
        { 23, "CASH ACCOUNT NAME" },
        { 24, "DEPARTMENT" },
        { 25, "LOCATION DESK" },
        { 26, "POSITION ACCOUNT TYPE" },
        { 3, "SYSTEM" },
        { 4, "APPLICATION" },
        { 5, "FULL LEGAL NAME OF FIRM" },
        { 6, "POSTAL ADDRESS" },
        { 7, "PHONE NUMBER" },
        { 8, "EMAIL ADDRESS" },
        { 9, "CONTACT NAME" },
        { 27, "SECURITY LOCATE ID" },
        { 28, "MARKET MAKER" },
        { 29, "ELIGIBLE COUNTERPARTY" },
        { 30, "PROFESSIONAL CLIENT" },
        { 31, "LOCATION" },
        { 32, "EXECUTION VENUE" },
        { 33, "CURRENCY DELIVERY IDENTIFIER" },
        { 0, NULL }
    };


    static const  value_string AllocIntermedReqType_val[] = {
        { 1, "PENDING ACCEPT" },
        { 2, "PENDING RELEASE" },
        { 3, "PENDING REVERSAL" },
        { 4, "ACCEPT" },
        { 5, "BLOCK LEVEL REJECT" },
        { 6, "ACCOUNT LEVEL REJECT" },
        { 0, NULL }
    };


    static const  value_string ApplQueueResolution_val[] = {
        { 0, "NO ACTION TAKEN" },
        { 1, "QUEUE FLUSHED" },
        { 2, "OVERLAY LAST" },
        { 3, "END SESSION" },
        { 0, NULL }
    };


    static const  value_string ApplQueueAction_val[] = {
        { 0, "NO ACTION TAKEN" },
        { 1, "QUEUE FLUSHED" },
        { 2, "OVERLAY LAST" },
        { 3, "END SESSION" },
        { 0, NULL }
    };


    static const  value_string AvgPxIndicator_val[] = {
        { 0, "NO AVERAGE PRICING" },
        { 1, "TRADE IS PART OF AN AVERAGE PRICE GROUP IDENTIFIED BY THE TRADELINKID" },
        { 2, "LAST TRADE IS THE AVERAGE PRICE GROUP IDENTIFIED BY THE TRADELINKID" },
        { 0, NULL }
    };


    static const  value_string TradeAllocIndicator_val[] = {
        { 0, "ALLOCATION NOT REQUIRED" },
        { 1, "ALLOCATION REQUIRED" },
        { 2, "USE ALLOCATION PROVIDED WITH THE TRADE" },
        { 3, "ALLOCATION GIVE UP EXECUTOR" },
        { 4, "ALLOCATION FROM EXECUTOR" },
        { 5, "ALLOCATION TO CLAIM ACCOUNT" },
        { 0, NULL }
    };


    static const  value_string ExpirationCycle_val[] = {
        { 0, "EXPIRE ON TRADING SESSION CLOSE" },
        { 1, "EXPIRE ON TRADING SESSION OPEN" },
        { 2, "TRADING ELIGIBILITY EXPIRATION SPECIFIED IN THE DATE AND TIME FIELDS EVENTDATE" },
        { 0, NULL }
    };


    static const  value_string TrdType_val[] = {
        { 0, "REGULAR TRADE" },
        { 1, "BLOCK TRADE 1" },
        { 10, "AFTER HOURS TRADE" },
        { 2, "EFP" },
        { 3, "TRANSFER" },
        { 4, "LATE TRADE" },
        { 5, "T TRADE" },
        { 6, "WEIGHTED AVERAGE PRICE TRADE" },
        { 7, "BUNCHED TRADE" },
        { 8, "LATE BUNCHED TRADE" },
        { 9, "PRIOR REFERENCE PRICE TRADE" },
        { 11, "EXCHANGE FOR RISK" },
        { 12, "EXCHANGE FOR SWAP" },
        { 13, "EXCHANGE OF FUTURES FOR" },
        { 14, "EXCHANGE OF OPTIONS FOR OPTIONS" },
        { 15, "TRADING AT SETTLEMENT" },
        { 16, "ALL OR NONE" },
        { 17, "FUTURES LARGE ORDER EXECUTION" },
        { 18, "EXCHANGE OF FUTURES FOR FUTURES" },
        { 19, "OPTION INTERIM TRADE" },
        { 20, "OPTION CABINET TRADE" },
        { 22, "PRIVATELY NEGOTIATED TRADES" },
        { 23, "SUBSTITUTION OF FUTURES FOR FORWARDS" },
        { 24, "ERROR TRADE" },
        { 25, "SPECIAL CUM DIVIDEND" },
        { 26, "SPECIAL EX DIVIDEND" },
        { 27, "SPECIAL CUM COUPON" },
        { 28, "SPECIAL EX COUPON" },
        { 29, "CASH SETTLEMENT" },
        { 30, "SPECIAL PRICE" },
        { 31, "GUARANTEED DELIVERY" },
        { 32, "SPECIAL CUM RIGHTS" },
        { 33, "SPECIAL EX RIGHTS" },
        { 34, "SPECIAL CUM CAPITAL REPAYMENTS" },
        { 35, "SPECIAL EX CAPITAL REPAYMENTS" },
        { 36, "SPECIAL CUM BONUS" },
        { 37, "SPECIAL EX BONUS" },
        { 38, "BLOCK TRADE 38" },
        { 39, "WORKED PRINCIPAL TRADE" },
        { 40, "BLOCK TRADES" },
        { 41, "NAME CHANGE" },
        { 42, "PORTFOLIO TRANSFER" },
        { 43, "PROROGATION BUY" },
        { 44, "PROROGATION SELL" },
        { 45, "OPTION EXERCISE" },
        { 46, "DELTA NEUTRAL TRANSACTION" },
        { 47, "FINANCING TRANSACTION" },
        { 48, "NON STANDARD SETTLEMENT" },
        { 49, "DERIVATIVE RELATED TRANSACTION" },
        { 50, "PORTFOLIO TRADE" },
        { 51, "VOLUME WEIGHTED AVERAGE TRADE" },
        { 52, "EXCHANGE GRANTED TRADE" },
        { 53, "REPURCHASE AGREEMENT" },
        { 54, "OTC" },
        { 55, "EXCHANGE BASIS FACILITY" },
        { 0, NULL }
    };


    static const  value_string TrdSubType_val[] = {
        { 0, "CMTA" },
        { 1, "INTERNAL TRANSFER OR ADJUSTMENT" },
        { 2, "EXTERNAL TRANSFER OR TRANSFER OF ACCOUNT" },
        { 3, "REJECT FOR SUBMITTING SIDE" },
        { 4, "ADVISORY FOR CONTRA SIDE" },
        { 5, "OFFSET DUE TO AN ALLOCATION" },
        { 6, "ONSET DUE TO AN ALLOCATION" },
        { 7, "DIFFERENTIAL SPREAD" },
        { 8, "IMPLIED SPREAD LEG EXECUTED AGAINST AN OUTRIGHT" },
        { 9, "TRANSACTION FROM EXERCISE" },
        { 10, "TRANSACTION FROM ASSIGNMENT" },
        { 11, "ACATS" },
        { 14, "AI" },
        { 15, "B" },
        { 16, "K" },
        { 17, "LC" },
        { 18, "M" },
        { 19, "N" },
        { 20, "NM" },
        { 21, "NR" },
        { 22, "P" },
        { 23, "PA" },
        { 24, "PC" },
        { 25, "PN" },
        { 26, "R" },
        { 27, "RO" },
        { 28, "RT" },
        { 29, "SW" },
        { 30, "T" },
        { 31, "WN" },
        { 32, "WT" },
        { 33, "OFF HOURS TRADE" },
        { 34, "ON HOURS TRADE" },
        { 35, "OTC QUOTE" },
        { 36, "CONVERTED SWAP" },
        { 37, "CROSSED TRADE" },
        { 38, "INTERIM PROTECTED TRADE" },
        { 39, "LARGE IN SCALE" },
        { 0, NULL }
    };


    static const  value_string PegMoveType_val[] = {
        { 0, "FLOATING" },
        { 1, "FIXED" },
        { 0, NULL }
    };


    static const  value_string PegOffsetType_val[] = {
        { 0, "PRICE" },
        { 1, "BASIS POINTS" },
        { 2, "TICKS" },
        { 3, "PRICE TIER" },
        { 0, NULL }
    };


    static const  value_string PegLimitType_val[] = {
        { 0, "OR BETTER" },
        { 1, "STRICT" },
        { 2, "OR WORSE" },
        { 0, NULL }
    };


    static const  value_string PegRoundDirection_val[] = {
        { 1, "MORE AGGRESSIVE" },
        { 2, "MORE PASSIVE" },
        { 0, NULL }
    };


    static const  value_string PegScope_val[] = {
        { 1, "LOCAL" },
        { 2, "NATIONAL" },
        { 3, "GLOBAL" },
        { 4, "NATIONAL EXCLUDING LOCAL" },
        { 0, NULL }
    };


    static const  value_string DiscretionMoveType_val[] = {
        { 0, "FLOATING" },
        { 1, "FIXED" },
        { 0, NULL }
    };


    static const  value_string DiscretionOffsetType_val[] = {
        { 0, "PRICE" },
        { 1, "BASIS POINTS" },
        { 2, "TICKS" },
        { 3, "PRICE TIER" },
        { 0, NULL }
    };


    static const  value_string DiscretionLimitType_val[] = {
        { 0, "OR BETTER" },
        { 1, "STRICT" },
        { 2, "OR WORSE" },
        { 0, NULL }
    };


    static const  value_string DiscretionRoundDirection_val[] = {
        { 1, "MORE AGGRESSIVE" },
        { 2, "MORE PASSIVE" },
        { 0, NULL }
    };


    static const  value_string DiscretionScope_val[] = {
        { 1, "LOCAL" },
        { 2, "NATIONAL" },
        { 3, "GLOBAL" },
        { 4, "NATIONAL EXCLUDING LOCAL" },
        { 0, NULL }
    };


    static const  value_string TargetStrategy_val[] = {
        { 1, "VWAP" },
        { 2, "PARTICIPATE" },
        { 3, "MINIMIZE MARKET IMPACT" },
        { 0, NULL }
    };


    static const  value_string LastLiquidityInd_val[] = {
        { 1, "ADDED LIQUIDITY" },
        { 2, "REMOVED LIQUIDITY" },
        { 3, "LIQUIDITY ROUTED OUT" },
        { 4, "AUCTION" },
        { 0, NULL }
    };


    static const  value_string PublishTrdIndicator_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string ShortSaleReason_val[] = {
        { 0, "DEALER SOLD SHORT" },
        { 1, "DEALER SOLD SHORT EXEMPT" },
        { 2, "SELLING CUSTOMER SOLD SHORT" },
        { 3, "SELLING CUSTOMER SOLD SHORT EXEMPT" },
        { 4, "QUALIFIED SERVICE REPRESENTATIVE" },
        { 5, "QSR OR AGU CONTRA SIDE SOLD SHORT EXEMPT" },
        { 0, NULL }
    };


    static const  value_string QtyType_val[] = {
        { 0, "UNITS" },
        { 1, "CONTRACTS" },
        { 2, "UNITS OF MEASURE PER TIME UNIT" },
        { 0, NULL }
    };


    static const  value_string TradeReportType_val[] = {
        { 0, "SUBMIT" },
        { 1, "ALLEGED 1" },
        { 2, "ACCEPT" },
        { 3, "DECLINE" },
        { 4, "ADDENDUM" },
        { 5, "NO WAS" },
        { 6, "TRADE REPORT CANCEL" },
        { 7, "7" },
        { 8, "DEFAULTED" },
        { 9, "INVALID CMTA" },
        { 10, "PENDED" },
        { 11, "ALLEGED NEW" },
        { 12, "ALLEGED ADDENDUM" },
        { 13, "ALLEGED NO WAS" },
        { 14, "ALLEGED TRADE REPORT CANCEL" },
        { 15, "ALLEGED 15" },
        { 0, NULL }
    };


    static const  value_string AllocNoOrdersType_val[] = {
        { 0, "NOT SPECIFIED" },
        { 1, "EXPLICIT LIST PROVIDED" },
        { 0, NULL }
    };


    static const  value_string EventType_val[] = {
        { 1, "PUT" },
        { 2, "CALL" },
        { 3, "TENDER" },
        { 4, "SINKING FUND CALL" },
        { 99, "OTHER" },
        { 5, "ACTIVATION" },
        { 6, "INACTIVIATION" },
        { 7, "LAST ELIGIBLE TRADE DATE" },
        { 8, "SWAP START DATE" },
        { 9, "SWAP END DATE" },
        { 11, "SWAP NEXT START DATE" },
        { 10, "SWAP ROLL DATE" },
        { 12, "SWAP NEXT ROLL DATE" },
        { 13, "FIRST DELIVERY DATE" },
        { 14, "LAST DELIVERY DATE" },
        { 15, "INITIAL INVENTORY DUE DATE" },
        { 16, "FINAL INVENTORY DUE DATE" },
        { 17, "FIRST INTENT DATE" },
        { 18, "LAST INTENT DATE" },
        { 19, "POSITION REMOVAL DATE" },
        { 0, NULL }
    };


    static const  value_string InstrAttribType_val[] = {
        { 1, "FLAT" },
        { 10, "ORIGINAL ISSUE DISCOUNT" },
        { 11, "CALLABLE PUTTABLE" },
        { 12, "ESCROWED TO MATURITY" },
        { 13, "ESCROWED TO REDEMPTION DATE" },
        { 14, "PRE REFUNDED" },
        { 15, "IN DEFAULT" },
        { 16, "UNRATED" },
        { 17, "TAXABLE" },
        { 18, "INDEXED" },
        { 19, "SUBJECT TO ALTERNATIVE MINIMUM TAX" },
        { 2, "ZERO COUPON" },
        { 20, "ORIGINAL ISSUE DISCOUNT PRICE SUPPLY PRICE IN THE INSTRATTRIBVALUE" },
        { 21, "CALLABLE BELOW MATURITY VALUE" },
        { 22, "CALLABLE WITHOUT NOTICE BY MAIL TO HOLDER UNLESS REGISTERED" },
        { 3, "INTEREST BEARING" },
        { 4, "NO PERIODIC PAYMENTS" },
        { 5, "VARIABLE RATE" },
        { 6, "LESS FEE FOR PUT" },
        { 7, "STEPPED COUPON" },
        { 8, "COUPON PERIOD" },
        { 9, "WHEN AND IF ISSUED" },
        { 99, "TEXT SUPPLY THE TEXT OF THE ATTRIBUTE OR DISCLAIMER IN THE INSTRATTRIBVALUE" },
        { 23, "PRICE TICK RULES FOR SECURITY" },
        { 24, "TRADE TYPE ELIGIBILITY DETAILS FOR SECURITY" },
        { 25, "INSTRUMENT DENOMINATOR" },
        { 26, "INSTRUMENT NUMERATOR" },
        { 27, "INSTRUMENT PRICE PRECISION" },
        { 28, "INSTRUMENT STRIKE PRICE" },
        { 29, "TRADEABLE INDICATOR" },
        { 0, NULL }
    };


    static const  value_string CPProgram_val[] = {
        { 1, "3" },
        { 2, "4" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string MiscFeeBasis_val[] = {
        { 0, "ABSOLUTE" },
        { 1, "PER UNIT" },
        { 2, "PERCENTAGE" },
        { 0, NULL }
    };


    static const  value_string LastFragment_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string CollAsgnReason_val[] = {
        { 0, "INITIAL" },
        { 1, "SCHEDULED" },
        { 2, "TIME WARNING" },
        { 3, "MARGIN DEFICIENCY" },
        { 4, "MARGIN EXCESS" },
        { 5, "FORWARD COLLATERAL DEMAND" },
        { 6, "EVENT OF DEFAULT" },
        { 7, "ADVERSE TAX EVENT" },
        { 0, NULL }
    };


    static const  value_string CollInquiryQualifier_val[] = {
        { 0, "TRADE DATE" },
        { 1, "GC INSTRUMENT" },
        { 2, "COLLATERAL INSTRUMENT" },
        { 3, "SUBSTITUTION ELIGIBLE" },
        { 4, "NOT ASSIGNED" },
        { 5, "PARTIALLY ASSIGNED" },
        { 6, "FULLY ASSIGNED" },
        { 7, "OUTSTANDING TRADES" },
        { 0, NULL }
    };


    static const  value_string CollAsgnTransType_val[] = {
        { 0, "NEW" },
        { 1, "REPLACE" },
        { 2, "CANCEL" },
        { 3, "RELEASE" },
        { 4, "REVERSE" },
        { 0, NULL }
    };


    static const  value_string CollAsgnRespType_val[] = {
        { 0, "RECEIVED" },
        { 1, "ACCEPTED" },
        { 2, "DECLINED" },
        { 3, "REJECTED" },
        { 0, NULL }
    };


    static const  value_string CollAsgnRejectReason_val[] = {
        { 0, "UNKNOWN DEAL" },
        { 1, "UNKNOWN OR INVALID INSTRUMENT" },
        { 2, "UNAUTHORIZED TRANSACTION" },
        { 3, "INSUFFICIENT COLLATERAL" },
        { 4, "INVALID TYPE OF COLLATERAL" },
        { 5, "EXCESSIVE SUBSTITUTION" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string CollStatus_val[] = {
        { 0, "UNASSIGNED" },
        { 1, "PARTIALLY ASSIGNED" },
        { 2, "ASSIGNMENT PROPOSED" },
        { 3, "ASSIGNED" },
        { 4, "CHALLENGED" },
        { 0, NULL }
    };


    static const  value_string LastRptRequested_val[] = {
        { 'N', "NO" },
        { 'Y', "YES" },
        { 0, NULL }
    };


    static const  value_string DeliveryType_val[] = {
        { 0, "VERSUS PAYMENT DELIVER" },
        { 1, "FREE DELIVER" },
        { 2, "TRI PARTY" },
        { 3, "HOLD IN CUSTODY" },
        { 0, NULL }
    };


    static const  value_string UserRequestType_val[] = {
        { 1, "LOG ON USER" },
        { 2, "LOG OFF USER" },
        { 3, "CHANGE PASSWORD FOR USER" },
        { 4, "REQUEST INDIVIDUAL USER STATUS" },
        { 0, NULL }
    };


    static const  value_string UserStatus_val[] = {
        { 1, "LOGGED IN" },
        { 2, "NOT LOGGED IN" },
        { 3, "USER NOT RECOGNISED" },
        { 4, "PASSWORD INCORRECT" },
        { 5, "PASSWORD CHANGED" },
        { 6, "OTHER" },
        { 7, "FORCED USER LOGOUT BY EXCHANGE" },
        { 8, "SESSION SHUTDOWN WARNING" },
        { 0, NULL }
    };


    static const  value_string StatusValue_val[] = {
        { 1, "CONNECTED" },
        { 2, "NOT CONNECTED 2" },
        { 3, "NOT CONNECTED 3" },
        { 4, "IN PROCESS" },
        { 0, NULL }
    };


    static const  value_string NetworkRequestType_val[] = {
        { 1, "SNAPSHOT" },
        { 2, "SUBSCRIBE" },
        { 4, "STOP SUBSCRIBING" },
        { 8, "LEVEL OF DETAIL THEN NOCOMPIDS BECOMES REQUIRED" },
        { 0, NULL }
    };


    static const  value_string NetworkStatusResponseType_val[] = {
        { 1, "FULL" },
        { 2, "INCREMENTAL UPDATE" },
        { 0, NULL }
    };


    static const  value_string TrdRptStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "REJECTED" },
        { 3, "ACCEPTED WITH ERRORS" },
        { 0, NULL }
    };


    static const  value_string AffirmStatus_val[] = {
        { 1, "RECEIVED" },
        { 2, "CONFIRM REJECTED IE NOT AFFIRMED" },
        { 3, "AFFIRMED" },
        { 0, NULL }
    };


    static const  value_string CollAction_val[] = {
        { 0, "RETAIN" },
        { 1, "ADD" },
        { 2, "REMOVE" },
        { 0, NULL }
    };


    static const  value_string CollInquiryStatus_val[] = {
        { 0, "ACCEPTED" },
        { 1, "ACCEPTED WITH WARNINGS" },
        { 2, "COMPLETED" },
        { 3, "COMPLETED WITH WARNINGS" },
        { 4, "REJECTED" },
        { 0, NULL }
    };


    static const  value_string CollInquiryResult_val[] = {
        { 0, "SUCCESSFUL" },
        { 1, "INVALID OR UNKNOWN INSTRUMENT" },
        { 2, "INVALID OR UNKNOWN COLLATERAL TYPE" },
        { 3, "INVALID PARTIES" },
        { 4, "INVALID TRANSPORT TYPE REQUESTED" },
        { 5, "INVALID DESTINATION REQUESTED" },
        { 6, "NO COLLATERAL FOUND FOR THE TRADE SPECIFIED" },
        { 7, "NO COLLATERAL FOUND FOR THE ORDER SPECIFIED" },
        { 8, "COLLATERAL INQUIRY TYPE NOT SUPPORTED" },
        { 9, "UNAUTHORIZED FOR COLLATERAL INQUIRY" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string StrategyParameterType_val[] = {
        { 1, "INT" },
        { 2, "LENGTH" },
        { 3, "NUMINGROUP" },
        { 4, "SEQNUM" },
        { 5, "TAGNUM" },
        { 6, "FLOAT" },
        { 7, "QTY" },
        { 8, "PRICE" },
        { 9, "PRICEOFFSET" },
        { 10, "AMT" },
        { 11, "PERCENTAGE" },
        { 12, "CHAR" },
        { 13, "BOOLEAN" },
        { 14, "STRING" },
        { 15, "MULTIPLECHARVALUE" },
        { 16, "CURRENCY" },
        { 17, "EXCHANGE" },
        { 18, "MONTHYEAR" },
        { 19, "UTCTIMESTAMP" },
        { 20, "UTCTIMEONLY" },
        { 21, "LOCALMKTDATE" },
        { 22, "UTCDATEONLY" },
        { 23, "DATA" },
        { 24, "MULTIPLESTRINGVALUE" },
        { 25, "COUNTRY" },
        { 26, "LANGUAGE" },
        { 27, "TZTIMEONLY" },
        { 28, "TZTIMESTAMP" },
        { 29, "TENOR" },
        { 0, NULL }
    };


    static const  string_string SecurityStatus_val[] = {
        { "1", "ACTIVE" },
        { "2", "INACTIVE" },
        { 0, NULL }
    };


    static const  string_string UnderlyingCashType_val[] = {
        { "FIXED", "FIXED" },
        { "DIFF", "DIFF" },
        { 0, NULL }
    };


    static const  value_string UnderlyingSettlementType_val[] = {
        { 2, "T PLUS 1" },
        { 4, "T PLUS 3" },
        { 5, "T PLUS 4" },
        { 0, NULL }
    };


    static const  value_string SecurityUpdateAction_val[] = {
        { 'A', "ADD" },
        { 'D', "DELETE" },
        { 'M', "MODIFY" },
        { 0, NULL }
    };


    static const  value_string ExpirationQtyType_val[] = {
        { 1, "AUTO EXERCISE" },
        { 2, "NON AUTO EXERCISE" },
        { 3, "FINAL WILL BE EXERCISED" },
        { 4, "CONTRARY INTENTION" },
        { 5, "DIFFERENCE" },
        { 0, NULL }
    };


    static const  value_string IndividualAllocType_val[] = {
        { 1, "SUB ALLOCATE" },
        { 2, "THIRD PARTY ALLOCATION" },
        { 0, NULL }
    };


    static const  string_string UnitOfMeasure_val[] = {
        { "MWh", "MEGAWATT HOURS" },
        { "MMBtu", "ONE MILLION BTU" },
        { "Bbl", "BARRELS" },
        { "Gal", "GALLONS" },
        { "t", "METRIC TONS" },
        { "tn", "TONS" },
        { "MMbbl", "MILLION BARRELS" },
        { "lbs", "POUNDS" },
        { "oz_tr", "TROY OUNCES" },
        { "USD", "US DOLLARS" },
        { "Bcf", "BILLION CUBIC FEET" },
        { "Bu", "BUSHELS" },
        { "Alw", "ALLOWANCES" },
        { 0, NULL }
    };


    static const  string_string TimeUnit_val[] = {
        { "S", "SECOND" },
        { "Min", "MINUTE" },
        { "H", "HOUR" },
        { "D", "DAY" },
        { "Wk", "WEEK" },
        { "Mo", "MONTH" },
        { "Yr", "YEAR" },
        { 0, NULL }
    };


    static const  value_string AllocMethod_val[] = {
        { 1, "AUTOMATIC" },
        { 2, "GUARANTOR" },
        { 3, "MANUAL" },
        { 0, NULL }
    };


    static const  value_string AsOfIndicator_val[] = {
        { '0', "FALSE" },
        { '1', "TRUE" },
        { 0, NULL }
    };


    static const  value_string MDBookType_val[] = {
        { 1, "TOP OF BOOK" },
        { 2, "PRICE DEPTH" },
        { 3, "ORDER DEPTH" },
        { 0, NULL }
    };


    static const  value_string MDOriginType_val[] = {
        { 0, "BOOK" },
        { 1, "OFF BOOK" },
        { 2, "CROSS" },
        { 0, NULL }
    };


    static const  string_string CustOrderHandlingInst_val[] = {
        { "ADD", "ADD ON ORDER" },
        { "AON", "ALL OR NONE" },
        { "CNH", "CASH NOT HELD" },
        { "DIR", "DIRECTED ORDER" },
        { "E.W", "EXCHANGE FOR PHYSICAL TRANSACTION" },
        { "FOK", "FILL OR KILL" },
        { "IO", "IMBALANCE ONLY" },
        { "IOC", "IMMEDIATE OR CANCEL" },
        { "LOO", "LIMIT ON OPEN" },
        { "LOC", "LIMIT ON CLOSE" },
        { "MAO", "MARKET AT OPEN" },
        { "MAC", "MARKET AT CLOSE" },
        { "MOO", "MARKET ON OPEN" },
        { "MOC", "MARKET ON CLOSE" },
        { "MQT", "MINIMUM QUANTITY" },
        { "NH", "NOT HELD" },
        { "OVD", "OVER THE DAY" },
        { "PEG", "PEGGED" },
        { "RSV", "RESERVE SIZE ORDER" },
        { "S.W", "STOP STOCK TRANSACTION" },
        { "SCL", "SCALE" },
        { "TMO", "TIME ORDER" },
        { "TS", "TRAILING STOP" },
        { "WRK", "WORK" },
        { 0, NULL }
    };


    static const  value_string OrderHandlingInstSource_val[] = {
        { 1, "NASD OATS" },
        { 0, NULL }
    };


    static const  string_string DeskType_val[] = {
        { "A", "AGENCY" },
        { "AR", "ARBITRAGE" },
        { "D", "DERIVATIVES" },
        { "IN", "INTERNATIONAL" },
        { "IS", "INSTITUTIONAL" },
        { "O", "OTHER" },
        { "PF", "PREFERRED TRADING" },
        { "PR", "PROPRIETARY" },
        { "PT", "PROGRAM TRADING" },
        { "S", "SALES" },
        { "T", "TRADING" },
        { 0, NULL }
    };


    static const  value_string DeskTypeSource_val[] = {
        { 1, "NASD OATS" },
        { 0, NULL }
    };


    static const  string_string DeskOrderHandlingInst_val[] = {
        { "ADD", "ADD ON ORDER" },
        { "AON", "ALL OR NONE" },
        { "CNH", "CASH NOT HELD" },
        { "DIR", "DIRECTED ORDER" },
        { "E.W", "EXCHANGE FOR PHYSICAL TRANSACTION" },
        { "FOK", "FILL OR KILL" },
        { "IO", "IMBALANCE ONLY" },
        { "IOC", "IMMEDIATE OR CANCEL" },
        { "LOO", "LIMIT ON OPEN" },
        { "LOC", "LIMIT ON CLOSE" },
        { "MAO", "MARKET AT OPEN" },
        { "MAC", "MARKET AT CLOSE" },
        { "MOO", "MARKET ON OPEN" },
        { "MOC", "MARKET ON CLOSE" },
        { "MQT", "MINIMUM QUANTITY" },
        { "NH", "NOT HELD" },
        { "OVD", "OVER THE DAY" },
        { "PEG", "PEGGED" },
        { "RSV", "RESERVE SIZE ORDER" },
        { "S.W", "STOP STOCK TRANSACTION" },
        { "SCL", "SCALE" },
        { "TMO", "TIME ORDER" },
        { "TS", "TRAILING STOP" },
        { "WRK", "WORK" },
        { 0, NULL }
    };


    static const  value_string ExecAckStatus_val[] = {
        { '0', "RECEIVED NOT YET PROCESSED" },
        { '1', "ACCEPTED" },
        { '2', "DONT KNOW" },
        { 0, NULL }
    };


    static const  value_string CollApplType_val[] = {
        { 0, "SPECIFIC DEPOSIT" },
        { 1, "GENERAL" },
        { 0, NULL }
    };


    static const  value_string UnderlyingFXRateCalc_val[] = {
        { 'M', "MULTIPLY" },
        { 'D', "DIVIDE" },
        { 0, NULL }
    };


    static const  value_string AllocPositionEffect_val[] = {
        { 'O', "OPEN" },
        { 'C', "CLOSE" },
        { 'R', "ROLLED" },
        { 'F', "FIFO" },
        { 0, NULL }
    };


    static const  value_string DealingCapacity_val[] = {
        { 'A', "AGENT" },
        { 'P', "PRINCIPAL" },
        { 'R', "RISKLESS PRINCIPAL" },
        { 0, NULL }
    };


    static const  value_string AggressorIndicator_val[] = {
        { 'Y', "YES" },
        { 'N', "NO" },
        { 0, NULL }
    };


    static const  value_string MDQuoteType_val[] = {
        { 0, "INDICATIVE" },
        { 1, "TRADEABLE" },
        { 2, "RESTRICTED TRADEABLE" },
        { 3, "COUNTER" },
        { 4, "INDICATIVE AND TRADEABLE" },
        { 0, NULL }
    };


    static const  value_string RefOrderIDSource_val[] = {
        { '0', "SECONDARYORDERID" },
        { '1', "ORDERID" },
        { '2', "MDENTRYID" },
        { '3', "QUOTEENTRYID" },
        { '4', "ORIGINAL ORDER ID" },
        { 0, NULL }
    };


    static const  value_string DisplayWhen_val[] = {
        { '1', "IMMEDIATE" },
        { '2', "EXHAUST" },
        { 0, NULL }
    };


    static const  value_string DisplayMethod_val[] = {
        { '1', "INITIAL" },
        { '2', "NEW" },
        { '3', "RANDOM" },
        { '4', "UNDISCLOSED" },
        { 0, NULL }
    };


    static const  value_string PriceProtectionScope_val[] = {
        { '0', "NONE" },
        { '1', "LOCAL" },
        { '2', "NATIONAL" },
        { '3', "GLOBAL" },
        { 0, NULL }
    };


    static const  value_string LotType_val[] = {
        { '1', "ODD LOT" },
        { '2', "ROUND LOT" },
        { '3', "BLOCK LOT" },
        { '4', "ROUND LOT BASED UPON UNITOFMEASURE" },
        { 0, NULL }
    };


    static const  value_string PegPriceType_val[] = {
        { 1, "LAST PEG" },
        { 2, "MID PRICE PEG" },
        { 3, "OPENING PEG" },
        { 4, "MARKET PEG" },
        { 5, "PRIMARY PEG" },
        { 7, "PEG TO VWAP" },
        { 8, "TRAILING STOP PEG" },
        { 9, "PEG TO LIMIT PRICE" },
        { 0, NULL }
    };


    static const  value_string TriggerType_val[] = {
        { '1', "PARTIAL EXECUTION" },
        { '2', "SPECIFIED TRADING SESSION" },
        { '3', "NEXT AUCTION" },
        { '4', "PRICE MOVEMENT" },
        { 0, NULL }
    };


    static const  value_string TriggerAction_val[] = {
        { '1', "ACTIVATE" },
        { '2', "MODIFY" },
        { '3', "CANCEL" },
        { 0, NULL }
    };


    static const  value_string TriggerPriceType_val[] = {
        { '1', "BEST OFFER" },
        { '2', "LAST TRADE" },
        { '3', "BEST BID" },
        { '4', "BEST BID OR LAST TRADE" },
        { '5', "BEST OFFER OR LAST TRADE" },
        { '6', "BEST MID" },
        { 0, NULL }
    };


    static const  value_string TriggerPriceTypeScope_val[] = {
        { '0', "NONE" },
        { '1', "LOCAL" },
        { '2', "NATIONAL" },
        { '3', "GLOBAL" },
        { 0, NULL }
    };


    static const  value_string TriggerPriceDirection_val[] = {
        { 'U', "TRIGGER IF THE PRICE OF THE SPECIFIED TYPE GOES UP TO OR THROUGH THE SPECIFIED TRIGGER PRICE" },
        { 'D', "TRIGGER IF THE PRICE OF THE SPECIFIED TYPE GOES DOWN TO OR THROUGH THE SPECIFIED TRIGGER PRICE" },
        { 0, NULL }
    };


    static const  value_string TriggerOrderType_val[] = {
        { '1', "MARKET" },
        { '2', "LIMIT" },
        { 0, NULL }
    };


    static const  value_string OrderCategory_val[] = {
        { '1', "ORDER" },
        { '2', "QUOTE" },
        { '3', "PRIVATELY NEGOTIATED TRADE" },
        { '4', "MULTILEG ORDER" },
        { '5', "LINKED ORDER" },
        { '6', "QUOTE REQUEST" },
        { '7', "IMPLIED ORDER" },
        { '8', "CROSS ORDER" },
        { '9', "STREAMING PRICE" },
        { 0, NULL }
    };


    static const  value_string TradeHandlingInstr_val[] = {
        { '0', "TRADE CONFIRMATION" },
        { '1', "TWO PARTY REPORT" },
        { '2', "ONE PARTY REPORT FOR MATCHING" },
        { '3', "ONE PARTY REPORT FOR PASS THROUGH" },
        { '4', "AUTOMATED FLOOR ORDER ROUTING" },
        { '5', "TWO PARTY REPORT FOR CLAIM" },
        { 0, NULL }
    };


    static const  string_string ApplVerID_val[] = {
        { "0", "FIX27" },
        { "1", "FIX30" },
        { "2", "FIX40" },
        { "3", "FIX41" },
        { "4", "FIX42" },
        { "5", "FIX43" },
        { "6", "FIX44" },
        { "7", "FIX50" },
        { "8", "FIX50SP1" },
        { "9", "FIX50SP2" },
        { 0, NULL }
    };


    static const  value_string ExDestinationIDSource_val[] = {
        { 'B', "BIC" },
        { 'C', "GENERALLY ACCEPTED MARKET PARTICIPANT IDENTIFIER" },
        { 'D', "PROPRIETARY" },
        { 'E', "ISO COUNTRY CODE" },
        { 'G', "MIC" },
        { 0, NULL }
    };


    static const  value_string ImpliedMarketIndicator_val[] = {
        { 0, "NOT IMPLIED" },
        { 1, "IMPLIED IN" },
        { 2, "IMPLIED OUT" },
        { 3, "BOTH IMPLIED IN AND IMPLIED OUT" },
        { 0, NULL }
    };


    static const  value_string SettlObligMode_val[] = {
        { 1, "PRELIMINARY" },
        { 2, "FINAL" },
        { 0, NULL }
    };


    static const  value_string SettlObligTransType_val[] = {
        { 'C', "CANCEL" },
        { 'N', "NEW" },
        { 'R', "REPLACE" },
        { 'T', "RESTATE" },
        { 0, NULL }
    };


    static const  value_string SettlObligSource_val[] = {
        { '1', "INSTRUCTIONS OF BROKER" },
        { '2', "INSTRUCTIONS FOR INSTITUTION" },
        { '3', "INVESTOR" },
        { 0, NULL }
    };


    static const  value_string QuoteEntryStatus_val[] = {
        { 0, "ACCEPTED" },
        { 5, "REJECTED" },
        { 6, "REMOVED FROM MARKET" },
        { 7, "EXPIRED" },
        { 12, "LOCKED MARKET WARNING" },
        { 13, "CROSS MARKET WARNING" },
        { 14, "CANCELED DUE TO LOCK MARKET" },
        { 15, "CANCELED DUE TO CROSS MARKET" },
        { 16, "ACTIVE" },
        { 0, NULL }
    };


    static const  value_string RespondentType_val[] = {
        { 1, "ALL MARKET PARTICIPANTS" },
        { 2, "SPECIFIED MARKET PARTICIPANTS" },
        { 3, "ALL MARKET MAKERS" },
        { 4, "PRIMARY MARKET MAKER" },
        { 0, NULL }
    };


    static const  value_string SecurityTradingEvent_val[] = {
        { 1, "ORDER IMBALANCE AUCTION IS EXTENDED" },
        { 2, "TRADING RESUMES" },
        { 3, "PRICE VOLATILITY INTERRUPTION" },
        { 4, "CHANGE OF TRADING SESSION" },
        { 5, "CHANGE OF TRADING SUBSESSION" },
        { 6, "CHANGE OF SECURITY TRADING STATUS" },
        { 7, "CHANGE OF BOOK TYPE" },
        { 8, "CHANGE OF MARKET DEPTH" },
        { 0, NULL }
    };


    static const  value_string StatsType_val[] = {
        { 1, "EXCHANGE LAST" },
        { 2, "HIGH" },
        { 3, "AVERAGE PRICE" },
        { 4, "TURNOVER" },
        { 0, NULL }
    };


    static const  value_string MDSecSizeType_val[] = {
        { 1, "CUSTOMER" },
        { 0, NULL }
    };


    static const  value_string SettlMethod_val[] = {
        { 'C', "CASH SETTLEMENT REQUIRED" },
        { 'P', "PHYSICAL SETTLEMENT REQUIRED" },
        { 0, NULL }
    };


    static const  value_string ExerciseStyle_val[] = {
        { 0, "EUROPEAN" },
        { 1, "AMERICAN" },
        { 2, "BERMUDA" },
        { 0, NULL }
    };


    static const  string_string PriceQuoteMethod_val[] = {
        { "STD", "STANDARD" },
        { "INX", "INDEX" },
        { "INT", "INTEREST RATE INDEX" },
        { "PCTPAR", "PERCENT OF PAR" },
        { 0, NULL }
    };


    static const  string_string ValuationMethod_val[] = {
        { "EQTY", "PREMIUM STYLE" },
        { "FUT", "FUTURES STYLE MARK TO MARKET" },
        { "FUTDA", "FUTURES STYLE WITH AN ATTACHED CASH ADJUSTMENT" },
        { "CDS", "CDS STYLE COLLATERALIZATION OF MARKET TO MARKET AND COUPON" },
        { "CDSD", "CDS IN DELIVERY" },
        { 0, NULL }
    };


    static const  value_string ListMethod_val[] = {
        { 0, "PRE LISTED ONLY" },
        { 1, "USER REQUESTED" },
        { 0, NULL }
    };


    static const  value_string TickRuleType_val[] = {
        { 0, "REGULAR" },
        { 1, "VARIABLE" },
        { 2, "FIXED" },
        { 3, "TRADED AS A SPREAD LEG" },
        { 4, "SETTLED AS A SPREAD LEG" },
        { 0, NULL }
    };


    static const  value_string MaturityMonthYearIncrementUnits_val[] = {
        { 0, "MONTHS" },
        { 1, "DAYS" },
        { 2, "WEEKS" },
        { 3, "YEARS" },
        { 0, NULL }
    };


    static const  value_string MaturityMonthYearFormat_val[] = {
        { 0, "YEARMONTH ONLY" },
        { 1, "YEARMONTHDAY" },
        { 2, "YEARMONTHWEEK" },
        { 0, NULL }
    };


    static const  value_string PriceLimitType_val[] = {
        { 0, "PRICE" },
        { 1, "TICKS" },
        { 2, "PERCENTAGE" },
        { 0, NULL }
    };


    static const  value_string DerivativeSecurityListRequestType_val[] = {
        { 0, "SYMBOL" },
        { 1, "SECURITYTYPE AND OR CFICODE" },
        { 2, "PRODUCT" },
        { 3, "TRADINGSESSIONID" },
        { 4, "ALL SECURITIES" },
        { 5, "UNDELYINGSYMBOL" },
        { 6, "UNDERLYING SECURITYTYPE AND OR CFICODE" },
        { 7, "UNDERLYING PRODUCT" },
        { 8, "MARKETID OR MARKETID PLUS MARKETSEGMENTID" },
        { 0, NULL }
    };


    static const  value_string ApplReqType_val[] = {
        { 0, "RETRANSMISSION OF APPLICATION MESSAGES FOR THE SPECIFIED APPLICATIONS" },
        { 1, "SUBSCRIPTION TO THE SPECIFIED APPLICATIONS" },
        { 2, "REQUEST FOR THE LAST APPLLASTSEQNUM PUBLISHED FOR THE SPECIFIED APPLICATIONS" },
        { 3, "REQUEST VALID SET OF APPLICATIONS" },
        { 4, "UNSUBSCRIBE TO THE SPECIFIED APPLICATIONS" },
        { 5, "CANCEL RETRANSMISSION" },
        { 6, "CANCEL RETRANSMISSION AND UNSUBSCRIBE TO THE SPECIFIED APPLICATIONS" },
        { 0, NULL }
    };


    static const  value_string ApplResponseType_val[] = {
        { 0, "REQUEST SUCCESSFULLY PROCESSED" },
        { 1, "APPLICATION DOES NOT EXIST" },
        { 2, "MESSAGES NOT AVAILABLE" },
        { 0, NULL }
    };


    static const  value_string ApplResponseError_val[] = {
        { 0, "APPLICATION DOES NOT EXIST" },
        { 1, "MESSAGES REQUESTED ARE NOT AVAILABLE" },
        { 2, "USER NOT AUTHORIZED FOR APPLICATION" },
        { 0, NULL }
    };


    static const  value_string TradSesEvent_val[] = {
        { 0, "TRADING RESUMES" },
        { 1, "CHANGE OF TRADING SESSION" },
        { 2, "CHANGE OF TRADING SUBSESSION" },
        { 3, "CHANGE OF TRADING STATUS" },
        { 0, NULL }
    };


    static const  value_string MassActionType_val[] = {
        { 1, "SUSPEND ORDERS" },
        { 2, "RELEASE ORDERS FROM SUSPENSION" },
        { 3, "CANCEL ORDERS" },
        { 0, NULL }
    };


    static const  value_string MassActionScope_val[] = {
        { 1, "ALL ORDERS FOR A SECURITY" },
        { 2, "ALL ORDERS FOR AN UNDERLYING SECURITY" },
        { 3, "ALL ORDERS FOR A PRODUCT" },
        { 4, "ALL ORDERS FOR A CFICODE" },
        { 5, "ALL ORDERS FOR A SECURITYTYPE" },
        { 6, "ALL ORDERS FOR A TRADING SESSION" },
        { 7, "ALL ORDERS" },
        { 8, "ALL ORDERS FOR A MARKET" },
        { 9, "ALL ORDERS FOR A MARKET SEGMENT" },
        { 10, "ALL ORDERS FOR A SECURITY GROUP" },
        { 11, "CANCEL FOR SECURITY ISSUER" },
        { 12, "CANCEL FOR ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string MassActionResponse_val[] = {
        { 0, "REJECTED" },
        { 1, "ACCEPTED" },
        { 0, NULL }
    };


    static const  value_string MassActionRejectReason_val[] = {
        { 0, "MASS ACTION NOT SUPPORTED" },
        { 1, "INVALID OR UNKNOWN SECURITY" },
        { 2, "INVALID OR UNKNOWN UNDERLYING SECURITY" },
        { 3, "INVALID OR UNKNOWN PRODUCT" },
        { 4, "INVALID OR UNKNOWN CFICODE" },
        { 5, "INVALID OR UNKNOWN SECURITYTYPE" },
        { 6, "INVALID OR UNKNOWN TRADING SESSION" },
        { 7, "INVALID OR UNKNOWN MARKET" },
        { 8, "INVALID OR UNKNOWN MARKET SEGMENT" },
        { 9, "INVALID OR UNKNOWN SECURITY GROUP" },
        { 99, "OTHER" },
        { 10, "INVALID OR UNKNOWN SECURITY ISSUER" },
        { 11, "INVALID OR UNKNOWN ISSUER OF UNDERLYING SECURITY" },
        { 0, NULL }
    };


    static const  value_string MultilegModel_val[] = {
        { 0, "PREDEFINED MULTILEG SECURITY" },
        { 1, "USER DEFINED MULTLEG SECURITY" },
        { 2, "USER DEFINED NON SECURITIZED MULTILEG" },
        { 0, NULL }
    };


    static const  value_string MultilegPriceMethod_val[] = {
        { 0, "NET PRICE" },
        { 1, "REVERSED NET PRICE" },
        { 2, "YIELD DIFFERENCE" },
        { 3, "INDIVIDUAL" },
        { 4, "CONTRACT WEIGHTED AVERAGE PRICE" },
        { 5, "MULTIPLIED PRICE" },
        { 0, NULL }
    };


    static const  value_string ContingencyType_val[] = {
        { 1, "ONE CANCELS THE OTHER" },
        { 2, "ONE TRIGGERS THE OTHER" },
        { 3, "ONE UPDATES THE OTHER 3" },
        { 4, "ONE UPDATES THE OTHER 4" },
        { 0, NULL }
    };


    static const  value_string ListRejectReason_val[] = {
        { 0, "BROKER" },
        { 2, "EXCHANGE CLOSED" },
        { 4, "TOO LATE TO ENTER" },
        { 5, "UNKNOWN ORDER" },
        { 6, "DUPLICATE ORDER" },
        { 11, "UNSUPPORTED ORDER CHARACTERISTIC" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string TradePublishIndicator_val[] = {
        { 0, "DO NOT PUBLISH TRADE" },
        { 1, "PUBLISH TRADE" },
        { 2, "DEFERRED PUBLICATION" },
        { 0, NULL }
    };


    static const  value_string MarketUpdateAction_val[] = {
        { 'A', "ADD" },
        { 'D', "DELETE" },
        { 'M', "MODIFY" },
        { 0, NULL }
    };


    static const  value_string SessionStatus_val[] = {
        { 0, "SESSION ACTIVE" },
        { 1, "SESSION PASSWORD CHANGED" },
        { 2, "SESSION PASSWORD DUE TO EXPIRE" },
        { 3, "NEW SESSION PASSWORD DOES NOT COMPLY WITH POLICY" },
        { 4, "SESSION LOGOUT COMPLETE" },
        { 5, "INVALID USERNAME OR PASSWORD" },
        { 6, "ACCOUNT LOCKED" },
        { 7, "LOGONS ARE NOT ALLOWED AT THIS TIME" },
        { 8, "PASSWORD EXPIRED" },
        { 0, NULL }
    };


    static const  value_string ApplReportType_val[] = {
        { 0, "RESET APPLSEQNUM TO NEW VALUE SPECIFIED IN APPLNEWSEQNUM" },
        { 1, "REPORTS THAT THE LAST MESSAGE HAS BEEN SENT FOR THE APPLIDS REFER TO REFAPPLLASTSEQNUM" },
        { 2, "HEARTBEAT MESSAGE INDICATING THAT APPLICATION IDENTIFIED BY REFAPPLID" },
        { 3, "APPLICATION MESSAGE RE SEND COMPLETED" },
        { 0, NULL }
    };


    static const  value_string OrderDelayUnit_val[] = {
        { 0, "SECONDS" },
        { 1, "TENTHS OF A SECOND" },
        { 2, "HUNDREDTHS OF A SECOND" },
        { 3, "MILLISECONDS" },
        { 4, "MICROSECONDS" },
        { 5, "NANOSECONDS" },
        { 10, "MINUTES" },
        { 11, "HOURS" },
        { 12, "DAYS" },
        { 13, "WEEKS" },
        { 14, "MONTHS" },
        { 15, "YEARS" },
        { 0, NULL }
    };


    static const  value_string VenueType_val[] = {
        { 'E', "ELECTRONIC" },
        { 'P', "PIT" },
        { 'X', "EX PIT" },
        { 0, NULL }
    };


    static const  value_string RefOrdIDReason_val[] = {
        { 0, "GTC FROM PREVIOUS DAY" },
        { 1, "PARTIAL FILL REMAINING" },
        { 2, "ORDER CHANGED" },
        { 0, NULL }
    };


    static const  value_string OrigCustOrderCapacity_val[] = {
        { 1, "MEMBER TRADING FOR THEIR OWN ACCOUNT" },
        { 2, "CLEARING FIRM TRADING FOR ITS PROPRIETARY ACCOUNT" },
        { 3, "MEMBER TRADING FOR ANOTHER MEMBER" },
        { 4, "ALL OTHER" },
        { 0, NULL }
    };


    static const  value_string ModelType_val[] = {
        { 0, "UTILITY PROVIDED STANDARD MODEL" },
        { 1, "PROPRIETARY" },
        { 0, NULL }
    };


    static const  value_string ContractMultiplierUnit_val[] = {
        { 0, "SHARES" },
        { 1, "HOURS" },
        { 2, "DAYS" },
        { 0, NULL }
    };


    static const  value_string FlowScheduleType_val[] = {
        { 0, "NERC EASTERN OFF PEAK" },
        { 1, "NERC WESTERN OFF PEAK" },
        { 2, "NERC CALENDAR ALL DAYS IN MONTH" },
        { 3, "NERC EASTERN PEAK" },
        { 4, "NERC WESTERN PEAK" },
        { 0, NULL }
    };


    static const  value_string RateSource_val[] = {
        { 0, "BLOOMBERG" },
        { 1, "REUTERS" },
        { 2, "TELERATE" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string RateSourceType_val[] = {
        { 0, "PRIMARY" },
        { 1, "SECONDARY" },
        { 0, NULL }
    };


    static const  string_string RestructuringType_val[] = {
        { "FR", "FULL RESTRUCTURING" },
        { "MR", "MODIFIED RESTRUCTURING" },
        { "MM", "MODIFIED MOD RESTRUCTURING" },
        { "XR", "NO RESTRUCTURING SPECIFIED" },
        { 0, NULL }
    };


    static const  string_string Seniority_val[] = {
        { "SD", "SENIOR SECURED" },
        { "SR", "SENIOR" },
        { "SB", "SUBORDINATED" },
        { 0, NULL }
    };


    static const  value_string SecurityListType_val[] = {
        { 1, "INDUSTRY CLASSIFICATION" },
        { 2, "TRADING LIST" },
        { 3, "MARKET" },
        { 4, "NEWSPAPER LIST" },
        { 0, NULL }
    };


    static const  value_string SecurityListTypeSource_val[] = {
        { 1, "ICB" },
        { 2, "NAICS" },
        { 3, "GICS" },
        { 0, NULL }
    };


    static const  value_string NewsCategory_val[] = {
        { 0, "COMPANY NEWS" },
        { 1, "MARKETPLACE NEWS" },
        { 2, "FINANCIAL MARKET NEWS" },
        { 3, "TECHNICAL NEWS" },
        { 99, "OTHER NEWS" },
        { 0, NULL }
    };


    static const  value_string NewsRefType_val[] = {
        { 0, "REPLACEMENT" },
        { 1, "OTHER LANGUAGE" },
        { 2, "COMPLIMENTARY" },
        { 0, NULL }
    };


    static const  value_string StrikePriceDeterminationMethod_val[] = {
        { 1, "FIXED STRIKE" },
        { 2, "STRIKE SET AT EXPIRATION TO UNDERLYING OR OTHER VALUE" },
        { 3, "STRIKE SET TO AVERAGE OF UNDERLYING SETTLEMENT PRICE ACROSS THE LIFE OF THE OPTION" },
        { 4, "STRIKE SET TO OPTIMAL VALUE" },
        { 0, NULL }
    };


    static const  value_string StrikePriceBoundaryMethod_val[] = {
        { 1, "LESS THAN UNDERLYING PRICE IS IN THE MONEY" },
        { 2, "LESS THAN OR EQUAL TO THE UNDERLYING PRICE IS IN THE MONEY" },
        { 3, "EQUAL TO THE UNDERLYING PRICE IS IN THE MONEY" },
        { 4, "GREATER THAN OR EQUAL TO UNDERLYING PRICE IS IN THE MONEY" },
        { 5, "GREATER THAN UNDERLYING IS IN THE MONEY" },
        { 0, NULL }
    };


    static const  value_string UnderlyingPriceDeterminationMethod_val[] = {
        { 1, "REGULAR" },
        { 2, "SPECIAL REFERENCE" },
        { 3, "OPTIMAL VALUE" },
        { 4, "AVERAGE VALUE" },
        { 0, NULL }
    };


    static const  value_string OptPayoutType_val[] = {
        { 1, "VANILLA" },
        { 2, "CAPPED" },
        { 3, "BINARY" },
        { 0, NULL }
    };


    static const  value_string ComplexEventType_val[] = {
        { 1, "CAPPED" },
        { 2, "TRIGGER" },
        { 3, "KNOCK IN UP" },
        { 4, "KOCK IN DOWN" },
        { 5, "KNOCK OUT UP" },
        { 6, "KNOCK OUT DOWN" },
        { 7, "UNDERLYING" },
        { 8, "RESET BARRIER" },
        { 9, "ROLLING BARRIER" },
        { 0, NULL }
    };


    static const  value_string ComplexEventPriceBoundaryMethod_val[] = {
        { 1, "LESS THAN COMPLEXEVENTPRICE" },
        { 2, "LESS THAN OR EQUAL TO COMPLEXEVENTPRICE" },
        { 3, "EQUAL TO COMPLEXEVENTPRICE" },
        { 4, "GREATER THAN OR EQUAL TO COMPLEXEVENTPRICE" },
        { 5, "GREATER THAN COMPLEXEVENTPRICE" },
        { 0, NULL }
    };


    static const  value_string ComplexEventPriceTimeType_val[] = {
        { 1, "EXPIRATION" },
        { 2, "IMMEDIATE" },
        { 3, "SPECIFIED DATE TIME" },
        { 0, NULL }
    };


    static const  value_string ComplexEventCondition_val[] = {
        { 1, "AND" },
        { 2, "OR" },
        { 0, NULL }
    };


    static const  value_string StreamAsgnReqType_val[] = {
        { 1, "STREAM ASSIGNMENT FOR NEW CUSTOMER" },
        { 2, "STREAM ASSIGNMENT FOR EXISTING CUSTOMER" },
        { 0, NULL }
    };


    static const  value_string StreamAsgnRejReason_val[] = {
        { 0, "UNKNOWN CLIENT" },
        { 1, "EXCEEDS MAXIMUM SIZE" },
        { 2, "UNKNOWN OR INVALID CURRENCY PAIR" },
        { 3, "NO AVAILABLE STREAM" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string StreamAsgnAckType_val[] = {
        { 0, "ASSIGNMENT ACCEPTED" },
        { 1, "ASSIGNMENT REJECTED" },
        { 0, NULL }
    };


    static const  value_string PartyListResponseType_val[] = {
        { 0, "RETURN ALL AVAILABLE INFORMATION ON PARTIES AND RELATED PARTIES" },
        { 1, "RETURN ONLY PARTY INFORMATION" },
        { 2, "INCLUDE INFORMATION ON RELATED PARTIES" },
        { 3, "INCLUDE RISK LIMIT INFORMATION" },
        { 0, NULL }
    };


    static const  value_string PartyDetailsRequestResult_val[] = {
        { 0, "VALID REQUEST" },
        { 1, "INVALID OR UNSUPPORTED REQUEST" },
        { 2, "NO PARTIES OR PARTY DETAILS FOUND THAT MATCH SELECTION CRITERIA" },
        { 3, "UNSUPPORTED PARTYLISTRESPONSETYPE" },
        { 4, "NOT AUTHORIZED TO RETRIEVE PARTIES OR PARTY DETAILS DATA" },
        { 5, "PARTIES OR PARTY DETAILS DATA TEMPORARILY UNAVAILABLE" },
        { 6, "REQUEST FOR PARTIES DATA NOT SUPPORTED" },
        { 99, "OTHER" },
        { 0, NULL }
    };


    static const  value_string PartyRelationship_val[] = {
        { 0, "IS ALSO" },
        { 1, "CLEARS FOR" },
        { 2, "CLEARS THROUGH" },
        { 3, "TRADES FOR" },
        { 4, "TRADES THROUGH" },
        { 5, "SPONSORS" },
        { 6, "SPONSORED THROUGH" },
        { 7, "PROVIDES GUARANTEE FOR" },
        { 8, "IS GUARANTEED BY" },
        { 9, "MEMBER OF" },
        { 10, "HAS MEMBERS" },
        { 11, "PROVIDES MARKETPLACE FOR" },
        { 12, "PARTICIPANT OF MARKETPLACE" },
        { 13, "CARRIES POSITIONS FOR" },
        { 14, "POSTS TRADES TO" },
        { 15, "ENTERS TRADES FOR" },
        { 16, "ENTERS TRADES THROUGH" },
        { 17, "PROVIDES QUOTES TO" },
        { 18, "REQUESTS QUOTES FROM" },
        { 19, "INVESTS FOR" },
        { 20, "INVESTS THROUGH" },
        { 21, "BROKERS TRADES FOR" },
        { 22, "BROKERS TRADES THROUGH" },
        { 23, "PROVIDES TRADING SERVICES FOR" },
        { 24, "USES TRADING SERVICES OF" },
        { 25, "APPROVES OF" },
        { 26, "APPROVED BY" },
        { 27, "PARENT FIRM FOR" },
        { 28, "SUBSIDIARY OF" },
        { 29, "REGULATORY OWNER OF" },
        { 30, "OWNED BY 30" },
        { 31, "CONTROLS" },
        { 32, "IS CONTROLLED BY" },
        { 33, "LEGAL" },
        { 34, "OWNED BY 34" },
        { 35, "BENEFICIAL OWNER OF" },
        { 36, "OWNED BY 36" },
        { 0, NULL }
    };


    static const  value_string RiskLimitType_val[] = {
        { 1, "GROSS LIMIT" },
        { 2, "NET LIMIT" },
        { 3, "EXPOSURE" },
        { 4, "LONG LIMIT" },
        { 5, "SHORT LIMIT" },
        { 0, NULL }
    };


    static const  value_string RiskInstrumentOperator_val[] = {
        { 1, "INCLUDE" },
        { 2, "EXCLUDE" },
        { 0, NULL }
    };


    static const  value_string StreamAsgnType_val[] = {
        { 1, "ASSIGNMENT" },
        { 2, "REJECTED" },
        { 3, "TERMINATE UNASSIGN" },
        { 0, NULL }
    };


static const fix_field fix_fields[] = {

        { 1, 0, NULL }, /* Account */
        { 2, 0, NULL }, /* AdvId */
        { 3, 0, NULL }, /* AdvRefID */
        { 4, 2, AdvSide_val },
        { 5, 1, AdvTransType_val },
        { 6, 0, NULL }, /* AvgPx */
        { 7, 0, NULL }, /* BeginSeqNo */
        { 8, 0, NULL }, /* BeginString */
        { 9, 0, NULL }, /* BodyLength */
        { 10, 0, NULL }, /* CheckSum */
        { 11, 0, NULL }, /* ClOrdID */
        { 12, 0, NULL }, /* Commission */
        { 13, 2, CommType_val },
        { 14, 0, NULL }, /* CumQty */
        { 15, 0, NULL }, /* Currency */
        { 16, 0, NULL }, /* EndSeqNo */
        { 17, 0, NULL }, /* ExecID */
        { 18, 2, ExecInst_val },
        { 19, 0, NULL }, /* ExecRefID */
        { 20, 2, ExecTransType_val },
        { 21, 2, HandlInst_val },
        { 22, 1, SecurityIDSource_val },
        { 23, 0, NULL }, /* IOIID */
        { 24, 0, NULL }, /* IOIOthSvc */
        { 25, 2, IOIQltyInd_val },
        { 26, 0, NULL }, /* IOIRefID */
        { 27, 1, IOIQty_val },
        { 28, 2, IOITransType_val },
        { 29, 2, LastCapacity_val },
        { 30, 0, NULL }, /* LastMkt */
        { 31, 0, NULL }, /* LastPx */
        { 32, 0, NULL }, /* LastQty */
        { 33, 0, NULL }, /* NoLinesOfText */
        { 34, 0, NULL }, /* MsgSeqNum */
        { 35, 1, MsgType_val },
        { 36, 0, NULL }, /* NewSeqNo */
        { 37, 0, NULL }, /* OrderID */
        { 38, 0, NULL }, /* OrderQty */
        { 39, 2, OrdStatus_val },
        { 40, 2, OrdType_val },
        { 41, 0, NULL }, /* OrigClOrdID */
        { 42, 0, NULL }, /* OrigTime */
        { 43, 2, PossDupFlag_val },
        { 44, 0, NULL }, /* Price */
        { 45, 0, NULL }, /* RefSeqNum */
        { 46, 0, NULL }, /* RelatdSym */
        { 47, 2, Rule80A_val },
        { 48, 0, NULL }, /* SecurityID */
        { 49, 0, NULL }, /* SenderCompID */
        { 50, 0, NULL }, /* SenderSubID */
        { 51, 0, NULL }, /* SendingDate */
        { 52, 0, NULL }, /* SendingTime */
        { 53, 0, NULL }, /* Quantity */
        { 54, 2, Side_val },
        { 55, 0, NULL }, /* Symbol */
        { 56, 0, NULL }, /* TargetCompID */
        { 57, 0, NULL }, /* TargetSubID */
        { 58, 0, NULL }, /* Text */
        { 59, 2, TimeInForce_val },
        { 60, 0, NULL }, /* TransactTime */
        { 61, 2, Urgency_val },
        { 62, 0, NULL }, /* ValidUntilTime */
        { 63, 1, SettlType_val },
        { 64, 0, NULL }, /* SettlDate */
        { 65, 1, SymbolSfx_val },
        { 66, 0, NULL }, /* ListID */
        { 67, 0, NULL }, /* ListSeqNo */
        { 68, 0, NULL }, /* TotNoOrders */
        { 69, 0, NULL }, /* ListExecInst */
        { 70, 0, NULL }, /* AllocID */
        { 71, 2, AllocTransType_val },
        { 72, 0, NULL }, /* RefAllocID */
        { 73, 0, NULL }, /* NoOrders */
        { 74, 0, NULL }, /* AvgPxPrecision */
        { 75, 0, NULL }, /* TradeDate */
        { 76, 0, NULL }, /* ExecBroker */
        { 77, 2, PositionEffect_val },
        { 78, 0, NULL }, /* NoAllocs */
        { 79, 0, NULL }, /* AllocAccount */
        { 80, 0, NULL }, /* AllocQty */
        { 81, 2, ProcessCode_val },
        { 82, 0, NULL }, /* NoRpts */
        { 83, 0, NULL }, /* RptSeq */
        { 84, 0, NULL }, /* CxlQty */
        { 85, 0, NULL }, /* NoDlvyInst */
        { 86, 0, NULL }, /* DlvyInst */
        { 87, 0, AllocStatus_val },
        { 88, 0, AllocRejCode_val },
        { 89, 0, NULL }, /* Signature */
        { 90, 0, NULL }, /* SecureDataLen */
        { 91, 0, NULL }, /* SecureData */
        { 92, 0, NULL }, /* BrokerOfCredit */
        { 93, 0, NULL }, /* SignatureLength */
        { 94, 2, EmailType_val },
        { 95, 0, NULL }, /* RawDataLength */
        { 96, 0, NULL }, /* RawData */
        { 97, 2, PossResend_val },
        { 98, 0, EncryptMethod_val },
        { 99, 0, NULL }, /* StopPx */
        { 100, 0, NULL }, /* ExDestination */
        { 102, 0, CxlRejReason_val },
        { 103, 0, OrdRejReason_val },
        { 104, 2, IOIQualifier_val },
        { 105, 0, NULL }, /* WaveNo */
        { 106, 0, NULL }, /* Issuer */
        { 107, 0, NULL }, /* SecurityDesc */
        { 108, 0, NULL }, /* HeartBtInt */
        { 109, 0, NULL }, /* ClientID */
        { 110, 0, NULL }, /* MinQty */
        { 111, 0, NULL }, /* MaxFloor */
        { 112, 0, NULL }, /* TestReqID */
        { 113, 2, ReportToExch_val },
        { 114, 2, LocateReqd_val },
        { 115, 0, NULL }, /* OnBehalfOfCompID */
        { 116, 0, NULL }, /* OnBehalfOfSubID */
        { 117, 0, NULL }, /* QuoteID */
        { 118, 0, NULL }, /* NetMoney */
        { 119, 0, NULL }, /* SettlCurrAmt */
        { 120, 0, NULL }, /* SettlCurrency */
        { 121, 2, ForexReq_val },
        { 122, 0, NULL }, /* OrigSendingTime */
        { 123, 2, GapFillFlag_val },
        { 124, 0, NULL }, /* NoExecs */
        { 125, 0, NULL }, /* CxlType */
        { 126, 0, NULL }, /* ExpireTime */
        { 127, 2, DKReason_val },
        { 128, 0, NULL }, /* DeliverToCompID */
        { 129, 0, NULL }, /* DeliverToSubID */
        { 130, 2, IOINaturalFlag_val },
        { 131, 0, NULL }, /* QuoteReqID */
        { 132, 0, NULL }, /* BidPx */
        { 133, 0, NULL }, /* OfferPx */
        { 134, 0, NULL }, /* BidSize */
        { 135, 0, NULL }, /* OfferSize */
        { 136, 0, NULL }, /* NoMiscFees */
        { 137, 0, NULL }, /* MiscFeeAmt */
        { 138, 0, NULL }, /* MiscFeeCurr */
        { 139, 1, MiscFeeType_val },
        { 140, 0, NULL }, /* PrevClosePx */
        { 141, 2, ResetSeqNumFlag_val },
        { 142, 0, NULL }, /* SenderLocationID */
        { 143, 0, NULL }, /* TargetLocationID */
        { 144, 0, NULL }, /* OnBehalfOfLocationID */
        { 145, 0, NULL }, /* DeliverToLocationID */
        { 146, 0, NULL }, /* NoRelatedSym */
        { 147, 0, NULL }, /* Subject */
        { 148, 0, NULL }, /* Headline */
        { 149, 0, NULL }, /* URLLink */
        { 150, 2, ExecType_val },
        { 151, 0, NULL }, /* LeavesQty */
        { 152, 0, NULL }, /* CashOrderQty */
        { 153, 0, NULL }, /* AllocAvgPx */
        { 154, 0, NULL }, /* AllocNetMoney */
        { 155, 0, NULL }, /* SettlCurrFxRate */
        { 156, 2, SettlCurrFxRateCalc_val },
        { 157, 0, NULL }, /* NumDaysInterest */
        { 158, 0, NULL }, /* AccruedInterestRate */
        { 159, 0, NULL }, /* AccruedInterestAmt */
        { 160, 2, SettlInstMode_val },
        { 161, 0, NULL }, /* AllocText */
        { 162, 0, NULL }, /* SettlInstID */
        { 163, 2, SettlInstTransType_val },
        { 164, 0, NULL }, /* EmailThreadID */
        { 165, 2, SettlInstSource_val },
        { 166, 1, SettlLocation_val },
        { 167, 1, SecurityType_val },
        { 168, 0, NULL }, /* EffectiveTime */
        { 169, 0, StandInstDbType_val },
        { 170, 0, NULL }, /* StandInstDbName */
        { 171, 0, NULL }, /* StandInstDbID */
        { 172, 0, SettlDeliveryType_val },
        { 173, 0, NULL }, /* SettlDepositoryCode */
        { 174, 0, NULL }, /* SettlBrkrCode */
        { 175, 0, NULL }, /* SettlInstCode */
        { 176, 0, NULL }, /* SecuritySettlAgentName */
        { 177, 0, NULL }, /* SecuritySettlAgentCode */
        { 178, 0, NULL }, /* SecuritySettlAgentAcctNum */
        { 179, 0, NULL }, /* SecuritySettlAgentAcctName */
        { 180, 0, NULL }, /* SecuritySettlAgentContactName */
        { 181, 0, NULL }, /* SecuritySettlAgentContactPhone */
        { 182, 0, NULL }, /* CashSettlAgentName */
        { 183, 0, NULL }, /* CashSettlAgentCode */
        { 184, 0, NULL }, /* CashSettlAgentAcctNum */
        { 185, 0, NULL }, /* CashSettlAgentAcctName */
        { 186, 0, NULL }, /* CashSettlAgentContactName */
        { 187, 0, NULL }, /* CashSettlAgentContactPhone */
        { 188, 0, NULL }, /* BidSpotRate */
        { 189, 0, NULL }, /* BidForwardPoints */
        { 190, 0, NULL }, /* OfferSpotRate */
        { 191, 0, NULL }, /* OfferForwardPoints */
        { 192, 0, NULL }, /* OrderQty2 */
        { 193, 0, NULL }, /* SettlDate2 */
        { 194, 0, NULL }, /* LastSpotRate */
        { 195, 0, NULL }, /* LastForwardPoints */
        { 196, 0, NULL }, /* AllocLinkID */
        { 197, 0, AllocLinkType_val },
        { 198, 0, NULL }, /* SecondaryOrderID */
        { 199, 0, NULL }, /* NoIOIQualifiers */
        { 200, 0, NULL }, /* MaturityMonthYear */
        { 201, 0, PutOrCall_val },
        { 202, 0, NULL }, /* StrikePrice */
        { 203, 0, CoveredOrUncovered_val },
        { 204, 0, CustomerOrFirm_val },
        { 205, 0, NULL }, /* MaturityDay */
        { 206, 0, NULL }, /* OptAttribute */
        { 207, 0, NULL }, /* SecurityExchange */
        { 208, 2, NotifyBrokerOfCredit_val },
        { 209, 0, AllocHandlInst_val },
        { 210, 0, NULL }, /* MaxShow */
        { 211, 0, NULL }, /* PegOffsetValue */
        { 212, 0, NULL }, /* XmlDataLen */
        { 213, 0, NULL }, /* XmlData */
        { 214, 0, NULL }, /* SettlInstRefID */
        { 215, 0, NULL }, /* NoRoutingIDs */
        { 216, 0, RoutingType_val },
        { 217, 0, NULL }, /* RoutingID */
        { 218, 0, NULL }, /* Spread */
        { 219, 2, Benchmark_val },
        { 220, 0, NULL }, /* BenchmarkCurveCurrency */
        { 221, 1, BenchmarkCurveName_val },
        { 222, 0, NULL }, /* BenchmarkCurvePoint */
        { 223, 0, NULL }, /* CouponRate */
        { 224, 0, NULL }, /* CouponPaymentDate */
        { 225, 0, NULL }, /* IssueDate */
        { 226, 0, NULL }, /* RepurchaseTerm */
        { 227, 0, NULL }, /* RepurchaseRate */
        { 228, 0, NULL }, /* Factor */
        { 229, 0, NULL }, /* TradeOriginationDate */
        { 230, 0, NULL }, /* ExDate */
        { 231, 0, NULL }, /* ContractMultiplier */
        { 232, 0, NULL }, /* NoStipulations */
        { 233, 1, StipulationType_val },
        { 234, 1, StipulationValue_val },
        { 235, 1, YieldType_val },
        { 236, 0, NULL }, /* Yield */
        { 237, 0, NULL }, /* TotalTakedown */
        { 238, 0, NULL }, /* Concession */
        { 239, 0, NULL }, /* RepoCollateralSecurityType */
        { 240, 0, NULL }, /* RedemptionDate */
        { 241, 0, NULL }, /* UnderlyingCouponPaymentDate */
        { 242, 0, NULL }, /* UnderlyingIssueDate */
        { 243, 0, NULL }, /* UnderlyingRepoCollateralSecurityType */
        { 244, 0, NULL }, /* UnderlyingRepurchaseTerm */
        { 245, 0, NULL }, /* UnderlyingRepurchaseRate */
        { 246, 0, NULL }, /* UnderlyingFactor */
        { 247, 0, NULL }, /* UnderlyingRedemptionDate */
        { 248, 0, NULL }, /* LegCouponPaymentDate */
        { 249, 0, NULL }, /* LegIssueDate */
        { 250, 0, NULL }, /* LegRepoCollateralSecurityType */
        { 251, 0, NULL }, /* LegRepurchaseTerm */
        { 252, 0, NULL }, /* LegRepurchaseRate */
        { 253, 0, NULL }, /* LegFactor */
        { 254, 0, NULL }, /* LegRedemptionDate */
        { 255, 0, NULL }, /* CreditRating */
        { 256, 0, NULL }, /* UnderlyingCreditRating */
        { 257, 0, NULL }, /* LegCreditRating */
        { 258, 2, TradedFlatSwitch_val },
        { 259, 0, NULL }, /* BasisFeatureDate */
        { 260, 0, NULL }, /* BasisFeaturePrice */
        { 262, 0, NULL }, /* MDReqID */
        { 263, 2, SubscriptionRequestType_val },
        { 264, 0, NULL }, /* MarketDepth */
        { 265, 0, MDUpdateType_val },
        { 266, 2, AggregatedBook_val },
        { 267, 0, NULL }, /* NoMDEntryTypes */
        { 268, 0, NULL }, /* NoMDEntries */
        { 269, 2, MDEntryType_val },
        { 270, 0, NULL }, /* MDEntryPx */
        { 271, 0, NULL }, /* MDEntrySize */
        { 272, 0, NULL }, /* MDEntryDate */
        { 273, 0, NULL }, /* MDEntryTime */
        { 274, 2, TickDirection_val },
        { 275, 0, NULL }, /* MDMkt */
        { 276, 2, QuoteCondition_val },
        { 277, 2, TradeCondition_val },
        { 278, 0, NULL }, /* MDEntryID */
        { 279, 2, MDUpdateAction_val },
        { 280, 0, NULL }, /* MDEntryRefID */
        { 281, 2, MDReqRejReason_val },
        { 282, 0, NULL }, /* MDEntryOriginator */
        { 283, 0, NULL }, /* LocationID */
        { 284, 0, NULL }, /* DeskID */
        { 285, 2, DeleteReason_val },
        { 286, 2, OpenCloseSettlFlag_val },
        { 287, 0, NULL }, /* SellerDays */
        { 288, 0, NULL }, /* MDEntryBuyer */
        { 289, 0, NULL }, /* MDEntrySeller */
        { 290, 0, NULL }, /* MDEntryPositionNo */
        { 291, 2, FinancialStatus_val },
        { 292, 2, CorporateAction_val },
        { 293, 0, NULL }, /* DefBidSize */
        { 294, 0, NULL }, /* DefOfferSize */
        { 295, 0, NULL }, /* NoQuoteEntries */
        { 296, 0, NULL }, /* NoQuoteSets */
        { 297, 0, QuoteStatus_val },
        { 298, 0, QuoteCancelType_val },
        { 299, 0, NULL }, /* QuoteEntryID */
        { 300, 0, QuoteRejectReason_val },
        { 301, 0, QuoteResponseLevel_val },
        { 302, 0, NULL }, /* QuoteSetID */
        { 303, 0, QuoteRequestType_val },
        { 304, 0, NULL }, /* TotNoQuoteEntries */
        { 305, 0, NULL }, /* UnderlyingSecurityIDSource */
        { 306, 0, NULL }, /* UnderlyingIssuer */
        { 307, 0, NULL }, /* UnderlyingSecurityDesc */
        { 308, 0, NULL }, /* UnderlyingSecurityExchange */
        { 309, 0, NULL }, /* UnderlyingSecurityID */
        { 310, 0, NULL }, /* UnderlyingSecurityType */
        { 311, 0, NULL }, /* UnderlyingSymbol */
        { 312, 0, NULL }, /* UnderlyingSymbolSfx */
        { 313, 0, NULL }, /* UnderlyingMaturityMonthYear */
        { 314, 0, NULL }, /* UnderlyingMaturityDay */
        { 315, 0, NULL }, /* UnderlyingPutOrCall */
        { 316, 0, NULL }, /* UnderlyingStrikePrice */
        { 317, 0, NULL }, /* UnderlyingOptAttribute */
        { 318, 0, NULL }, /* UnderlyingCurrency */
        { 319, 0, NULL }, /* RatioQty */
        { 320, 0, NULL }, /* SecurityReqID */
        { 321, 0, SecurityRequestType_val },
        { 322, 0, NULL }, /* SecurityResponseID */
        { 323, 0, SecurityResponseType_val },
        { 324, 0, NULL }, /* SecurityStatusReqID */
        { 325, 2, UnsolicitedIndicator_val },
        { 326, 0, SecurityTradingStatus_val },
        { 327, 0, HaltReasonInt_val },
        { 328, 2, InViewOfCommon_val },
        { 329, 2, DueToRelated_val },
        { 330, 0, NULL }, /* BuyVolume */
        { 331, 0, NULL }, /* SellVolume */
        { 332, 0, NULL }, /* HighPx */
        { 333, 0, NULL }, /* LowPx */
        { 334, 0, Adjustment_val },
        { 335, 0, NULL }, /* TradSesReqID */
        { 336, 1, TradingSessionID_val },
        { 337, 0, NULL }, /* ContraTrader */
        { 338, 0, TradSesMethod_val },
        { 339, 0, TradSesMode_val },
        { 340, 0, TradSesStatus_val },
        { 341, 0, NULL }, /* TradSesStartTime */
        { 342, 0, NULL }, /* TradSesOpenTime */
        { 343, 0, NULL }, /* TradSesPreCloseTime */
        { 344, 0, NULL }, /* TradSesCloseTime */
        { 345, 0, NULL }, /* TradSesEndTime */
        { 346, 0, NULL }, /* NumberOfOrders */
        { 347, 1, MessageEncoding_val },
        { 348, 0, NULL }, /* EncodedIssuerLen */
        { 349, 0, NULL }, /* EncodedIssuer */
        { 350, 0, NULL }, /* EncodedSecurityDescLen */
        { 351, 0, NULL }, /* EncodedSecurityDesc */
        { 352, 0, NULL }, /* EncodedListExecInstLen */
        { 353, 0, NULL }, /* EncodedListExecInst */
        { 354, 0, NULL }, /* EncodedTextLen */
        { 355, 0, NULL }, /* EncodedText */
        { 356, 0, NULL }, /* EncodedSubjectLen */
        { 357, 0, NULL }, /* EncodedSubject */
        { 358, 0, NULL }, /* EncodedHeadlineLen */
        { 359, 0, NULL }, /* EncodedHeadline */
        { 360, 0, NULL }, /* EncodedAllocTextLen */
        { 361, 0, NULL }, /* EncodedAllocText */
        { 362, 0, NULL }, /* EncodedUnderlyingIssuerLen */
        { 363, 0, NULL }, /* EncodedUnderlyingIssuer */
        { 364, 0, NULL }, /* EncodedUnderlyingSecurityDescLen */
        { 365, 0, NULL }, /* EncodedUnderlyingSecurityDesc */
        { 366, 0, NULL }, /* AllocPrice */
        { 367, 0, NULL }, /* QuoteSetValidUntilTime */
        { 368, 0, NULL }, /* QuoteEntryRejectReason */
        { 369, 0, NULL }, /* LastMsgSeqNumProcessed */
        { 370, 0, NULL }, /* OnBehalfOfSendingTime */
        { 371, 0, NULL }, /* RefTagID */
        { 372, 0, NULL }, /* RefMsgType */
        { 373, 0, SessionRejectReason_val },
        { 374, 2, BidRequestTransType_val },
        { 375, 0, NULL }, /* ContraBroker */
        { 376, 0, NULL }, /* ComplianceID */
        { 377, 2, SolicitedFlag_val },
        { 378, 0, ExecRestatementReason_val },
        { 379, 0, NULL }, /* BusinessRejectRefID */
        { 380, 0, BusinessRejectReason_val },
        { 381, 0, NULL }, /* GrossTradeAmt */
        { 382, 0, NULL }, /* NoContraBrokers */
        { 383, 0, NULL }, /* MaxMessageSize */
        { 384, 0, NULL }, /* NoMsgTypes */
        { 385, 2, MsgDirection_val },
        { 386, 0, NULL }, /* NoTradingSessions */
        { 387, 0, NULL }, /* TotalVolumeTraded */
        { 388, 2, DiscretionInst_val },
        { 389, 0, NULL }, /* DiscretionOffsetValue */
        { 390, 0, NULL }, /* BidID */
        { 391, 0, NULL }, /* ClientBidID */
        { 392, 0, NULL }, /* ListName */
        { 393, 0, NULL }, /* TotNoRelatedSym */
        { 394, 0, BidType_val },
        { 395, 0, NULL }, /* NumTickets */
        { 396, 0, NULL }, /* SideValue1 */
        { 397, 0, NULL }, /* SideValue2 */
        { 398, 0, NULL }, /* NoBidDescriptors */
        { 399, 0, BidDescriptorType_val },
        { 400, 0, NULL }, /* BidDescriptor */
        { 401, 0, SideValueInd_val },
        { 402, 0, NULL }, /* LiquidityPctLow */
        { 403, 0, NULL }, /* LiquidityPctHigh */
        { 404, 0, NULL }, /* LiquidityValue */
        { 405, 0, NULL }, /* EFPTrackingError */
        { 406, 0, NULL }, /* FairValue */
        { 407, 0, NULL }, /* OutsideIndexPct */
        { 408, 0, NULL }, /* ValueOfFutures */
        { 409, 0, LiquidityIndType_val },
        { 410, 0, NULL }, /* WtAverageLiquidity */
        { 411, 2, ExchangeForPhysical_val },
        { 412, 0, NULL }, /* OutMainCntryUIndex */
        { 413, 0, NULL }, /* CrossPercent */
        { 414, 0, ProgRptReqs_val },
        { 415, 0, NULL }, /* ProgPeriodInterval */
        { 416, 0, IncTaxInd_val },
        { 417, 0, NULL }, /* NumBidders */
        { 418, 2, BidTradeType_val },
        { 419, 2, BasisPxType_val },
        { 420, 0, NULL }, /* NoBidComponents */
        { 421, 0, NULL }, /* Country */
        { 422, 0, NULL }, /* TotNoStrikes */
        { 423, 0, PriceType_val },
        { 424, 0, NULL }, /* DayOrderQty */
        { 425, 0, NULL }, /* DayCumQty */
        { 426, 0, NULL }, /* DayAvgPx */
        { 427, 0, GTBookingInst_val },
        { 428, 0, NULL }, /* NoStrikes */
        { 429, 0, ListStatusType_val },
        { 430, 0, NetGrossInd_val },
        { 431, 0, ListOrderStatus_val },
        { 432, 0, NULL }, /* ExpireDate */
        { 433, 2, ListExecInstType_val },
        { 434, 2, CxlRejResponseTo_val },
        { 435, 0, NULL }, /* UnderlyingCouponRate */
        { 436, 0, NULL }, /* UnderlyingContractMultiplier */
        { 437, 0, NULL }, /* ContraTradeQty */
        { 438, 0, NULL }, /* ContraTradeTime */
        { 439, 0, NULL }, /* ClearingFirm */
        { 440, 0, NULL }, /* ClearingAccount */
        { 441, 0, NULL }, /* LiquidityNumSecurities */
        { 442, 2, MultiLegReportingType_val },
        { 443, 0, NULL }, /* StrikeTime */
        { 444, 0, NULL }, /* ListStatusText */
        { 445, 0, NULL }, /* EncodedListStatusTextLen */
        { 446, 0, NULL }, /* EncodedListStatusText */
        { 447, 2, PartyIDSource_val },
        { 448, 0, NULL }, /* PartyID */
        { 449, 0, NULL }, /* TotalVolumeTradedDate */
        { 450, 0, NULL }, /* TotalVolumeTradedTime */
        { 451, 0, NULL }, /* NetChgPrevDay */
        { 452, 0, PartyRole_val },
        { 453, 0, NULL }, /* NoPartyIDs */
        { 454, 0, NULL }, /* NoSecurityAltID */
        { 455, 0, NULL }, /* SecurityAltID */
        { 456, 0, NULL }, /* SecurityAltIDSource */
        { 457, 0, NULL }, /* NoUnderlyingSecurityAltID */
        { 458, 0, NULL }, /* UnderlyingSecurityAltID */
        { 459, 0, NULL }, /* UnderlyingSecurityAltIDSource */
        { 460, 0, Product_val },
        { 461, 0, NULL }, /* CFICode */
        { 462, 0, NULL }, /* UnderlyingProduct */
        { 463, 0, NULL }, /* UnderlyingCFICode */
        { 464, 2, TestMessageIndicator_val },
        { 465, 0, QuantityType_val },
        { 466, 0, NULL }, /* BookingRefID */
        { 467, 0, NULL }, /* IndividualAllocID */
        { 468, 2, RoundingDirection_val },
        { 469, 0, NULL }, /* RoundingModulus */
        { 470, 0, NULL }, /* CountryOfIssue */
        { 471, 0, NULL }, /* StateOrProvinceOfIssue */
        { 472, 0, NULL }, /* LocaleOfIssue */
        { 473, 0, NULL }, /* NoRegistDtls */
        { 474, 0, NULL }, /* MailingDtls */
        { 475, 0, NULL }, /* InvestorCountryOfResidence */
        { 476, 0, NULL }, /* PaymentRef */
        { 477, 0, DistribPaymentMethod_val },
        { 478, 0, NULL }, /* CashDistribCurr */
        { 479, 0, NULL }, /* CommCurrency */
        { 480, 2, CancellationRights_val },
        { 481, 2, MoneyLaunderingStatus_val },
        { 482, 0, NULL }, /* MailingInst */
        { 483, 0, NULL }, /* TransBkdTime */
        { 484, 2, ExecPriceType_val },
        { 485, 0, NULL }, /* ExecPriceAdjustment */
        { 486, 0, NULL }, /* DateOfBirth */
        { 487, 0, TradeReportTransType_val },
        { 488, 0, NULL }, /* CardHolderName */
        { 489, 0, NULL }, /* CardNumber */
        { 490, 0, NULL }, /* CardExpDate */
        { 491, 0, NULL }, /* CardIssNum */
        { 492, 0, PaymentMethod_val },
        { 493, 0, NULL }, /* RegistAcctType */
        { 494, 0, NULL }, /* Designation */
        { 495, 0, TaxAdvantageType_val },
        { 496, 0, NULL }, /* RegistRejReasonText */
        { 497, 2, FundRenewWaiv_val },
        { 498, 0, NULL }, /* CashDistribAgentName */
        { 499, 0, NULL }, /* CashDistribAgentCode */
        { 500, 0, NULL }, /* CashDistribAgentAcctNumber */
        { 501, 0, NULL }, /* CashDistribPayRef */
        { 502, 0, NULL }, /* CashDistribAgentAcctName */
        { 503, 0, NULL }, /* CardStartDate */
        { 504, 0, NULL }, /* PaymentDate */
        { 505, 0, NULL }, /* PaymentRemitterID */
        { 506, 2, RegistStatus_val },
        { 507, 0, RegistRejReasonCode_val },
        { 508, 0, NULL }, /* RegistRefID */
        { 509, 0, NULL }, /* RegistDtls */
        { 510, 0, NULL }, /* NoDistribInsts */
        { 511, 0, NULL }, /* RegistEmail */
        { 512, 0, NULL }, /* DistribPercentage */
        { 513, 0, NULL }, /* RegistID */
        { 514, 2, RegistTransType_val },
        { 515, 0, NULL }, /* ExecValuationPoint */
        { 516, 0, NULL }, /* OrderPercent */
        { 517, 2, OwnershipType_val },
        { 518, 0, NULL }, /* NoContAmts */
        { 519, 0, ContAmtType_val },
        { 520, 0, NULL }, /* ContAmtValue */
        { 521, 0, NULL }, /* ContAmtCurr */
        { 522, 0, OwnerType_val },
        { 523, 0, NULL }, /* PartySubID */
        { 524, 0, NULL }, /* NestedPartyID */
        { 525, 0, NULL }, /* NestedPartyIDSource */
        { 526, 0, NULL }, /* SecondaryClOrdID */
        { 527, 0, NULL }, /* SecondaryExecID */
        { 528, 2, OrderCapacity_val },
        { 529, 2, OrderRestrictions_val },
        { 530, 2, MassCancelRequestType_val },
        { 531, 2, MassCancelResponse_val },
        { 532, 0, MassCancelRejectReason_val },
        { 533, 0, NULL }, /* TotalAffectedOrders */
        { 534, 0, NULL }, /* NoAffectedOrders */
        { 535, 0, NULL }, /* AffectedOrderID */
        { 536, 0, NULL }, /* AffectedSecondaryOrderID */
        { 537, 0, QuoteType_val },
        { 538, 0, NULL }, /* NestedPartyRole */
        { 539, 0, NULL }, /* NoNestedPartyIDs */
        { 540, 0, NULL }, /* TotalAccruedInterestAmt */
        { 541, 0, NULL }, /* MaturityDate */
        { 542, 0, NULL }, /* UnderlyingMaturityDate */
        { 543, 0, NULL }, /* InstrRegistry */
        { 544, 2, CashMargin_val },
        { 545, 0, NULL }, /* NestedPartySubID */
        { 546, 2, Scope_val },
        { 547, 2, MDImplicitDelete_val },
        { 548, 0, NULL }, /* CrossID */
        { 549, 0, CrossType_val },
        { 550, 0, CrossPrioritization_val },
        { 551, 0, NULL }, /* OrigCrossID */
        { 552, 2, NoSides_val },
        { 553, 0, NULL }, /* Username */
        { 554, 0, NULL }, /* Password */
        { 555, 0, NULL }, /* NoLegs */
        { 556, 0, NULL }, /* LegCurrency */
        { 557, 0, NULL }, /* TotNoSecurityTypes */
        { 558, 0, NULL }, /* NoSecurityTypes */
        { 559, 0, SecurityListRequestType_val },
        { 560, 0, SecurityRequestResult_val },
        { 561, 0, NULL }, /* RoundLot */
        { 562, 0, NULL }, /* MinTradeVol */
        { 563, 0, MultiLegRptTypeReq_val },
        { 564, 0, NULL }, /* LegPositionEffect */
        { 565, 0, NULL }, /* LegCoveredOrUncovered */
        { 566, 0, NULL }, /* LegPrice */
        { 567, 0, TradSesStatusRejReason_val },
        { 568, 0, NULL }, /* TradeRequestID */
        { 569, 0, TradeRequestType_val },
        { 570, 2, PreviouslyReported_val },
        { 571, 0, NULL }, /* TradeReportID */
        { 572, 0, NULL }, /* TradeReportRefID */
        { 573, 2, MatchStatus_val },
        { 574, 1, MatchType_val },
        { 575, 2, OddLot_val },
        { 576, 0, NULL }, /* NoClearingInstructions */
        { 577, 0, ClearingInstruction_val },
        { 578, 0, NULL }, /* TradeInputSource */
        { 579, 0, NULL }, /* TradeInputDevice */
        { 580, 0, NULL }, /* NoDates */
        { 581, 0, AccountType_val },
        { 582, 0, CustOrderCapacity_val },
        { 583, 0, NULL }, /* ClOrdLinkID */
        { 584, 0, NULL }, /* MassStatusReqID */
        { 585, 0, MassStatusReqType_val },
        { 586, 0, NULL }, /* OrigOrdModTime */
        { 587, 0, NULL }, /* LegSettlType */
        { 588, 0, NULL }, /* LegSettlDate */
        { 589, 2, DayBookingInst_val },
        { 590, 2, BookingUnit_val },
        { 591, 2, PreallocMethod_val },
        { 592, 0, NULL }, /* UnderlyingCountryOfIssue */
        { 593, 0, NULL }, /* UnderlyingStateOrProvinceOfIssue */
        { 594, 0, NULL }, /* UnderlyingLocaleOfIssue */
        { 595, 0, NULL }, /* UnderlyingInstrRegistry */
        { 596, 0, NULL }, /* LegCountryOfIssue */
        { 597, 0, NULL }, /* LegStateOrProvinceOfIssue */
        { 598, 0, NULL }, /* LegLocaleOfIssue */
        { 599, 0, NULL }, /* LegInstrRegistry */
        { 600, 0, NULL }, /* LegSymbol */
        { 601, 0, NULL }, /* LegSymbolSfx */
        { 602, 0, NULL }, /* LegSecurityID */
        { 603, 0, NULL }, /* LegSecurityIDSource */
        { 604, 0, NULL }, /* NoLegSecurityAltID */
        { 605, 0, NULL }, /* LegSecurityAltID */
        { 606, 0, NULL }, /* LegSecurityAltIDSource */
        { 607, 0, NULL }, /* LegProduct */
        { 608, 0, NULL }, /* LegCFICode */
        { 609, 0, NULL }, /* LegSecurityType */
        { 610, 0, NULL }, /* LegMaturityMonthYear */
        { 611, 0, NULL }, /* LegMaturityDate */
        { 612, 0, NULL }, /* LegStrikePrice */
        { 613, 0, NULL }, /* LegOptAttribute */
        { 614, 0, NULL }, /* LegContractMultiplier */
        { 615, 0, NULL }, /* LegCouponRate */
        { 616, 0, NULL }, /* LegSecurityExchange */
        { 617, 0, NULL }, /* LegIssuer */
        { 618, 0, NULL }, /* EncodedLegIssuerLen */
        { 619, 0, NULL }, /* EncodedLegIssuer */
        { 620, 0, NULL }, /* LegSecurityDesc */
        { 621, 0, NULL }, /* EncodedLegSecurityDescLen */
        { 622, 0, NULL }, /* EncodedLegSecurityDesc */
        { 623, 0, NULL }, /* LegRatioQty */
        { 624, 0, NULL }, /* LegSide */
        { 625, 1, TradingSessionSubID_val },
        { 626, 0, AllocType_val },
        { 627, 0, NULL }, /* NoHops */
        { 628, 0, NULL }, /* HopCompID */
        { 629, 0, NULL }, /* HopSendingTime */
        { 630, 0, NULL }, /* HopRefID */
        { 631, 0, NULL }, /* MidPx */
        { 632, 0, NULL }, /* BidYield */
        { 633, 0, NULL }, /* MidYield */
        { 634, 0, NULL }, /* OfferYield */
        { 635, 1, ClearingFeeIndicator_val },
        { 636, 2, WorkingIndicator_val },
        { 637, 0, NULL }, /* LegLastPx */
        { 638, 0, PriorityIndicator_val },
        { 639, 0, NULL }, /* PriceImprovement */
        { 640, 0, NULL }, /* Price2 */
        { 641, 0, NULL }, /* LastForwardPoints2 */
        { 642, 0, NULL }, /* BidForwardPoints2 */
        { 643, 0, NULL }, /* OfferForwardPoints2 */
        { 644, 0, NULL }, /* RFQReqID */
        { 645, 0, NULL }, /* MktBidPx */
        { 646, 0, NULL }, /* MktOfferPx */
        { 647, 0, NULL }, /* MinBidSize */
        { 648, 0, NULL }, /* MinOfferSize */
        { 649, 0, NULL }, /* QuoteStatusReqID */
        { 650, 2, LegalConfirm_val },
        { 651, 0, NULL }, /* UnderlyingLastPx */
        { 652, 0, NULL }, /* UnderlyingLastQty */
        { 653, 0, SecDefStatus_val },
        { 654, 0, NULL }, /* LegRefID */
        { 655, 0, NULL }, /* ContraLegRefID */
        { 656, 0, NULL }, /* SettlCurrBidFxRate */
        { 657, 0, NULL }, /* SettlCurrOfferFxRate */
        { 658, 0, QuoteRequestRejectReason_val },
        { 659, 0, NULL }, /* SideComplianceID */
        { 660, 0, AcctIDSource_val },
        { 661, 0, NULL }, /* AllocAcctIDSource */
        { 662, 0, NULL }, /* BenchmarkPrice */
        { 663, 0, NULL }, /* BenchmarkPriceType */
        { 664, 0, NULL }, /* ConfirmID */
        { 665, 0, ConfirmStatus_val },
        { 666, 0, ConfirmTransType_val },
        { 667, 0, NULL }, /* ContractSettlMonth */
        { 668, 0, DeliveryForm_val },
        { 669, 0, NULL }, /* LastParPx */
        { 670, 0, NULL }, /* NoLegAllocs */
        { 671, 0, NULL }, /* LegAllocAccount */
        { 672, 0, NULL }, /* LegIndividualAllocID */
        { 673, 0, NULL }, /* LegAllocQty */
        { 674, 0, NULL }, /* LegAllocAcctIDSource */
        { 675, 0, NULL }, /* LegSettlCurrency */
        { 676, 0, NULL }, /* LegBenchmarkCurveCurrency */
        { 677, 0, NULL }, /* LegBenchmarkCurveName */
        { 678, 0, NULL }, /* LegBenchmarkCurvePoint */
        { 679, 0, NULL }, /* LegBenchmarkPrice */
        { 680, 0, NULL }, /* LegBenchmarkPriceType */
        { 681, 0, NULL }, /* LegBidPx */
        { 682, 0, NULL }, /* LegIOIQty */
        { 683, 0, NULL }, /* NoLegStipulations */
        { 684, 0, NULL }, /* LegOfferPx */
        { 685, 0, NULL }, /* LegOrderQty */
        { 686, 0, NULL }, /* LegPriceType */
        { 687, 0, NULL }, /* LegQty */
        { 688, 0, NULL }, /* LegStipulationType */
        { 689, 0, NULL }, /* LegStipulationValue */
        { 690, 0, LegSwapType_val },
        { 691, 0, NULL }, /* Pool */
        { 692, 0, QuotePriceType_val },
        { 693, 0, NULL }, /* QuoteRespID */
        { 694, 0, QuoteRespType_val },
        { 695, 0, NULL }, /* QuoteQualifier */
        { 696, 0, NULL }, /* YieldRedemptionDate */
        { 697, 0, NULL }, /* YieldRedemptionPrice */
        { 698, 0, NULL }, /* YieldRedemptionPriceType */
        { 699, 0, NULL }, /* BenchmarkSecurityID */
        { 700, 0, NULL }, /* ReversalIndicator */
        { 701, 0, NULL }, /* YieldCalcDate */
        { 702, 0, NULL }, /* NoPositions */
        { 703, 1, PosType_val },
        { 704, 0, NULL }, /* LongQty */
        { 705, 0, NULL }, /* ShortQty */
        { 706, 0, PosQtyStatus_val },
        { 707, 1, PosAmtType_val },
        { 708, 0, NULL }, /* PosAmt */
        { 709, 0, PosTransType_val },
        { 710, 0, NULL }, /* PosReqID */
        { 711, 0, NULL }, /* NoUnderlyings */
        { 712, 0, PosMaintAction_val },
        { 713, 0, NULL }, /* OrigPosReqRefID */
        { 714, 0, NULL }, /* PosMaintRptRefID */
        { 715, 0, NULL }, /* ClearingBusinessDate */
        { 716, 1, SettlSessID_val },
        { 717, 0, NULL }, /* SettlSessSubID */
        { 718, 0, AdjustmentType_val },
        { 719, 0, NULL }, /* ContraryInstructionIndicator */
        { 720, 0, NULL }, /* PriorSpreadIndicator */
        { 721, 0, NULL }, /* PosMaintRptID */
        { 722, 0, PosMaintStatus_val },
        { 723, 0, PosMaintResult_val },
        { 724, 0, PosReqType_val },
        { 725, 0, ResponseTransportType_val },
        { 726, 0, NULL }, /* ResponseDestination */
        { 727, 0, NULL }, /* TotalNumPosReports */
        { 728, 0, PosReqResult_val },
        { 729, 0, PosReqStatus_val },
        { 730, 0, NULL }, /* SettlPrice */
        { 731, 0, SettlPriceType_val },
        { 732, 0, NULL }, /* UnderlyingSettlPrice */
        { 733, 0, NULL }, /* UnderlyingSettlPriceType */
        { 734, 0, NULL }, /* PriorSettlPrice */
        { 735, 0, NULL }, /* NoQuoteQualifiers */
        { 736, 0, NULL }, /* AllocSettlCurrency */
        { 737, 0, NULL }, /* AllocSettlCurrAmt */
        { 738, 0, NULL }, /* InterestAtMaturity */
        { 739, 0, NULL }, /* LegDatedDate */
        { 740, 0, NULL }, /* LegPool */
        { 741, 0, NULL }, /* AllocInterestAtMaturity */
        { 742, 0, NULL }, /* AllocAccruedInterestAmt */
        { 743, 0, NULL }, /* DeliveryDate */
        { 744, 2, AssignmentMethod_val },
        { 745, 0, NULL }, /* AssignmentUnit */
        { 746, 0, NULL }, /* OpenInterest */
        { 747, 2, ExerciseMethod_val },
        { 748, 0, NULL }, /* TotNumTradeReports */
        { 749, 0, TradeRequestResult_val },
        { 750, 0, TradeRequestStatus_val },
        { 751, 0, TradeReportRejectReason_val },
        { 752, 0, SideMultiLegReportingType_val },
        { 753, 0, NULL }, /* NoPosAmt */
        { 754, 0, NULL }, /* AutoAcceptIndicator */
        { 755, 0, NULL }, /* AllocReportID */
        { 756, 0, NULL }, /* NoNested2PartyIDs */
        { 757, 0, NULL }, /* Nested2PartyID */
        { 758, 0, NULL }, /* Nested2PartyIDSource */
        { 759, 0, NULL }, /* Nested2PartyRole */
        { 760, 0, NULL }, /* Nested2PartySubID */
        { 761, 0, NULL }, /* BenchmarkSecurityIDSource */
        { 762, 0, NULL }, /* SecuritySubType */
        { 763, 0, NULL }, /* UnderlyingSecuritySubType */
        { 764, 0, NULL }, /* LegSecuritySubType */
        { 765, 0, NULL }, /* AllowableOneSidednessPct */
        { 766, 0, NULL }, /* AllowableOneSidednessValue */
        { 767, 0, NULL }, /* AllowableOneSidednessCurr */
        { 768, 0, NULL }, /* NoTrdRegTimestamps */
        { 769, 0, NULL }, /* TrdRegTimestamp */
        { 770, 0, TrdRegTimestampType_val },
        { 771, 0, NULL }, /* TrdRegTimestampOrigin */
        { 772, 0, NULL }, /* ConfirmRefID */
        { 773, 0, ConfirmType_val },
        { 774, 0, ConfirmRejReason_val },
        { 775, 0, BookingType_val },
        { 776, 0, NULL }, /* IndividualAllocRejCode */
        { 777, 0, NULL }, /* SettlInstMsgID */
        { 778, 0, NULL }, /* NoSettlInst */
        { 779, 0, NULL }, /* LastUpdateTime */
        { 780, 0, AllocSettlInstType_val },
        { 781, 0, NULL }, /* NoSettlPartyIDs */
        { 782, 0, NULL }, /* SettlPartyID */
        { 783, 0, NULL }, /* SettlPartyIDSource */
        { 784, 0, NULL }, /* SettlPartyRole */
        { 785, 0, NULL }, /* SettlPartySubID */
        { 786, 0, NULL }, /* SettlPartySubIDType */
        { 787, 2, DlvyInstType_val },
        { 788, 0, TerminationType_val },
        { 789, 0, NULL }, /* NextExpectedMsgSeqNum */
        { 790, 0, NULL }, /* OrdStatusReqID */
        { 791, 0, NULL }, /* SettlInstReqID */
        { 792, 0, SettlInstReqRejCode_val },
        { 793, 0, NULL }, /* SecondaryAllocID */
        { 794, 0, AllocReportType_val },
        { 795, 0, NULL }, /* AllocReportRefID */
        { 796, 0, AllocCancReplaceReason_val },
        { 797, 0, NULL }, /* CopyMsgIndicator */
        { 798, 0, AllocAccountType_val },
        { 799, 0, NULL }, /* OrderAvgPx */
        { 800, 0, NULL }, /* OrderBookingQty */
        { 801, 0, NULL }, /* NoSettlPartySubIDs */
        { 802, 0, NULL }, /* NoPartySubIDs */
        { 803, 0, PartySubIDType_val },
        { 804, 0, NULL }, /* NoNestedPartySubIDs */
        { 805, 0, NULL }, /* NestedPartySubIDType */
        { 806, 0, NULL }, /* NoNested2PartySubIDs */
        { 807, 0, NULL }, /* Nested2PartySubIDType */
        { 808, 0, AllocIntermedReqType_val },
        { 810, 0, NULL }, /* UnderlyingPx */
        { 811, 0, NULL }, /* PriceDelta */
        { 812, 0, NULL }, /* ApplQueueMax */
        { 813, 0, NULL }, /* ApplQueueDepth */
        { 814, 0, ApplQueueResolution_val },
        { 815, 0, ApplQueueAction_val },
        { 816, 0, NULL }, /* NoAltMDSource */
        { 817, 0, NULL }, /* AltMDSourceID */
        { 818, 0, NULL }, /* SecondaryTradeReportID */
        { 819, 0, AvgPxIndicator_val },
        { 820, 0, NULL }, /* TradeLinkID */
        { 821, 0, NULL }, /* OrderInputDevice */
        { 822, 0, NULL }, /* UnderlyingTradingSessionID */
        { 823, 0, NULL }, /* UnderlyingTradingSessionSubID */
        { 824, 0, NULL }, /* TradeLegRefID */
        { 825, 0, NULL }, /* ExchangeRule */
        { 826, 0, TradeAllocIndicator_val },
        { 827, 0, ExpirationCycle_val },
        { 828, 0, TrdType_val },
        { 829, 0, TrdSubType_val },
        { 830, 0, NULL }, /* TransferReason */
        { 831, 0, NULL }, /* AsgnReqID */
        { 832, 0, NULL }, /* TotNumAssignmentReports */
        { 833, 0, NULL }, /* AsgnRptID */
        { 834, 0, NULL }, /* ThresholdAmount */
        { 835, 0, PegMoveType_val },
        { 836, 0, PegOffsetType_val },
        { 837, 0, PegLimitType_val },
        { 838, 0, PegRoundDirection_val },
        { 839, 0, NULL }, /* PeggedPrice */
        { 840, 0, PegScope_val },
        { 841, 0, DiscretionMoveType_val },
        { 842, 0, DiscretionOffsetType_val },
        { 843, 0, DiscretionLimitType_val },
        { 844, 0, DiscretionRoundDirection_val },
        { 845, 0, NULL }, /* DiscretionPrice */
        { 846, 0, DiscretionScope_val },
        { 847, 0, TargetStrategy_val },
        { 848, 0, NULL }, /* TargetStrategyParameters */
        { 849, 0, NULL }, /* ParticipationRate */
        { 850, 0, NULL }, /* TargetStrategyPerformance */
        { 851, 0, LastLiquidityInd_val },
        { 852, 2, PublishTrdIndicator_val },
        { 853, 0, ShortSaleReason_val },
        { 854, 0, QtyType_val },
        { 855, 0, NULL }, /* SecondaryTrdType */
        { 856, 0, TradeReportType_val },
        { 857, 0, AllocNoOrdersType_val },
        { 858, 0, NULL }, /* SharedCommission */
        { 859, 0, NULL }, /* ConfirmReqID */
        { 860, 0, NULL }, /* AvgParPx */
        { 861, 0, NULL }, /* ReportedPx */
        { 862, 0, NULL }, /* NoCapacities */
        { 863, 0, NULL }, /* OrderCapacityQty */
        { 864, 0, NULL }, /* NoEvents */
        { 865, 0, EventType_val },
        { 866, 0, NULL }, /* EventDate */
        { 867, 0, NULL }, /* EventPx */
        { 868, 0, NULL }, /* EventText */
        { 869, 0, NULL }, /* PctAtRisk */
        { 870, 0, NULL }, /* NoInstrAttrib */
        { 871, 0, InstrAttribType_val },
        { 872, 0, NULL }, /* InstrAttribValue */
        { 873, 0, NULL }, /* DatedDate */
        { 874, 0, NULL }, /* InterestAccrualDate */
        { 875, 0, CPProgram_val },
        { 876, 0, NULL }, /* CPRegType */
        { 877, 0, NULL }, /* UnderlyingCPProgram */
        { 878, 0, NULL }, /* UnderlyingCPRegType */
        { 879, 0, NULL }, /* UnderlyingQty */
        { 880, 0, NULL }, /* TrdMatchID */
        { 881, 0, NULL }, /* SecondaryTradeReportRefID */
        { 882, 0, NULL }, /* UnderlyingDirtyPrice */
        { 883, 0, NULL }, /* UnderlyingEndPrice */
        { 884, 0, NULL }, /* UnderlyingStartValue */
        { 885, 0, NULL }, /* UnderlyingCurrentValue */
        { 886, 0, NULL }, /* UnderlyingEndValue */
        { 887, 0, NULL }, /* NoUnderlyingStips */
        { 888, 0, NULL }, /* UnderlyingStipType */
        { 889, 0, NULL }, /* UnderlyingStipValue */
        { 890, 0, NULL }, /* MaturityNetMoney */
        { 891, 0, MiscFeeBasis_val },
        { 892, 0, NULL }, /* TotNoAllocs */
        { 893, 2, LastFragment_val },
        { 894, 0, NULL }, /* CollReqID */
        { 895, 0, CollAsgnReason_val },
        { 896, 0, CollInquiryQualifier_val },
        { 897, 0, NULL }, /* NoTrades */
        { 898, 0, NULL }, /* MarginRatio */
        { 899, 0, NULL }, /* MarginExcess */
        { 900, 0, NULL }, /* TotalNetValue */
        { 901, 0, NULL }, /* CashOutstanding */
        { 902, 0, NULL }, /* CollAsgnID */
        { 903, 0, CollAsgnTransType_val },
        { 904, 0, NULL }, /* CollRespID */
        { 905, 0, CollAsgnRespType_val },
        { 906, 0, CollAsgnRejectReason_val },
        { 907, 0, NULL }, /* CollAsgnRefID */
        { 908, 0, NULL }, /* CollRptID */
        { 909, 0, NULL }, /* CollInquiryID */
        { 910, 0, CollStatus_val },
        { 911, 0, NULL }, /* TotNumReports */
        { 912, 2, LastRptRequested_val },
        { 913, 0, NULL }, /* AgreementDesc */
        { 914, 0, NULL }, /* AgreementID */
        { 915, 0, NULL }, /* AgreementDate */
        { 916, 0, NULL }, /* StartDate */
        { 917, 0, NULL }, /* EndDate */
        { 918, 0, NULL }, /* AgreementCurrency */
        { 919, 0, DeliveryType_val },
        { 920, 0, NULL }, /* EndAccruedInterestAmt */
        { 921, 0, NULL }, /* StartCash */
        { 922, 0, NULL }, /* EndCash */
        { 923, 0, NULL }, /* UserRequestID */
        { 924, 0, UserRequestType_val },
        { 925, 0, NULL }, /* NewPassword */
        { 926, 0, UserStatus_val },
        { 927, 0, NULL }, /* UserStatusText */
        { 928, 0, StatusValue_val },
        { 929, 0, NULL }, /* StatusText */
        { 930, 0, NULL }, /* RefCompID */
        { 931, 0, NULL }, /* RefSubID */
        { 932, 0, NULL }, /* NetworkResponseID */
        { 933, 0, NULL }, /* NetworkRequestID */
        { 934, 0, NULL }, /* LastNetworkResponseID */
        { 935, 0, NetworkRequestType_val },
        { 936, 0, NULL }, /* NoCompIDs */
        { 937, 0, NetworkStatusResponseType_val },
        { 938, 0, NULL }, /* NoCollInquiryQualifier */
        { 939, 0, TrdRptStatus_val },
        { 940, 0, AffirmStatus_val },
        { 941, 0, NULL }, /* UnderlyingStrikeCurrency */
        { 942, 0, NULL }, /* LegStrikeCurrency */
        { 943, 0, NULL }, /* TimeBracket */
        { 944, 0, CollAction_val },
        { 945, 0, CollInquiryStatus_val },
        { 946, 0, CollInquiryResult_val },
        { 947, 0, NULL }, /* StrikeCurrency */
        { 948, 0, NULL }, /* NoNested3PartyIDs */
        { 949, 0, NULL }, /* Nested3PartyID */
        { 950, 0, NULL }, /* Nested3PartyIDSource */
        { 951, 0, NULL }, /* Nested3PartyRole */
        { 952, 0, NULL }, /* NoNested3PartySubIDs */
        { 953, 0, NULL }, /* Nested3PartySubID */
        { 954, 0, NULL }, /* Nested3PartySubIDType */
        { 955, 0, NULL }, /* LegContractSettlMonth */
        { 956, 0, NULL }, /* LegInterestAccrualDate */
        { 957, 0, NULL }, /* NoStrategyParameters */
        { 958, 0, NULL }, /* StrategyParameterName */
        { 959, 0, StrategyParameterType_val },
        { 960, 0, NULL }, /* StrategyParameterValue */
        { 961, 0, NULL }, /* HostCrossID */
        { 962, 0, NULL }, /* SideTimeInForce */
        { 963, 0, NULL }, /* MDReportID */
        { 964, 0, NULL }, /* SecurityReportID */
        { 965, 1, SecurityStatus_val },
        { 966, 0, NULL }, /* SettleOnOpenFlag */
        { 967, 0, NULL }, /* StrikeMultiplier */
        { 968, 0, NULL }, /* StrikeValue */
        { 969, 0, NULL }, /* MinPriceIncrement */
        { 970, 0, NULL }, /* PositionLimit */
        { 971, 0, NULL }, /* NTPositionLimit */
        { 972, 0, NULL }, /* UnderlyingAllocationPercent */
        { 973, 0, NULL }, /* UnderlyingCashAmount */
        { 974, 1, UnderlyingCashType_val },
        { 975, 0, UnderlyingSettlementType_val },
        { 976, 0, NULL }, /* QuantityDate */
        { 977, 0, NULL }, /* ContIntRptID */
        { 978, 0, NULL }, /* LateIndicator */
        { 979, 0, NULL }, /* InputSource */
        { 980, 2, SecurityUpdateAction_val },
        { 981, 0, NULL }, /* NoExpiration */
        { 982, 0, ExpirationQtyType_val },
        { 983, 0, NULL }, /* ExpQty */
        { 984, 0, NULL }, /* NoUnderlyingAmounts */
        { 985, 0, NULL }, /* UnderlyingPayAmount */
        { 986, 0, NULL }, /* UnderlyingCollectAmount */
        { 987, 0, NULL }, /* UnderlyingSettlementDate */
        { 988, 0, NULL }, /* UnderlyingSettlementStatus */
        { 989, 0, NULL }, /* SecondaryIndividualAllocID */
        { 990, 0, NULL }, /* LegReportID */
        { 991, 0, NULL }, /* RndPx */
        { 992, 0, IndividualAllocType_val },
        { 993, 0, NULL }, /* AllocCustomerCapacity */
        { 994, 0, NULL }, /* TierCode */
        { 996, 1, UnitOfMeasure_val },
        { 997, 1, TimeUnit_val },
        { 998, 0, NULL }, /* UnderlyingUnitOfMeasure */
        { 999, 0, NULL }, /* LegUnitOfMeasure */
        { 1000, 0, NULL }, /* UnderlyingTimeUnit */
        { 1001, 0, NULL }, /* LegTimeUnit */
        { 1002, 0, AllocMethod_val },
        { 1003, 0, NULL }, /* TradeID */
        { 1005, 0, NULL }, /* SideTradeReportID */
        { 1006, 0, NULL }, /* SideFillStationCd */
        { 1007, 0, NULL }, /* SideReasonCd */
        { 1008, 0, NULL }, /* SideTrdSubTyp */
        { 1009, 0, NULL }, /* SideLastQty */
        { 1011, 0, NULL }, /* MessageEventSource */
        { 1012, 0, NULL }, /* SideTrdRegTimestamp */
        { 1013, 0, NULL }, /* SideTrdRegTimestampType */
        { 1014, 0, NULL }, /* SideTrdRegTimestampSrc */
        { 1015, 2, AsOfIndicator_val },
        { 1016, 0, NULL }, /* NoSideTrdRegTS */
        { 1017, 0, NULL }, /* LegOptionRatio */
        { 1018, 0, NULL }, /* NoInstrumentParties */
        { 1019, 0, NULL }, /* InstrumentPartyID */
        { 1020, 0, NULL }, /* TradeVolume */
        { 1021, 0, MDBookType_val },
        { 1022, 0, NULL }, /* MDFeedType */
        { 1023, 0, NULL }, /* MDPriceLevel */
        { 1024, 0, MDOriginType_val },
        { 1025, 0, NULL }, /* FirstPx */
        { 1026, 0, NULL }, /* MDEntrySpotRate */
        { 1027, 0, NULL }, /* MDEntryForwardPoints */
        { 1028, 0, NULL }, /* ManualOrderIndicator */
        { 1029, 0, NULL }, /* CustDirectedOrder */
        { 1030, 0, NULL }, /* ReceivedDeptID */
        { 1031, 2, CustOrderHandlingInst_val },
        { 1032, 0, OrderHandlingInstSource_val },
        { 1033, 1, DeskType_val },
        { 1034, 0, DeskTypeSource_val },
        { 1035, 2, DeskOrderHandlingInst_val },
        { 1036, 2, ExecAckStatus_val },
        { 1037, 0, NULL }, /* UnderlyingDeliveryAmount */
        { 1038, 0, NULL }, /* UnderlyingCapValue */
        { 1039, 0, NULL }, /* UnderlyingSettlMethod */
        { 1040, 0, NULL }, /* SecondaryTradeID */
        { 1041, 0, NULL }, /* FirmTradeID */
        { 1042, 0, NULL }, /* SecondaryFirmTradeID */
        { 1043, 0, CollApplType_val },
        { 1044, 0, NULL }, /* UnderlyingAdjustedQuantity */
        { 1045, 0, NULL }, /* UnderlyingFXRate */
        { 1046, 2, UnderlyingFXRateCalc_val },
        { 1047, 2, AllocPositionEffect_val },
        { 1048, 2, DealingCapacity_val },
        { 1049, 0, NULL }, /* InstrmtAssignmentMethod */
        { 1050, 0, NULL }, /* InstrumentPartyIDSource */
        { 1051, 0, NULL }, /* InstrumentPartyRole */
        { 1052, 0, NULL }, /* NoInstrumentPartySubIDs */
        { 1053, 0, NULL }, /* InstrumentPartySubID */
        { 1054, 0, NULL }, /* InstrumentPartySubIDType */
        { 1055, 0, NULL }, /* PositionCurrency */
        { 1056, 0, NULL }, /* CalculatedCcyLastQty */
        { 1057, 2, AggressorIndicator_val },
        { 1058, 0, NULL }, /* NoUndlyInstrumentParties */
        { 1059, 0, NULL }, /* UnderlyingInstrumentPartyID */
        { 1060, 0, NULL }, /* UnderlyingInstrumentPartyIDSource */
        { 1061, 0, NULL }, /* UnderlyingInstrumentPartyRole */
        { 1062, 0, NULL }, /* NoUndlyInstrumentPartySubIDs */
        { 1063, 0, NULL }, /* UnderlyingInstrumentPartySubID */
        { 1064, 0, NULL }, /* UnderlyingInstrumentPartySubIDType */
        { 1065, 0, NULL }, /* BidSwapPoints */
        { 1066, 0, NULL }, /* OfferSwapPoints */
        { 1067, 0, NULL }, /* LegBidForwardPoints */
        { 1068, 0, NULL }, /* LegOfferForwardPoints */
        { 1069, 0, NULL }, /* SwapPoints */
        { 1070, 0, MDQuoteType_val },
        { 1071, 0, NULL }, /* LastSwapPoints */
        { 1072, 0, NULL }, /* SideGrossTradeAmt */
        { 1073, 0, NULL }, /* LegLastForwardPoints */
        { 1074, 0, NULL }, /* LegCalculatedCcyLastQty */
        { 1075, 0, NULL }, /* LegGrossTradeAmt */
        { 1079, 0, NULL }, /* MaturityTime */
        { 1080, 0, NULL }, /* RefOrderID */
        { 1081, 2, RefOrderIDSource_val },
        { 1082, 0, NULL }, /* SecondaryDisplayQty */
        { 1083, 2, DisplayWhen_val },
        { 1084, 2, DisplayMethod_val },
        { 1085, 0, NULL }, /* DisplayLowQty */
        { 1086, 0, NULL }, /* DisplayHighQty */
        { 1087, 0, NULL }, /* DisplayMinIncr */
        { 1088, 0, NULL }, /* RefreshQty */
        { 1089, 0, NULL }, /* MatchIncrement */
        { 1090, 0, NULL }, /* MaxPriceLevels */
        { 1091, 0, NULL }, /* PreTradeAnonymity */
        { 1092, 2, PriceProtectionScope_val },
        { 1093, 2, LotType_val },
        { 1094, 0, PegPriceType_val },
        { 1095, 0, NULL }, /* PeggedRefPrice */
        { 1096, 0, NULL }, /* PegSecurityIDSource */
        { 1097, 0, NULL }, /* PegSecurityID */
        { 1098, 0, NULL }, /* PegSymbol */
        { 1099, 0, NULL }, /* PegSecurityDesc */
        { 1100, 2, TriggerType_val },
        { 1101, 2, TriggerAction_val },
        { 1102, 0, NULL }, /* TriggerPrice */
        { 1103, 0, NULL }, /* TriggerSymbol */
        { 1104, 0, NULL }, /* TriggerSecurityID */
        { 1105, 0, NULL }, /* TriggerSecurityIDSource */
        { 1106, 0, NULL }, /* TriggerSecurityDesc */
        { 1107, 2, TriggerPriceType_val },
        { 1108, 2, TriggerPriceTypeScope_val },
        { 1109, 2, TriggerPriceDirection_val },
        { 1110, 0, NULL }, /* TriggerNewPrice */
        { 1111, 2, TriggerOrderType_val },
        { 1112, 0, NULL }, /* TriggerNewQty */
        { 1113, 0, NULL }, /* TriggerTradingSessionID */
        { 1114, 0, NULL }, /* TriggerTradingSessionSubID */
        { 1115, 2, OrderCategory_val },
        { 1116, 0, NULL }, /* NoRootPartyIDs */
        { 1117, 0, NULL }, /* RootPartyID */
        { 1118, 0, NULL }, /* RootPartyIDSource */
        { 1119, 0, NULL }, /* RootPartyRole */
        { 1120, 0, NULL }, /* NoRootPartySubIDs */
        { 1121, 0, NULL }, /* RootPartySubID */
        { 1122, 0, NULL }, /* RootPartySubIDType */
        { 1123, 2, TradeHandlingInstr_val },
        { 1124, 0, NULL }, /* OrigTradeHandlingInstr */
        { 1125, 0, NULL }, /* OrigTradeDate */
        { 1126, 0, NULL }, /* OrigTradeID */
        { 1127, 0, NULL }, /* OrigSecondaryTradeID */
        { 1128, 1, ApplVerID_val },
        { 1129, 0, NULL }, /* CstmApplVerID */
        { 1130, 0, NULL }, /* RefApplVerID */
        { 1131, 0, NULL }, /* RefCstmApplVerID */
        { 1132, 0, NULL }, /* TZTransactTime */
        { 1133, 2, ExDestinationIDSource_val },
        { 1134, 0, NULL }, /* ReportedPxDiff */
        { 1135, 0, NULL }, /* RptSys */
        { 1136, 0, NULL }, /* AllocClearingFeeIndicator */
        { 1137, 0, NULL }, /* DefaultApplVerID */
        { 1138, 0, NULL }, /* DisplayQty */
        { 1139, 0, NULL }, /* ExchangeSpecialInstructions */
        { 1140, 0, NULL }, /* MaxTradeVol */
        { 1141, 0, NULL }, /* NoMDFeedTypes */
        { 1142, 0, NULL }, /* MatchAlgorithm */
        { 1143, 0, NULL }, /* MaxPriceVariation */
        { 1144, 0, ImpliedMarketIndicator_val },
        { 1145, 0, NULL }, /* EventTime */
        { 1146, 0, NULL }, /* MinPriceIncrementAmount */
        { 1147, 0, NULL }, /* UnitOfMeasureQty */
        { 1148, 0, NULL }, /* LowLimitPrice */
        { 1149, 0, NULL }, /* HighLimitPrice */
        { 1150, 0, NULL }, /* TradingReferencePrice */
        { 1151, 0, NULL }, /* SecurityGroup */
        { 1152, 0, NULL }, /* LegNumber */
        { 1153, 0, NULL }, /* SettlementCycleNo */
        { 1154, 0, NULL }, /* SideCurrency */
        { 1155, 0, NULL }, /* SideSettlCurrency */
        { 1156, 0, NULL }, /* ApplExtID */
        { 1157, 0, NULL }, /* CcyAmt */
        { 1158, 0, NULL }, /* NoSettlDetails */
        { 1159, 0, SettlObligMode_val },
        { 1160, 0, NULL }, /* SettlObligMsgID */
        { 1161, 0, NULL }, /* SettlObligID */
        { 1162, 2, SettlObligTransType_val },
        { 1163, 0, NULL }, /* SettlObligRefID */
        { 1164, 2, SettlObligSource_val },
        { 1165, 0, NULL }, /* NoSettlOblig */
        { 1166, 0, NULL }, /* QuoteMsgID */
        { 1167, 0, QuoteEntryStatus_val },
        { 1168, 0, NULL }, /* TotNoCxldQuotes */
        { 1169, 0, NULL }, /* TotNoAccQuotes */
        { 1170, 0, NULL }, /* TotNoRejQuotes */
        { 1171, 0, NULL }, /* PrivateQuote */
        { 1172, 0, RespondentType_val },
        { 1173, 0, NULL }, /* MDSubBookType */
        { 1174, 0, SecurityTradingEvent_val },
        { 1175, 0, NULL }, /* NoStatsIndicators */
        { 1176, 0, StatsType_val },
        { 1177, 0, NULL }, /* NoOfSecSizes */
        { 1178, 0, MDSecSizeType_val },
        { 1179, 0, NULL }, /* MDSecSize */
        { 1180, 0, NULL }, /* ApplID */
        { 1181, 0, NULL }, /* ApplSeqNum */
        { 1182, 0, NULL }, /* ApplBegSeqNum */
        { 1183, 0, NULL }, /* ApplEndSeqNum */
        { 1184, 0, NULL }, /* SecurityXMLLen */
        { 1185, 0, NULL }, /* SecurityXML */
        { 1186, 0, NULL }, /* SecurityXMLSchema */
        { 1187, 0, NULL }, /* RefreshIndicator */
        { 1188, 0, NULL }, /* Volatility */
        { 1189, 0, NULL }, /* TimeToExpiration */
        { 1190, 0, NULL }, /* RiskFreeRate */
        { 1191, 0, NULL }, /* PriceUnitOfMeasure */
        { 1192, 0, NULL }, /* PriceUnitOfMeasureQty */
        { 1193, 2, SettlMethod_val },
        { 1194, 0, ExerciseStyle_val },
        { 1195, 0, NULL }, /* OptPayoutAmount */
        { 1196, 1, PriceQuoteMethod_val },
        { 1197, 1, ValuationMethod_val },
        { 1198, 0, ListMethod_val },
        { 1199, 0, NULL }, /* CapPrice */
        { 1200, 0, NULL }, /* FloorPrice */
        { 1201, 0, NULL }, /* NoStrikeRules */
        { 1202, 0, NULL }, /* StartStrikePxRange */
        { 1203, 0, NULL }, /* EndStrikePxRange */
        { 1204, 0, NULL }, /* StrikeIncrement */
        { 1205, 0, NULL }, /* NoTickRules */
        { 1206, 0, NULL }, /* StartTickPriceRange */
        { 1207, 0, NULL }, /* EndTickPriceRange */
        { 1208, 0, NULL }, /* TickIncrement */
        { 1209, 0, TickRuleType_val },
        { 1210, 0, NULL }, /* NestedInstrAttribType */
        { 1211, 0, NULL }, /* NestedInstrAttribValue */
        { 1212, 0, NULL }, /* LegMaturityTime */
        { 1213, 0, NULL }, /* UnderlyingMaturityTime */
        { 1214, 0, NULL }, /* DerivativeSymbol */
        { 1215, 0, NULL }, /* DerivativeSymbolSfx */
        { 1216, 0, NULL }, /* DerivativeSecurityID */
        { 1217, 0, NULL }, /* DerivativeSecurityIDSource */
        { 1218, 0, NULL }, /* NoDerivativeSecurityAltID */
        { 1219, 0, NULL }, /* DerivativeSecurityAltID */
        { 1220, 0, NULL }, /* DerivativeSecurityAltIDSource */
        { 1221, 0, NULL }, /* SecondaryLowLimitPrice */
        { 1222, 0, NULL }, /* MaturityRuleID */
        { 1223, 0, NULL }, /* StrikeRuleID */
        { 1224, 0, NULL }, /* LegUnitOfMeasureQty */
        { 1225, 0, NULL }, /* DerivativeOptPayAmount */
        { 1226, 0, NULL }, /* EndMaturityMonthYear */
        { 1227, 0, NULL }, /* ProductComplex */
        { 1228, 0, NULL }, /* DerivativeProductComplex */
        { 1229, 0, NULL }, /* MaturityMonthYearIncrement */
        { 1230, 0, NULL }, /* SecondaryHighLimitPrice */
        { 1231, 0, NULL }, /* MinLotSize */
        { 1232, 0, NULL }, /* NoExecInstRules */
        { 1234, 0, NULL }, /* NoLotTypeRules */
        { 1235, 0, NULL }, /* NoMatchRules */
        { 1236, 0, NULL }, /* NoMaturityRules */
        { 1237, 0, NULL }, /* NoOrdTypeRules */
        { 1239, 0, NULL }, /* NoTimeInForceRules */
        { 1240, 0, NULL }, /* SecondaryTradingReferencePrice */
        { 1241, 0, NULL }, /* StartMaturityMonthYear */
        { 1242, 0, NULL }, /* FlexProductEligibilityIndicator */
        { 1243, 0, NULL }, /* DerivFlexProductEligibilityIndicator */
        { 1244, 0, NULL }, /* FlexibleIndicator */
        { 1245, 0, NULL }, /* TradingCurrency */
        { 1246, 0, NULL }, /* DerivativeProduct */
        { 1247, 0, NULL }, /* DerivativeSecurityGroup */
        { 1248, 0, NULL }, /* DerivativeCFICode */
        { 1249, 0, NULL }, /* DerivativeSecurityType */
        { 1250, 0, NULL }, /* DerivativeSecuritySubType */
        { 1251, 0, NULL }, /* DerivativeMaturityMonthYear */
        { 1252, 0, NULL }, /* DerivativeMaturityDate */
        { 1253, 0, NULL }, /* DerivativeMaturityTime */
        { 1254, 0, NULL }, /* DerivativeSettleOnOpenFlag */
        { 1255, 0, NULL }, /* DerivativeInstrmtAssignmentMethod */
        { 1256, 0, NULL }, /* DerivativeSecurityStatus */
        { 1257, 0, NULL }, /* DerivativeInstrRegistry */
        { 1258, 0, NULL }, /* DerivativeCountryOfIssue */
        { 1259, 0, NULL }, /* DerivativeStateOrProvinceOfIssue */
        { 1260, 0, NULL }, /* DerivativeLocaleOfIssue */
        { 1261, 0, NULL }, /* DerivativeStrikePrice */
        { 1262, 0, NULL }, /* DerivativeStrikeCurrency */
        { 1263, 0, NULL }, /* DerivativeStrikeMultiplier */
        { 1264, 0, NULL }, /* DerivativeStrikeValue */
        { 1265, 0, NULL }, /* DerivativeOptAttribute */
        { 1266, 0, NULL }, /* DerivativeContractMultiplier */
        { 1267, 0, NULL }, /* DerivativeMinPriceIncrement */
        { 1268, 0, NULL }, /* DerivativeMinPriceIncrementAmount */
        { 1269, 0, NULL }, /* DerivativeUnitOfMeasure */
        { 1270, 0, NULL }, /* DerivativeUnitOfMeasureQty */
        { 1271, 0, NULL }, /* DerivativeTimeUnit */
        { 1272, 0, NULL }, /* DerivativeSecurityExchange */
        { 1273, 0, NULL }, /* DerivativePositionLimit */
        { 1274, 0, NULL }, /* DerivativeNTPositionLimit */
        { 1275, 0, NULL }, /* DerivativeIssuer */
        { 1276, 0, NULL }, /* DerivativeIssueDate */
        { 1277, 0, NULL }, /* DerivativeEncodedIssuerLen */
        { 1278, 0, NULL }, /* DerivativeEncodedIssuer */
        { 1279, 0, NULL }, /* DerivativeSecurityDesc */
        { 1280, 0, NULL }, /* DerivativeEncodedSecurityDescLen */
        { 1281, 0, NULL }, /* DerivativeEncodedSecurityDesc */
        { 1282, 0, NULL }, /* DerivativeSecurityXMLLen */
        { 1283, 0, NULL }, /* DerivativeSecurityXML */
        { 1284, 0, NULL }, /* DerivativeSecurityXMLSchema */
        { 1285, 0, NULL }, /* DerivativeContractSettlMonth */
        { 1286, 0, NULL }, /* NoDerivativeEvents */
        { 1287, 0, NULL }, /* DerivativeEventType */
        { 1288, 0, NULL }, /* DerivativeEventDate */
        { 1289, 0, NULL }, /* DerivativeEventTime */
        { 1290, 0, NULL }, /* DerivativeEventPx */
        { 1291, 0, NULL }, /* DerivativeEventText */
        { 1292, 0, NULL }, /* NoDerivativeInstrumentParties */
        { 1293, 0, NULL }, /* DerivativeInstrumentPartyID */
        { 1294, 0, NULL }, /* DerivativeInstrumentPartyIDSource */
        { 1295, 0, NULL }, /* DerivativeInstrumentPartyRole */
        { 1296, 0, NULL }, /* NoDerivativeInstrumentPartySubIDs */
        { 1297, 0, NULL }, /* DerivativeInstrumentPartySubID */
        { 1298, 0, NULL }, /* DerivativeInstrumentPartySubIDType */
        { 1299, 0, NULL }, /* DerivativeExerciseStyle */
        { 1300, 0, NULL }, /* MarketSegmentID */
        { 1301, 0, NULL }, /* MarketID */
        { 1302, 0, MaturityMonthYearIncrementUnits_val },
        { 1303, 0, MaturityMonthYearFormat_val },
        { 1304, 0, NULL }, /* StrikeExerciseStyle */
        { 1305, 0, NULL }, /* SecondaryPriceLimitType */
        { 1306, 0, PriceLimitType_val },
        { 1307, 0, DerivativeSecurityListRequestType_val },
        { 1308, 0, NULL }, /* ExecInstValue */
        { 1309, 0, NULL }, /* NoTradingSessionRules */
        { 1310, 0, NULL }, /* NoMarketSegments */
        { 1311, 0, NULL }, /* NoDerivativeInstrAttrib */
        { 1312, 0, NULL }, /* NoNestedInstrAttrib */
        { 1313, 0, NULL }, /* DerivativeInstrAttribType */
        { 1314, 0, NULL }, /* DerivativeInstrAttribValue */
        { 1315, 0, NULL }, /* DerivativePriceUnitOfMeasure */
        { 1316, 0, NULL }, /* DerivativePriceUnitOfMeasureQty */
        { 1317, 0, NULL }, /* DerivativeSettlMethod */
        { 1318, 0, NULL }, /* DerivativePriceQuoteMethod */
        { 1319, 0, NULL }, /* DerivativeValuationMethod */
        { 1320, 0, NULL }, /* DerivativeListMethod */
        { 1321, 0, NULL }, /* DerivativeCapPrice */
        { 1322, 0, NULL }, /* DerivativeFloorPrice */
        { 1323, 0, NULL }, /* DerivativePutOrCall */
        { 1324, 0, NULL }, /* ListUpdateAction */
        { 1325, 0, NULL }, /* ParentMktSegmID */
        { 1326, 0, NULL }, /* TradingSessionDesc */
        { 1327, 0, NULL }, /* TradSesUpdateAction */
        { 1328, 0, NULL }, /* RejectText */
        { 1329, 0, NULL }, /* FeeMultiplier */
        { 1330, 0, NULL }, /* UnderlyingLegSymbol */
        { 1331, 0, NULL }, /* UnderlyingLegSymbolSfx */
        { 1332, 0, NULL }, /* UnderlyingLegSecurityID */
        { 1333, 0, NULL }, /* UnderlyingLegSecurityIDSource */
        { 1334, 0, NULL }, /* NoUnderlyingLegSecurityAltID */
        { 1335, 0, NULL }, /* UnderlyingLegSecurityAltID */
        { 1336, 0, NULL }, /* UnderlyingLegSecurityAltIDSource */
        { 1337, 0, NULL }, /* UnderlyingLegSecurityType */
        { 1338, 0, NULL }, /* UnderlyingLegSecuritySubType */
        { 1339, 0, NULL }, /* UnderlyingLegMaturityMonthYear */
        { 1340, 0, NULL }, /* UnderlyingLegStrikePrice */
        { 1341, 0, NULL }, /* UnderlyingLegSecurityExchange */
        { 1342, 0, NULL }, /* NoOfLegUnderlyings */
        { 1343, 0, NULL }, /* UnderlyingLegPutOrCall */
        { 1344, 0, NULL }, /* UnderlyingLegCFICode */
        { 1345, 0, NULL }, /* UnderlyingLegMaturityDate */
        { 1346, 0, NULL }, /* ApplReqID */
        { 1347, 0, ApplReqType_val },
        { 1348, 0, ApplResponseType_val },
        { 1349, 0, NULL }, /* ApplTotalMessageCount */
        { 1350, 0, NULL }, /* ApplLastSeqNum */
        { 1351, 0, NULL }, /* NoApplIDs */
        { 1352, 0, NULL }, /* ApplResendFlag */
        { 1353, 0, NULL }, /* ApplResponseID */
        { 1354, 0, ApplResponseError_val },
        { 1355, 0, NULL }, /* RefApplID */
        { 1356, 0, NULL }, /* ApplReportID */
        { 1357, 0, NULL }, /* RefApplLastSeqNum */
        { 1358, 0, NULL }, /* LegPutOrCall */
        { 1359, 0, NULL }, /* EncodedSymbolLen */
        { 1360, 0, NULL }, /* EncodedSymbol */
        { 1361, 0, NULL }, /* TotNoFills */
        { 1362, 0, NULL }, /* NoFills */
        { 1363, 0, NULL }, /* FillExecID */
        { 1364, 0, NULL }, /* FillPx */
        { 1365, 0, NULL }, /* FillQty */
        { 1366, 0, NULL }, /* LegAllocID */
        { 1367, 0, NULL }, /* LegAllocSettlCurrency */
        { 1368, 0, TradSesEvent_val },
        { 1369, 0, NULL }, /* MassActionReportID */
        { 1370, 0, NULL }, /* NoNotAffectedOrders */
        { 1371, 0, NULL }, /* NotAffectedOrderID */
        { 1372, 0, NULL }, /* NotAffOrigClOrdID */
        { 1373, 0, MassActionType_val },
        { 1374, 0, MassActionScope_val },
        { 1375, 0, MassActionResponse_val },
        { 1376, 0, MassActionRejectReason_val },
        { 1377, 0, MultilegModel_val },
        { 1378, 0, MultilegPriceMethod_val },
        { 1379, 0, NULL }, /* LegVolatility */
        { 1380, 0, NULL }, /* DividendYield */
        { 1381, 0, NULL }, /* LegDividendYield */
        { 1382, 0, NULL }, /* CurrencyRatio */
        { 1383, 0, NULL }, /* LegCurrencyRatio */
        { 1384, 0, NULL }, /* LegExecInst */
        { 1385, 0, ContingencyType_val },
        { 1386, 0, ListRejectReason_val },
        { 1387, 0, NULL }, /* NoTrdRepIndicators */
        { 1388, 0, NULL }, /* TrdRepPartyRole */
        { 1389, 0, NULL }, /* TrdRepIndicator */
        { 1390, 0, TradePublishIndicator_val },
        { 1391, 0, NULL }, /* UnderlyingLegOptAttribute */
        { 1392, 0, NULL }, /* UnderlyingLegSecurityDesc */
        { 1393, 0, NULL }, /* MarketReqID */
        { 1394, 0, NULL }, /* MarketReportID */
        { 1395, 2, MarketUpdateAction_val },
        { 1396, 0, NULL }, /* MarketSegmentDesc */
        { 1397, 0, NULL }, /* EncodedMktSegmDescLen */
        { 1398, 0, NULL }, /* EncodedMktSegmDesc */
        { 1399, 0, NULL }, /* ApplNewSeqNum */
        { 1400, 0, NULL }, /* EncryptedPasswordMethod */
        { 1401, 0, NULL }, /* EncryptedPasswordLen */
        { 1402, 0, NULL }, /* EncryptedPassword */
        { 1403, 0, NULL }, /* EncryptedNewPasswordLen */
        { 1404, 0, NULL }, /* EncryptedNewPassword */
        { 1405, 0, NULL }, /* UnderlyingLegMaturityTime */
        { 1406, 0, NULL }, /* RefApplExtID */
        { 1407, 0, NULL }, /* DefaultApplExtID */
        { 1408, 0, NULL }, /* DefaultCstmApplVerID */
        { 1409, 0, SessionStatus_val },
        { 1410, 0, NULL }, /* DefaultVerIndicator */
        { 1411, 0, NULL }, /* Nested4PartySubIDType */
        { 1412, 0, NULL }, /* Nested4PartySubID */
        { 1413, 0, NULL }, /* NoNested4PartySubIDs */
        { 1414, 0, NULL }, /* NoNested4PartyIDs */
        { 1415, 0, NULL }, /* Nested4PartyID */
        { 1416, 0, NULL }, /* Nested4PartyIDSource */
        { 1417, 0, NULL }, /* Nested4PartyRole */
        { 1418, 0, NULL }, /* LegLastQty */
        { 1419, 0, NULL }, /* UnderlyingExerciseStyle */
        { 1420, 0, NULL }, /* LegExerciseStyle */
        { 1421, 0, NULL }, /* LegPriceUnitOfMeasure */
        { 1422, 0, NULL }, /* LegPriceUnitOfMeasureQty */
        { 1423, 0, NULL }, /* UnderlyingUnitOfMeasureQty */
        { 1424, 0, NULL }, /* UnderlyingPriceUnitOfMeasure */
        { 1425, 0, NULL }, /* UnderlyingPriceUnitOfMeasureQty */
        { 1426, 0, ApplReportType_val },
        { 1427, 0, NULL }, /* SideExecID */
        { 1428, 0, NULL }, /* OrderDelay */
        { 1429, 0, OrderDelayUnit_val },
        { 1430, 2, VenueType_val },
        { 1431, 0, RefOrdIDReason_val },
        { 1432, 0, OrigCustOrderCapacity_val },
        { 1433, 0, NULL }, /* RefApplReqID */
        { 1434, 0, ModelType_val },
        { 1435, 0, ContractMultiplierUnit_val },
        { 1436, 0, NULL }, /* LegContractMultiplierUnit */
        { 1437, 0, NULL }, /* UnderlyingContractMultiplierUnit */
        { 1438, 0, NULL }, /* DerivativeContractMultiplierUnit */
        { 1439, 0, FlowScheduleType_val },
        { 1440, 0, NULL }, /* LegFlowScheduleType */
        { 1441, 0, NULL }, /* UnderlyingFlowScheduleType */
        { 1442, 0, NULL }, /* DerivativeFlowScheduleType */
        { 1443, 0, NULL }, /* FillLiquidityInd */
        { 1444, 0, NULL }, /* SideLiquidityInd */
        { 1445, 0, NULL }, /* NoRateSources */
        { 1446, 0, RateSource_val },
        { 1447, 0, RateSourceType_val },
        { 1448, 0, NULL }, /* ReferencePage */
        { 1449, 1, RestructuringType_val },
        { 1450, 1, Seniority_val },
        { 1451, 0, NULL }, /* NotionalPercentageOutstanding */
        { 1452, 0, NULL }, /* OriginalNotionalPercentageOutstanding */
        { 1453, 0, NULL }, /* UnderlyingRestructuringType */
        { 1454, 0, NULL }, /* UnderlyingSeniority */
        { 1455, 0, NULL }, /* UnderlyingNotionalPercentageOutstanding */
        { 1456, 0, NULL }, /* UnderlyingOriginalNotionalPercentageOutstanding */
        { 1457, 0, NULL }, /* AttachmentPoint */
        { 1458, 0, NULL }, /* DetachmentPoint */
        { 1459, 0, NULL }, /* UnderlyingAttachmentPoint */
        { 1460, 0, NULL }, /* UnderlyingDetachmentPoint */
        { 1461, 0, NULL }, /* NoTargetPartyIDs */
        { 1462, 0, NULL }, /* TargetPartyID */
        { 1463, 0, NULL }, /* TargetPartyIDSource */
        { 1464, 0, NULL }, /* TargetPartyRole */
        { 1465, 0, NULL }, /* SecurityListID */
        { 1466, 0, NULL }, /* SecurityListRefID */
        { 1467, 0, NULL }, /* SecurityListDesc */
        { 1468, 0, NULL }, /* EncodedSecurityListDescLen */
        { 1469, 0, NULL }, /* EncodedSecurityListDesc */
        { 1470, 0, SecurityListType_val },
        { 1471, 0, SecurityListTypeSource_val },
        { 1472, 0, NULL }, /* NewsID */
        { 1473, 0, NewsCategory_val },
        { 1474, 0, NULL }, /* LanguageCode */
        { 1475, 0, NULL }, /* NoNewsRefIDs */
        { 1476, 0, NULL }, /* NewsRefID */
        { 1477, 0, NewsRefType_val },
        { 1478, 0, StrikePriceDeterminationMethod_val },
        { 1479, 0, StrikePriceBoundaryMethod_val },
        { 1480, 0, NULL }, /* StrikePriceBoundaryPrecision */
        { 1481, 0, UnderlyingPriceDeterminationMethod_val },
        { 1482, 0, OptPayoutType_val },
        { 1483, 0, NULL }, /* NoComplexEvents */
        { 1484, 0, ComplexEventType_val },
        { 1485, 0, NULL }, /* ComplexOptPayoutAmount */
        { 1486, 0, NULL }, /* ComplexEventPrice */
        { 1487, 0, ComplexEventPriceBoundaryMethod_val },
        { 1488, 0, NULL }, /* ComplexEventPriceBoundaryPrecision */
        { 1489, 0, ComplexEventPriceTimeType_val },
        { 1490, 0, ComplexEventCondition_val },
        { 1491, 0, NULL }, /* NoComplexEventDates */
        { 1492, 0, NULL }, /* ComplexEventStartDate */
        { 1493, 0, NULL }, /* ComplexEventEndDate */
        { 1494, 0, NULL }, /* NoComplexEventTimes */
        { 1495, 0, NULL }, /* ComplexEventStartTime */
        { 1496, 0, NULL }, /* ComplexEventEndTime */
        { 1497, 0, NULL }, /* StreamAsgnReqID */
        { 1498, 0, StreamAsgnReqType_val },
        { 1499, 0, NULL }, /* NoAsgnReqs */
        { 1500, 0, NULL }, /* MDStreamID */
        { 1501, 0, NULL }, /* StreamAsgnRptID */
        { 1502, 0, StreamAsgnRejReason_val },
        { 1503, 0, StreamAsgnAckType_val },
        { 1504, 0, NULL }, /* RelSymTransactTime */
        { 1505, 0, NULL }, /* PartyDetailsListRequestID */
        { 1506, 0, NULL }, /* NoPartyListResponseTypes */
        { 1507, 0, PartyListResponseType_val },
        { 1508, 0, NULL }, /* NoRequestedPartyRoles */
        { 1509, 0, NULL }, /* RequestedPartyRole */
        { 1510, 0, NULL }, /* PartyDetailsListReportID */
        { 1511, 0, PartyDetailsRequestResult_val },
        { 1512, 0, NULL }, /* TotNoPartyList */
        { 1513, 0, NULL }, /* NoPartyList */
        { 1514, 0, NULL }, /* NoPartyRelationships */
        { 1515, 0, PartyRelationship_val },
        { 1516, 0, NULL }, /* NoPartyAltIDs */
        { 1517, 0, NULL }, /* PartyAltID */
        { 1518, 0, NULL }, /* PartyAltIDSource */
        { 1519, 0, NULL }, /* NoPartyAltSubIDs */
        { 1520, 0, NULL }, /* PartyAltSubID */
        { 1521, 0, NULL }, /* PartyAltSubIDType */
        { 1522, 0, NULL }, /* NoContextPartyIDs */
        { 1523, 0, NULL }, /* ContextPartyID */
        { 1524, 0, NULL }, /* ContextPartyIDSource */
        { 1525, 0, NULL }, /* ContextPartyRole */
        { 1526, 0, NULL }, /* NoContextPartySubIDs */
        { 1527, 0, NULL }, /* ContextPartySubID */
        { 1528, 0, NULL }, /* ContextPartySubIDType */
        { 1529, 0, NULL }, /* NoRiskLimits */
        { 1530, 0, RiskLimitType_val },
        { 1531, 0, NULL }, /* RiskLimitAmount */
        { 1532, 0, NULL }, /* RiskLimitCurrency */
        { 1533, 0, NULL }, /* RiskLimitPlatform */
        { 1534, 0, NULL }, /* NoRiskInstruments */
        { 1535, 0, RiskInstrumentOperator_val },
        { 1536, 0, NULL }, /* RiskSymbol */
        { 1537, 0, NULL }, /* RiskSymbolSfx */
        { 1538, 0, NULL }, /* RiskSecurityID */
        { 1539, 0, NULL }, /* RiskSecurityIDSource */
        { 1540, 0, NULL }, /* NoRiskSecurityAltID */
        { 1541, 0, NULL }, /* RiskSecurityAltID */
        { 1542, 0, NULL }, /* RiskSecurityAltIDSource */
        { 1543, 0, NULL }, /* RiskProduct */
        { 1544, 0, NULL }, /* RiskProductComplex */
        { 1545, 0, NULL }, /* RiskSecurityGroup */
        { 1546, 0, NULL }, /* RiskCFICode */
        { 1547, 0, NULL }, /* RiskSecurityType */
        { 1548, 0, NULL }, /* RiskSecuritySubType */
        { 1549, 0, NULL }, /* RiskMaturityMonthYear */
        { 1550, 0, NULL }, /* RiskMaturityTime */
        { 1551, 0, NULL }, /* RiskRestructuringType */
        { 1552, 0, NULL }, /* RiskSeniority */
        { 1553, 0, NULL }, /* RiskPutOrCall */
        { 1554, 0, NULL }, /* RiskFlexibleIndicator */
        { 1555, 0, NULL }, /* RiskCouponRate */
        { 1556, 0, NULL }, /* RiskSecurityDesc */
        { 1557, 0, NULL }, /* RiskInstrumentSettlType */
        { 1558, 0, NULL }, /* RiskInstrumentMultiplier */
        { 1559, 0, NULL }, /* NoRiskWarningLevels */
        { 1560, 0, NULL }, /* RiskWarningLevelPercent */
        { 1561, 0, NULL }, /* RiskWarningLevelName */
        { 1562, 0, NULL }, /* NoRelatedPartyIDs */
        { 1563, 0, NULL }, /* RelatedPartyID */
        { 1564, 0, NULL }, /* RelatedPartyIDSource */
        { 1565, 0, NULL }, /* RelatedPartyRole */
        { 1566, 0, NULL }, /* NoRelatedPartySubIDs */
        { 1567, 0, NULL }, /* RelatedPartySubID */
        { 1568, 0, NULL }, /* RelatedPartySubIDType */
        { 1569, 0, NULL }, /* NoRelatedPartyAltIDs */
        { 1570, 0, NULL }, /* RelatedPartyAltID */
        { 1571, 0, NULL }, /* RelatedPartyAltIDSource */
        { 1572, 0, NULL }, /* NoRelatedPartyAltSubIDs */
        { 1573, 0, NULL }, /* RelatedPartyAltSubID */
        { 1574, 0, NULL }, /* RelatedPartyAltSubIDType */
        { 1575, 0, NULL }, /* NoRelatedContextPartyIDs */
        { 1576, 0, NULL }, /* RelatedContextPartyID */
        { 1577, 0, NULL }, /* RelatedContextPartyIDSource */
        { 1578, 0, NULL }, /* RelatedContextPartyRole */
        { 1579, 0, NULL }, /* NoRelatedContextPartySubIDs */
        { 1580, 0, NULL }, /* RelatedContextPartySubID */
        { 1581, 0, NULL }, /* RelatedContextPartySubIDType */
        { 1582, 0, NULL }, /* NoRelationshipRiskLimits */
        { 1583, 0, NULL }, /* RelationshipRiskLimitType */
        { 1584, 0, NULL }, /* RelationshipRiskLimitAmount */
        { 1585, 0, NULL }, /* RelationshipRiskLimitCurrency */
        { 1586, 0, NULL }, /* RelationshipRiskLimitPlatform */
        { 1587, 0, NULL }, /* NoRelationshipRiskInstruments */
        { 1588, 0, NULL }, /* RelationshipRiskInstrumentOperator */
        { 1589, 0, NULL }, /* RelationshipRiskSymbol */
        { 1590, 0, NULL }, /* RelationshipRiskSymbolSfx */
        { 1591, 0, NULL }, /* RelationshipRiskSecurityID */
        { 1592, 0, NULL }, /* RelationshipRiskSecurityIDSource */
        { 1593, 0, NULL }, /* NoRelationshipRiskSecurityAltID */
        { 1594, 0, NULL }, /* RelationshipRiskSecurityAltID */
        { 1595, 0, NULL }, /* RelationshipRiskSecurityAltIDSource */
        { 1596, 0, NULL }, /* RelationshipRiskProduct */
        { 1597, 0, NULL }, /* RelationshipRiskProductComplex */
        { 1598, 0, NULL }, /* RelationshipRiskSecurityGroup */
        { 1599, 0, NULL }, /* RelationshipRiskCFICode */
        { 1600, 0, NULL }, /* RelationshipRiskSecurityType */
        { 1601, 0, NULL }, /* RelationshipRiskSecuritySubType */
        { 1602, 0, NULL }, /* RelationshipRiskMaturityMonthYear */
        { 1603, 0, NULL }, /* RelationshipRiskMaturityTime */
        { 1604, 0, NULL }, /* RelationshipRiskRestructuringType */
        { 1605, 0, NULL }, /* RelationshipRiskSeniority */
        { 1606, 0, NULL }, /* RelationshipRiskPutOrCall */
        { 1607, 0, NULL }, /* RelationshipRiskFlexibleIndicator */
        { 1608, 0, NULL }, /* RelationshipRiskCouponRate */
        { 1609, 0, NULL }, /* RelationshipRiskSecurityExchange */
        { 1610, 0, NULL }, /* RelationshipRiskSecurityDesc */
        { 1611, 0, NULL }, /* RelationshipRiskInstrumentSettlType */
        { 1612, 0, NULL }, /* RelationshipRiskInstrumentMultiplier */
        { 1613, 0, NULL }, /* NoRelationshipRiskWarningLevels */
        { 1614, 0, NULL }, /* RelationshipRiskWarningLevelPercent */
        { 1615, 0, NULL }, /* RelationshipRiskWarningLevelName */
        { 1616, 0, NULL }, /* RiskSecurityExchange */
        { 1617, 0, StreamAsgnType_val },
        { 1618, 0, NULL }, /* RelationshipRiskEncodedSecurityDescLen */
        { 1619, 0, NULL }, /* RelationshipRiskEncodedSecurityDesc */
        { 1620, 0, NULL }, /* RiskEncodedSecurityDescLen */
        { 1621, 0, NULL }, /* RiskEncodedSecurityDesc */
    };

static int fix_hf[1610];
static hf_register_info hf_FIX[] = {

        { &fix_hf[0],
            { "Account (1)", "fix.Account",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1],
            { "AdvId (2)", "fix.AdvId",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[2],
            { "AdvRefID (3)", "fix.AdvRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[3],
            { "AdvSide (4)", "fix.AdvSide",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[4],
            { "AdvTransType (5)", "fix.AdvTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[5],
            { "AvgPx (6)", "fix.AvgPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[6],
            { "BeginSeqNo (7)", "fix.BeginSeqNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[7],
            { "BeginString (8)", "fix.BeginString",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[8],
            { "BodyLength (9)", "fix.BodyLength",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[9],
            { "CheckSum (10)", "fix.CheckSum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[10],
            { "ClOrdID (11)", "fix.ClOrdID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[11],
            { "Commission (12)", "fix.Commission",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[12],
            { "CommType (13)", "fix.CommType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[13],
            { "CumQty (14)", "fix.CumQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[14],
            { "Currency (15)", "fix.Currency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[15],
            { "EndSeqNo (16)", "fix.EndSeqNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[16],
            { "ExecID (17)", "fix.ExecID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[17],
            { "ExecInst (18)", "fix.ExecInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[18],
            { "ExecRefID (19)", "fix.ExecRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[19],
            { "ExecTransType (20)", "fix.ExecTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[20],
            { "HandlInst (21)", "fix.HandlInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[21],
            { "SecurityIDSource (22)", "fix.SecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[22],
            { "IOIID (23)", "fix.IOIID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[23],
            { "IOIOthSvc (24)", "fix.IOIOthSvc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[24],
            { "IOIQltyInd (25)", "fix.IOIQltyInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[25],
            { "IOIRefID (26)", "fix.IOIRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[26],
            { "IOIQty (27)", "fix.IOIQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[27],
            { "IOITransType (28)", "fix.IOITransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[28],
            { "LastCapacity (29)", "fix.LastCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[29],
            { "LastMkt (30)", "fix.LastMkt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[30],
            { "LastPx (31)", "fix.LastPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[31],
            { "LastQty (32)", "fix.LastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[32],
            { "NoLinesOfText (33)", "fix.NoLinesOfText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[33],
            { "MsgSeqNum (34)", "fix.MsgSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[34],
            { "MsgType (35)", "fix.MsgType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[35],
            { "NewSeqNo (36)", "fix.NewSeqNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[36],
            { "OrderID (37)", "fix.OrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[37],
            { "OrderQty (38)", "fix.OrderQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[38],
            { "OrdStatus (39)", "fix.OrdStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[39],
            { "OrdType (40)", "fix.OrdType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[40],
            { "OrigClOrdID (41)", "fix.OrigClOrdID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[41],
            { "OrigTime (42)", "fix.OrigTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[42],
            { "PossDupFlag (43)", "fix.PossDupFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[43],
            { "Price (44)", "fix.Price",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[44],
            { "RefSeqNum (45)", "fix.RefSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[45],
            { "RelatdSym (46)", "fix.RelatdSym",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[46],
            { "Rule80A (47)", "fix.Rule80A",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[47],
            { "SecurityID (48)", "fix.SecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[48],
            { "SenderCompID (49)", "fix.SenderCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[49],
            { "SenderSubID (50)", "fix.SenderSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[50],
            { "SendingDate (51)", "fix.SendingDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[51],
            { "SendingTime (52)", "fix.SendingTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[52],
            { "Quantity (53)", "fix.Quantity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[53],
            { "Side (54)", "fix.Side",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[54],
            { "Symbol (55)", "fix.Symbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[55],
            { "TargetCompID (56)", "fix.TargetCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[56],
            { "TargetSubID (57)", "fix.TargetSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[57],
            { "Text (58)", "fix.Text",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[58],
            { "TimeInForce (59)", "fix.TimeInForce",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[59],
            { "TransactTime (60)", "fix.TransactTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[60],
            { "Urgency (61)", "fix.Urgency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[61],
            { "ValidUntilTime (62)", "fix.ValidUntilTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[62],
            { "SettlType (63)", "fix.SettlType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[63],
            { "SettlDate (64)", "fix.SettlDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[64],
            { "SymbolSfx (65)", "fix.SymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[65],
            { "ListID (66)", "fix.ListID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[66],
            { "ListSeqNo (67)", "fix.ListSeqNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[67],
            { "TotNoOrders (68)", "fix.TotNoOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[68],
            { "ListExecInst (69)", "fix.ListExecInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[69],
            { "AllocID (70)", "fix.AllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[70],
            { "AllocTransType (71)", "fix.AllocTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[71],
            { "RefAllocID (72)", "fix.RefAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[72],
            { "NoOrders (73)", "fix.NoOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[73],
            { "AvgPxPrecision (74)", "fix.AvgPxPrecision",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[74],
            { "TradeDate (75)", "fix.TradeDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[75],
            { "ExecBroker (76)", "fix.ExecBroker",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[76],
            { "PositionEffect (77)", "fix.PositionEffect",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[77],
            { "NoAllocs (78)", "fix.NoAllocs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[78],
            { "AllocAccount (79)", "fix.AllocAccount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[79],
            { "AllocQty (80)", "fix.AllocQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[80],
            { "ProcessCode (81)", "fix.ProcessCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[81],
            { "NoRpts (82)", "fix.NoRpts",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[82],
            { "RptSeq (83)", "fix.RptSeq",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[83],
            { "CxlQty (84)", "fix.CxlQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[84],
            { "NoDlvyInst (85)", "fix.NoDlvyInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[85],
            { "DlvyInst (86)", "fix.DlvyInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[86],
            { "AllocStatus (87)", "fix.AllocStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[87],
            { "AllocRejCode (88)", "fix.AllocRejCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[88],
            { "Signature (89)", "fix.Signature",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[89],
            { "SecureDataLen (90)", "fix.SecureDataLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[90],
            { "SecureData (91)", "fix.SecureData",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[91],
            { "BrokerOfCredit (92)", "fix.BrokerOfCredit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[92],
            { "SignatureLength (93)", "fix.SignatureLength",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[93],
            { "EmailType (94)", "fix.EmailType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[94],
            { "RawDataLength (95)", "fix.RawDataLength",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[95],
            { "RawData (96)", "fix.RawData",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[96],
            { "PossResend (97)", "fix.PossResend",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[97],
            { "EncryptMethod (98)", "fix.EncryptMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[98],
            { "StopPx (99)", "fix.StopPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[99],
            { "ExDestination (100)", "fix.ExDestination",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[100],
            { "CxlRejReason (102)", "fix.CxlRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[101],
            { "OrdRejReason (103)", "fix.OrdRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[102],
            { "IOIQualifier (104)", "fix.IOIQualifier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[103],
            { "WaveNo (105)", "fix.WaveNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[104],
            { "Issuer (106)", "fix.Issuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[105],
            { "SecurityDesc (107)", "fix.SecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[106],
            { "HeartBtInt (108)", "fix.HeartBtInt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[107],
            { "ClientID (109)", "fix.ClientID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[108],
            { "MinQty (110)", "fix.MinQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[109],
            { "MaxFloor (111)", "fix.MaxFloor",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[110],
            { "TestReqID (112)", "fix.TestReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[111],
            { "ReportToExch (113)", "fix.ReportToExch",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[112],
            { "LocateReqd (114)", "fix.LocateReqd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[113],
            { "OnBehalfOfCompID (115)", "fix.OnBehalfOfCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[114],
            { "OnBehalfOfSubID (116)", "fix.OnBehalfOfSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[115],
            { "QuoteID (117)", "fix.QuoteID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[116],
            { "NetMoney (118)", "fix.NetMoney",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[117],
            { "SettlCurrAmt (119)", "fix.SettlCurrAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[118],
            { "SettlCurrency (120)", "fix.SettlCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[119],
            { "ForexReq (121)", "fix.ForexReq",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[120],
            { "OrigSendingTime (122)", "fix.OrigSendingTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[121],
            { "GapFillFlag (123)", "fix.GapFillFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[122],
            { "NoExecs (124)", "fix.NoExecs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[123],
            { "CxlType (125)", "fix.CxlType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[124],
            { "ExpireTime (126)", "fix.ExpireTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[125],
            { "DKReason (127)", "fix.DKReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[126],
            { "DeliverToCompID (128)", "fix.DeliverToCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[127],
            { "DeliverToSubID (129)", "fix.DeliverToSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[128],
            { "IOINaturalFlag (130)", "fix.IOINaturalFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[129],
            { "QuoteReqID (131)", "fix.QuoteReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[130],
            { "BidPx (132)", "fix.BidPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[131],
            { "OfferPx (133)", "fix.OfferPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[132],
            { "BidSize (134)", "fix.BidSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[133],
            { "OfferSize (135)", "fix.OfferSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[134],
            { "NoMiscFees (136)", "fix.NoMiscFees",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[135],
            { "MiscFeeAmt (137)", "fix.MiscFeeAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[136],
            { "MiscFeeCurr (138)", "fix.MiscFeeCurr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[137],
            { "MiscFeeType (139)", "fix.MiscFeeType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[138],
            { "PrevClosePx (140)", "fix.PrevClosePx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[139],
            { "ResetSeqNumFlag (141)", "fix.ResetSeqNumFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[140],
            { "SenderLocationID (142)", "fix.SenderLocationID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[141],
            { "TargetLocationID (143)", "fix.TargetLocationID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[142],
            { "OnBehalfOfLocationID (144)", "fix.OnBehalfOfLocationID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[143],
            { "DeliverToLocationID (145)", "fix.DeliverToLocationID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[144],
            { "NoRelatedSym (146)", "fix.NoRelatedSym",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[145],
            { "Subject (147)", "fix.Subject",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[146],
            { "Headline (148)", "fix.Headline",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[147],
            { "URLLink (149)", "fix.URLLink",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[148],
            { "ExecType (150)", "fix.ExecType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[149],
            { "LeavesQty (151)", "fix.LeavesQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[150],
            { "CashOrderQty (152)", "fix.CashOrderQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[151],
            { "AllocAvgPx (153)", "fix.AllocAvgPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[152],
            { "AllocNetMoney (154)", "fix.AllocNetMoney",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[153],
            { "SettlCurrFxRate (155)", "fix.SettlCurrFxRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[154],
            { "SettlCurrFxRateCalc (156)", "fix.SettlCurrFxRateCalc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[155],
            { "NumDaysInterest (157)", "fix.NumDaysInterest",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[156],
            { "AccruedInterestRate (158)", "fix.AccruedInterestRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[157],
            { "AccruedInterestAmt (159)", "fix.AccruedInterestAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[158],
            { "SettlInstMode (160)", "fix.SettlInstMode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[159],
            { "AllocText (161)", "fix.AllocText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[160],
            { "SettlInstID (162)", "fix.SettlInstID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[161],
            { "SettlInstTransType (163)", "fix.SettlInstTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[162],
            { "EmailThreadID (164)", "fix.EmailThreadID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[163],
            { "SettlInstSource (165)", "fix.SettlInstSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[164],
            { "SettlLocation (166)", "fix.SettlLocation",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[165],
            { "SecurityType (167)", "fix.SecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[166],
            { "EffectiveTime (168)", "fix.EffectiveTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[167],
            { "StandInstDbType (169)", "fix.StandInstDbType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[168],
            { "StandInstDbName (170)", "fix.StandInstDbName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[169],
            { "StandInstDbID (171)", "fix.StandInstDbID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[170],
            { "SettlDeliveryType (172)", "fix.SettlDeliveryType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[171],
            { "SettlDepositoryCode (173)", "fix.SettlDepositoryCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[172],
            { "SettlBrkrCode (174)", "fix.SettlBrkrCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[173],
            { "SettlInstCode (175)", "fix.SettlInstCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[174],
            { "SecuritySettlAgentName (176)", "fix.SecuritySettlAgentName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[175],
            { "SecuritySettlAgentCode (177)", "fix.SecuritySettlAgentCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[176],
            { "SecuritySettlAgentAcctNum (178)", "fix.SecuritySettlAgentAcctNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[177],
            { "SecuritySettlAgentAcctName (179)", "fix.SecuritySettlAgentAcctName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[178],
            { "SecuritySettlAgentContactName (180)", "fix.SecuritySettlAgentContactName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[179],
            { "SecuritySettlAgentContactPhone (181)", "fix.SecuritySettlAgentContactPhone",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[180],
            { "CashSettlAgentName (182)", "fix.CashSettlAgentName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[181],
            { "CashSettlAgentCode (183)", "fix.CashSettlAgentCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[182],
            { "CashSettlAgentAcctNum (184)", "fix.CashSettlAgentAcctNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[183],
            { "CashSettlAgentAcctName (185)", "fix.CashSettlAgentAcctName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[184],
            { "CashSettlAgentContactName (186)", "fix.CashSettlAgentContactName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[185],
            { "CashSettlAgentContactPhone (187)", "fix.CashSettlAgentContactPhone",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[186],
            { "BidSpotRate (188)", "fix.BidSpotRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[187],
            { "BidForwardPoints (189)", "fix.BidForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[188],
            { "OfferSpotRate (190)", "fix.OfferSpotRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[189],
            { "OfferForwardPoints (191)", "fix.OfferForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[190],
            { "OrderQty2 (192)", "fix.OrderQty2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[191],
            { "SettlDate2 (193)", "fix.SettlDate2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[192],
            { "LastSpotRate (194)", "fix.LastSpotRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[193],
            { "LastForwardPoints (195)", "fix.LastForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[194],
            { "AllocLinkID (196)", "fix.AllocLinkID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[195],
            { "AllocLinkType (197)", "fix.AllocLinkType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[196],
            { "SecondaryOrderID (198)", "fix.SecondaryOrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[197],
            { "NoIOIQualifiers (199)", "fix.NoIOIQualifiers",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[198],
            { "MaturityMonthYear (200)", "fix.MaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[199],
            { "PutOrCall (201)", "fix.PutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[200],
            { "StrikePrice (202)", "fix.StrikePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[201],
            { "CoveredOrUncovered (203)", "fix.CoveredOrUncovered",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[202],
            { "CustomerOrFirm (204)", "fix.CustomerOrFirm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[203],
            { "MaturityDay (205)", "fix.MaturityDay",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[204],
            { "OptAttribute (206)", "fix.OptAttribute",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[205],
            { "SecurityExchange (207)", "fix.SecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[206],
            { "NotifyBrokerOfCredit (208)", "fix.NotifyBrokerOfCredit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[207],
            { "AllocHandlInst (209)", "fix.AllocHandlInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[208],
            { "MaxShow (210)", "fix.MaxShow",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[209],
            { "PegOffsetValue (211)", "fix.PegOffsetValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[210],
            { "XmlDataLen (212)", "fix.XmlDataLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[211],
            { "XmlData (213)", "fix.XmlData",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[212],
            { "SettlInstRefID (214)", "fix.SettlInstRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[213],
            { "NoRoutingIDs (215)", "fix.NoRoutingIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[214],
            { "RoutingType (216)", "fix.RoutingType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[215],
            { "RoutingID (217)", "fix.RoutingID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[216],
            { "Spread (218)", "fix.Spread",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[217],
            { "Benchmark (219)", "fix.Benchmark",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[218],
            { "BenchmarkCurveCurrency (220)", "fix.BenchmarkCurveCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[219],
            { "BenchmarkCurveName (221)", "fix.BenchmarkCurveName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[220],
            { "BenchmarkCurvePoint (222)", "fix.BenchmarkCurvePoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[221],
            { "CouponRate (223)", "fix.CouponRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[222],
            { "CouponPaymentDate (224)", "fix.CouponPaymentDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[223],
            { "IssueDate (225)", "fix.IssueDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[224],
            { "RepurchaseTerm (226)", "fix.RepurchaseTerm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[225],
            { "RepurchaseRate (227)", "fix.RepurchaseRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[226],
            { "Factor (228)", "fix.Factor",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[227],
            { "TradeOriginationDate (229)", "fix.TradeOriginationDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[228],
            { "ExDate (230)", "fix.ExDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[229],
            { "ContractMultiplier (231)", "fix.ContractMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[230],
            { "NoStipulations (232)", "fix.NoStipulations",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[231],
            { "StipulationType (233)", "fix.StipulationType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[232],
            { "StipulationValue (234)", "fix.StipulationValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[233],
            { "YieldType (235)", "fix.YieldType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[234],
            { "Yield (236)", "fix.Yield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[235],
            { "TotalTakedown (237)", "fix.TotalTakedown",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[236],
            { "Concession (238)", "fix.Concession",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[237],
            { "RepoCollateralSecurityType (239)", "fix.RepoCollateralSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[238],
            { "RedemptionDate (240)", "fix.RedemptionDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[239],
            { "UnderlyingCouponPaymentDate (241)", "fix.UnderlyingCouponPaymentDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[240],
            { "UnderlyingIssueDate (242)", "fix.UnderlyingIssueDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[241],
            { "UnderlyingRepoCollateralSecurityType (243)", "fix.UnderlyingRepoCollateralSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[242],
            { "UnderlyingRepurchaseTerm (244)", "fix.UnderlyingRepurchaseTerm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[243],
            { "UnderlyingRepurchaseRate (245)", "fix.UnderlyingRepurchaseRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[244],
            { "UnderlyingFactor (246)", "fix.UnderlyingFactor",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[245],
            { "UnderlyingRedemptionDate (247)", "fix.UnderlyingRedemptionDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[246],
            { "LegCouponPaymentDate (248)", "fix.LegCouponPaymentDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[247],
            { "LegIssueDate (249)", "fix.LegIssueDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[248],
            { "LegRepoCollateralSecurityType (250)", "fix.LegRepoCollateralSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[249],
            { "LegRepurchaseTerm (251)", "fix.LegRepurchaseTerm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[250],
            { "LegRepurchaseRate (252)", "fix.LegRepurchaseRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[251],
            { "LegFactor (253)", "fix.LegFactor",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[252],
            { "LegRedemptionDate (254)", "fix.LegRedemptionDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[253],
            { "CreditRating (255)", "fix.CreditRating",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[254],
            { "UnderlyingCreditRating (256)", "fix.UnderlyingCreditRating",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[255],
            { "LegCreditRating (257)", "fix.LegCreditRating",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[256],
            { "TradedFlatSwitch (258)", "fix.TradedFlatSwitch",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[257],
            { "BasisFeatureDate (259)", "fix.BasisFeatureDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[258],
            { "BasisFeaturePrice (260)", "fix.BasisFeaturePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[259],
            { "MDReqID (262)", "fix.MDReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[260],
            { "SubscriptionRequestType (263)", "fix.SubscriptionRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[261],
            { "MarketDepth (264)", "fix.MarketDepth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[262],
            { "MDUpdateType (265)", "fix.MDUpdateType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[263],
            { "AggregatedBook (266)", "fix.AggregatedBook",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[264],
            { "NoMDEntryTypes (267)", "fix.NoMDEntryTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[265],
            { "NoMDEntries (268)", "fix.NoMDEntries",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[266],
            { "MDEntryType (269)", "fix.MDEntryType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[267],
            { "MDEntryPx (270)", "fix.MDEntryPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[268],
            { "MDEntrySize (271)", "fix.MDEntrySize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[269],
            { "MDEntryDate (272)", "fix.MDEntryDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[270],
            { "MDEntryTime (273)", "fix.MDEntryTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[271],
            { "TickDirection (274)", "fix.TickDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[272],
            { "MDMkt (275)", "fix.MDMkt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[273],
            { "QuoteCondition (276)", "fix.QuoteCondition",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[274],
            { "TradeCondition (277)", "fix.TradeCondition",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[275],
            { "MDEntryID (278)", "fix.MDEntryID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[276],
            { "MDUpdateAction (279)", "fix.MDUpdateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[277],
            { "MDEntryRefID (280)", "fix.MDEntryRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[278],
            { "MDReqRejReason (281)", "fix.MDReqRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[279],
            { "MDEntryOriginator (282)", "fix.MDEntryOriginator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[280],
            { "LocationID (283)", "fix.LocationID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[281],
            { "DeskID (284)", "fix.DeskID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[282],
            { "DeleteReason (285)", "fix.DeleteReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[283],
            { "OpenCloseSettlFlag (286)", "fix.OpenCloseSettlFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[284],
            { "SellerDays (287)", "fix.SellerDays",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[285],
            { "MDEntryBuyer (288)", "fix.MDEntryBuyer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[286],
            { "MDEntrySeller (289)", "fix.MDEntrySeller",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[287],
            { "MDEntryPositionNo (290)", "fix.MDEntryPositionNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[288],
            { "FinancialStatus (291)", "fix.FinancialStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[289],
            { "CorporateAction (292)", "fix.CorporateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[290],
            { "DefBidSize (293)", "fix.DefBidSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[291],
            { "DefOfferSize (294)", "fix.DefOfferSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[292],
            { "NoQuoteEntries (295)", "fix.NoQuoteEntries",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[293],
            { "NoQuoteSets (296)", "fix.NoQuoteSets",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[294],
            { "QuoteStatus (297)", "fix.QuoteStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[295],
            { "QuoteCancelType (298)", "fix.QuoteCancelType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[296],
            { "QuoteEntryID (299)", "fix.QuoteEntryID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[297],
            { "QuoteRejectReason (300)", "fix.QuoteRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[298],
            { "QuoteResponseLevel (301)", "fix.QuoteResponseLevel",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[299],
            { "QuoteSetID (302)", "fix.QuoteSetID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[300],
            { "QuoteRequestType (303)", "fix.QuoteRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[301],
            { "TotNoQuoteEntries (304)", "fix.TotNoQuoteEntries",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[302],
            { "UnderlyingSecurityIDSource (305)", "fix.UnderlyingSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[303],
            { "UnderlyingIssuer (306)", "fix.UnderlyingIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[304],
            { "UnderlyingSecurityDesc (307)", "fix.UnderlyingSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[305],
            { "UnderlyingSecurityExchange (308)", "fix.UnderlyingSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[306],
            { "UnderlyingSecurityID (309)", "fix.UnderlyingSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[307],
            { "UnderlyingSecurityType (310)", "fix.UnderlyingSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[308],
            { "UnderlyingSymbol (311)", "fix.UnderlyingSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[309],
            { "UnderlyingSymbolSfx (312)", "fix.UnderlyingSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[310],
            { "UnderlyingMaturityMonthYear (313)", "fix.UnderlyingMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[311],
            { "UnderlyingMaturityDay (314)", "fix.UnderlyingMaturityDay",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[312],
            { "UnderlyingPutOrCall (315)", "fix.UnderlyingPutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[313],
            { "UnderlyingStrikePrice (316)", "fix.UnderlyingStrikePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[314],
            { "UnderlyingOptAttribute (317)", "fix.UnderlyingOptAttribute",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[315],
            { "UnderlyingCurrency (318)", "fix.UnderlyingCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[316],
            { "RatioQty (319)", "fix.RatioQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[317],
            { "SecurityReqID (320)", "fix.SecurityReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[318],
            { "SecurityRequestType (321)", "fix.SecurityRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[319],
            { "SecurityResponseID (322)", "fix.SecurityResponseID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[320],
            { "SecurityResponseType (323)", "fix.SecurityResponseType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[321],
            { "SecurityStatusReqID (324)", "fix.SecurityStatusReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[322],
            { "UnsolicitedIndicator (325)", "fix.UnsolicitedIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[323],
            { "SecurityTradingStatus (326)", "fix.SecurityTradingStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[324],
            { "HaltReasonInt (327)", "fix.HaltReasonInt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[325],
            { "InViewOfCommon (328)", "fix.InViewOfCommon",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[326],
            { "DueToRelated (329)", "fix.DueToRelated",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[327],
            { "BuyVolume (330)", "fix.BuyVolume",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[328],
            { "SellVolume (331)", "fix.SellVolume",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[329],
            { "HighPx (332)", "fix.HighPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[330],
            { "LowPx (333)", "fix.LowPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[331],
            { "Adjustment (334)", "fix.Adjustment",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[332],
            { "TradSesReqID (335)", "fix.TradSesReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[333],
            { "TradingSessionID (336)", "fix.TradingSessionID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[334],
            { "ContraTrader (337)", "fix.ContraTrader",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[335],
            { "TradSesMethod (338)", "fix.TradSesMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[336],
            { "TradSesMode (339)", "fix.TradSesMode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[337],
            { "TradSesStatus (340)", "fix.TradSesStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[338],
            { "TradSesStartTime (341)", "fix.TradSesStartTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[339],
            { "TradSesOpenTime (342)", "fix.TradSesOpenTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[340],
            { "TradSesPreCloseTime (343)", "fix.TradSesPreCloseTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[341],
            { "TradSesCloseTime (344)", "fix.TradSesCloseTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[342],
            { "TradSesEndTime (345)", "fix.TradSesEndTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[343],
            { "NumberOfOrders (346)", "fix.NumberOfOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[344],
            { "MessageEncoding (347)", "fix.MessageEncoding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[345],
            { "EncodedIssuerLen (348)", "fix.EncodedIssuerLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[346],
            { "EncodedIssuer (349)", "fix.EncodedIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[347],
            { "EncodedSecurityDescLen (350)", "fix.EncodedSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[348],
            { "EncodedSecurityDesc (351)", "fix.EncodedSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[349],
            { "EncodedListExecInstLen (352)", "fix.EncodedListExecInstLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[350],
            { "EncodedListExecInst (353)", "fix.EncodedListExecInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[351],
            { "EncodedTextLen (354)", "fix.EncodedTextLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[352],
            { "EncodedText (355)", "fix.EncodedText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[353],
            { "EncodedSubjectLen (356)", "fix.EncodedSubjectLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[354],
            { "EncodedSubject (357)", "fix.EncodedSubject",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[355],
            { "EncodedHeadlineLen (358)", "fix.EncodedHeadlineLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[356],
            { "EncodedHeadline (359)", "fix.EncodedHeadline",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[357],
            { "EncodedAllocTextLen (360)", "fix.EncodedAllocTextLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[358],
            { "EncodedAllocText (361)", "fix.EncodedAllocText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[359],
            { "EncodedUnderlyingIssuerLen (362)", "fix.EncodedUnderlyingIssuerLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[360],
            { "EncodedUnderlyingIssuer (363)", "fix.EncodedUnderlyingIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[361],
            { "EncodedUnderlyingSecurityDescLen (364)", "fix.EncodedUnderlyingSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[362],
            { "EncodedUnderlyingSecurityDesc (365)", "fix.EncodedUnderlyingSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[363],
            { "AllocPrice (366)", "fix.AllocPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[364],
            { "QuoteSetValidUntilTime (367)", "fix.QuoteSetValidUntilTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[365],
            { "QuoteEntryRejectReason (368)", "fix.QuoteEntryRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[366],
            { "LastMsgSeqNumProcessed (369)", "fix.LastMsgSeqNumProcessed",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[367],
            { "OnBehalfOfSendingTime (370)", "fix.OnBehalfOfSendingTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[368],
            { "RefTagID (371)", "fix.RefTagID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[369],
            { "RefMsgType (372)", "fix.RefMsgType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[370],
            { "SessionRejectReason (373)", "fix.SessionRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[371],
            { "BidRequestTransType (374)", "fix.BidRequestTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[372],
            { "ContraBroker (375)", "fix.ContraBroker",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[373],
            { "ComplianceID (376)", "fix.ComplianceID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[374],
            { "SolicitedFlag (377)", "fix.SolicitedFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[375],
            { "ExecRestatementReason (378)", "fix.ExecRestatementReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[376],
            { "BusinessRejectRefID (379)", "fix.BusinessRejectRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[377],
            { "BusinessRejectReason (380)", "fix.BusinessRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[378],
            { "GrossTradeAmt (381)", "fix.GrossTradeAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[379],
            { "NoContraBrokers (382)", "fix.NoContraBrokers",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[380],
            { "MaxMessageSize (383)", "fix.MaxMessageSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[381],
            { "NoMsgTypes (384)", "fix.NoMsgTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[382],
            { "MsgDirection (385)", "fix.MsgDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[383],
            { "NoTradingSessions (386)", "fix.NoTradingSessions",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[384],
            { "TotalVolumeTraded (387)", "fix.TotalVolumeTraded",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[385],
            { "DiscretionInst (388)", "fix.DiscretionInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[386],
            { "DiscretionOffsetValue (389)", "fix.DiscretionOffsetValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[387],
            { "BidID (390)", "fix.BidID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[388],
            { "ClientBidID (391)", "fix.ClientBidID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[389],
            { "ListName (392)", "fix.ListName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[390],
            { "TotNoRelatedSym (393)", "fix.TotNoRelatedSym",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[391],
            { "BidType (394)", "fix.BidType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[392],
            { "NumTickets (395)", "fix.NumTickets",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[393],
            { "SideValue1 (396)", "fix.SideValue1",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[394],
            { "SideValue2 (397)", "fix.SideValue2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[395],
            { "NoBidDescriptors (398)", "fix.NoBidDescriptors",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[396],
            { "BidDescriptorType (399)", "fix.BidDescriptorType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[397],
            { "BidDescriptor (400)", "fix.BidDescriptor",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[398],
            { "SideValueInd (401)", "fix.SideValueInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[399],
            { "LiquidityPctLow (402)", "fix.LiquidityPctLow",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[400],
            { "LiquidityPctHigh (403)", "fix.LiquidityPctHigh",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[401],
            { "LiquidityValue (404)", "fix.LiquidityValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[402],
            { "EFPTrackingError (405)", "fix.EFPTrackingError",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[403],
            { "FairValue (406)", "fix.FairValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[404],
            { "OutsideIndexPct (407)", "fix.OutsideIndexPct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[405],
            { "ValueOfFutures (408)", "fix.ValueOfFutures",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[406],
            { "LiquidityIndType (409)", "fix.LiquidityIndType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[407],
            { "WtAverageLiquidity (410)", "fix.WtAverageLiquidity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[408],
            { "ExchangeForPhysical (411)", "fix.ExchangeForPhysical",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[409],
            { "OutMainCntryUIndex (412)", "fix.OutMainCntryUIndex",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[410],
            { "CrossPercent (413)", "fix.CrossPercent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[411],
            { "ProgRptReqs (414)", "fix.ProgRptReqs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[412],
            { "ProgPeriodInterval (415)", "fix.ProgPeriodInterval",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[413],
            { "IncTaxInd (416)", "fix.IncTaxInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[414],
            { "NumBidders (417)", "fix.NumBidders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[415],
            { "BidTradeType (418)", "fix.BidTradeType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[416],
            { "BasisPxType (419)", "fix.BasisPxType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[417],
            { "NoBidComponents (420)", "fix.NoBidComponents",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[418],
            { "Country (421)", "fix.Country",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[419],
            { "TotNoStrikes (422)", "fix.TotNoStrikes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[420],
            { "PriceType (423)", "fix.PriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[421],
            { "DayOrderQty (424)", "fix.DayOrderQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[422],
            { "DayCumQty (425)", "fix.DayCumQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[423],
            { "DayAvgPx (426)", "fix.DayAvgPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[424],
            { "GTBookingInst (427)", "fix.GTBookingInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[425],
            { "NoStrikes (428)", "fix.NoStrikes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[426],
            { "ListStatusType (429)", "fix.ListStatusType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[427],
            { "NetGrossInd (430)", "fix.NetGrossInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[428],
            { "ListOrderStatus (431)", "fix.ListOrderStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[429],
            { "ExpireDate (432)", "fix.ExpireDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[430],
            { "ListExecInstType (433)", "fix.ListExecInstType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[431],
            { "CxlRejResponseTo (434)", "fix.CxlRejResponseTo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[432],
            { "UnderlyingCouponRate (435)", "fix.UnderlyingCouponRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[433],
            { "UnderlyingContractMultiplier (436)", "fix.UnderlyingContractMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[434],
            { "ContraTradeQty (437)", "fix.ContraTradeQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[435],
            { "ContraTradeTime (438)", "fix.ContraTradeTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[436],
            { "ClearingFirm (439)", "fix.ClearingFirm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[437],
            { "ClearingAccount (440)", "fix.ClearingAccount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[438],
            { "LiquidityNumSecurities (441)", "fix.LiquidityNumSecurities",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[439],
            { "MultiLegReportingType (442)", "fix.MultiLegReportingType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[440],
            { "StrikeTime (443)", "fix.StrikeTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[441],
            { "ListStatusText (444)", "fix.ListStatusText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[442],
            { "EncodedListStatusTextLen (445)", "fix.EncodedListStatusTextLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[443],
            { "EncodedListStatusText (446)", "fix.EncodedListStatusText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[444],
            { "PartyIDSource (447)", "fix.PartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[445],
            { "PartyID (448)", "fix.PartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[446],
            { "TotalVolumeTradedDate (449)", "fix.TotalVolumeTradedDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[447],
            { "TotalVolumeTradedTime (450)", "fix.TotalVolumeTradedTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[448],
            { "NetChgPrevDay (451)", "fix.NetChgPrevDay",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[449],
            { "PartyRole (452)", "fix.PartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[450],
            { "NoPartyIDs (453)", "fix.NoPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[451],
            { "NoSecurityAltID (454)", "fix.NoSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[452],
            { "SecurityAltID (455)", "fix.SecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[453],
            { "SecurityAltIDSource (456)", "fix.SecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[454],
            { "NoUnderlyingSecurityAltID (457)", "fix.NoUnderlyingSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[455],
            { "UnderlyingSecurityAltID (458)", "fix.UnderlyingSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[456],
            { "UnderlyingSecurityAltIDSource (459)", "fix.UnderlyingSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[457],
            { "Product (460)", "fix.Product",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[458],
            { "CFICode (461)", "fix.CFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[459],
            { "UnderlyingProduct (462)", "fix.UnderlyingProduct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[460],
            { "UnderlyingCFICode (463)", "fix.UnderlyingCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[461],
            { "TestMessageIndicator (464)", "fix.TestMessageIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[462],
            { "QuantityType (465)", "fix.QuantityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[463],
            { "BookingRefID (466)", "fix.BookingRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[464],
            { "IndividualAllocID (467)", "fix.IndividualAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[465],
            { "RoundingDirection (468)", "fix.RoundingDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[466],
            { "RoundingModulus (469)", "fix.RoundingModulus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[467],
            { "CountryOfIssue (470)", "fix.CountryOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[468],
            { "StateOrProvinceOfIssue (471)", "fix.StateOrProvinceOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[469],
            { "LocaleOfIssue (472)", "fix.LocaleOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[470],
            { "NoRegistDtls (473)", "fix.NoRegistDtls",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[471],
            { "MailingDtls (474)", "fix.MailingDtls",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[472],
            { "InvestorCountryOfResidence (475)", "fix.InvestorCountryOfResidence",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[473],
            { "PaymentRef (476)", "fix.PaymentRef",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[474],
            { "DistribPaymentMethod (477)", "fix.DistribPaymentMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[475],
            { "CashDistribCurr (478)", "fix.CashDistribCurr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[476],
            { "CommCurrency (479)", "fix.CommCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[477],
            { "CancellationRights (480)", "fix.CancellationRights",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[478],
            { "MoneyLaunderingStatus (481)", "fix.MoneyLaunderingStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[479],
            { "MailingInst (482)", "fix.MailingInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[480],
            { "TransBkdTime (483)", "fix.TransBkdTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[481],
            { "ExecPriceType (484)", "fix.ExecPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[482],
            { "ExecPriceAdjustment (485)", "fix.ExecPriceAdjustment",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[483],
            { "DateOfBirth (486)", "fix.DateOfBirth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[484],
            { "TradeReportTransType (487)", "fix.TradeReportTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[485],
            { "CardHolderName (488)", "fix.CardHolderName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[486],
            { "CardNumber (489)", "fix.CardNumber",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[487],
            { "CardExpDate (490)", "fix.CardExpDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[488],
            { "CardIssNum (491)", "fix.CardIssNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[489],
            { "PaymentMethod (492)", "fix.PaymentMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[490],
            { "RegistAcctType (493)", "fix.RegistAcctType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[491],
            { "Designation (494)", "fix.Designation",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[492],
            { "TaxAdvantageType (495)", "fix.TaxAdvantageType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[493],
            { "RegistRejReasonText (496)", "fix.RegistRejReasonText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[494],
            { "FundRenewWaiv (497)", "fix.FundRenewWaiv",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[495],
            { "CashDistribAgentName (498)", "fix.CashDistribAgentName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[496],
            { "CashDistribAgentCode (499)", "fix.CashDistribAgentCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[497],
            { "CashDistribAgentAcctNumber (500)", "fix.CashDistribAgentAcctNumber",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[498],
            { "CashDistribPayRef (501)", "fix.CashDistribPayRef",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[499],
            { "CashDistribAgentAcctName (502)", "fix.CashDistribAgentAcctName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[500],
            { "CardStartDate (503)", "fix.CardStartDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[501],
            { "PaymentDate (504)", "fix.PaymentDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[502],
            { "PaymentRemitterID (505)", "fix.PaymentRemitterID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[503],
            { "RegistStatus (506)", "fix.RegistStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[504],
            { "RegistRejReasonCode (507)", "fix.RegistRejReasonCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[505],
            { "RegistRefID (508)", "fix.RegistRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[506],
            { "RegistDtls (509)", "fix.RegistDtls",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[507],
            { "NoDistribInsts (510)", "fix.NoDistribInsts",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[508],
            { "RegistEmail (511)", "fix.RegistEmail",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[509],
            { "DistribPercentage (512)", "fix.DistribPercentage",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[510],
            { "RegistID (513)", "fix.RegistID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[511],
            { "RegistTransType (514)", "fix.RegistTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[512],
            { "ExecValuationPoint (515)", "fix.ExecValuationPoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[513],
            { "OrderPercent (516)", "fix.OrderPercent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[514],
            { "OwnershipType (517)", "fix.OwnershipType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[515],
            { "NoContAmts (518)", "fix.NoContAmts",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[516],
            { "ContAmtType (519)", "fix.ContAmtType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[517],
            { "ContAmtValue (520)", "fix.ContAmtValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[518],
            { "ContAmtCurr (521)", "fix.ContAmtCurr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[519],
            { "OwnerType (522)", "fix.OwnerType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[520],
            { "PartySubID (523)", "fix.PartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[521],
            { "NestedPartyID (524)", "fix.NestedPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[522],
            { "NestedPartyIDSource (525)", "fix.NestedPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[523],
            { "SecondaryClOrdID (526)", "fix.SecondaryClOrdID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[524],
            { "SecondaryExecID (527)", "fix.SecondaryExecID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[525],
            { "OrderCapacity (528)", "fix.OrderCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[526],
            { "OrderRestrictions (529)", "fix.OrderRestrictions",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[527],
            { "MassCancelRequestType (530)", "fix.MassCancelRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[528],
            { "MassCancelResponse (531)", "fix.MassCancelResponse",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[529],
            { "MassCancelRejectReason (532)", "fix.MassCancelRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[530],
            { "TotalAffectedOrders (533)", "fix.TotalAffectedOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[531],
            { "NoAffectedOrders (534)", "fix.NoAffectedOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[532],
            { "AffectedOrderID (535)", "fix.AffectedOrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[533],
            { "AffectedSecondaryOrderID (536)", "fix.AffectedSecondaryOrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[534],
            { "QuoteType (537)", "fix.QuoteType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[535],
            { "NestedPartyRole (538)", "fix.NestedPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[536],
            { "NoNestedPartyIDs (539)", "fix.NoNestedPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[537],
            { "TotalAccruedInterestAmt (540)", "fix.TotalAccruedInterestAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[538],
            { "MaturityDate (541)", "fix.MaturityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[539],
            { "UnderlyingMaturityDate (542)", "fix.UnderlyingMaturityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[540],
            { "InstrRegistry (543)", "fix.InstrRegistry",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[541],
            { "CashMargin (544)", "fix.CashMargin",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[542],
            { "NestedPartySubID (545)", "fix.NestedPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[543],
            { "Scope (546)", "fix.Scope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[544],
            { "MDImplicitDelete (547)", "fix.MDImplicitDelete",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[545],
            { "CrossID (548)", "fix.CrossID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[546],
            { "CrossType (549)", "fix.CrossType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[547],
            { "CrossPrioritization (550)", "fix.CrossPrioritization",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[548],
            { "OrigCrossID (551)", "fix.OrigCrossID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[549],
            { "NoSides (552)", "fix.NoSides",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[550],
            { "Username (553)", "fix.Username",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[551],
            { "Password (554)", "fix.Password",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[552],
            { "NoLegs (555)", "fix.NoLegs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[553],
            { "LegCurrency (556)", "fix.LegCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[554],
            { "TotNoSecurityTypes (557)", "fix.TotNoSecurityTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[555],
            { "NoSecurityTypes (558)", "fix.NoSecurityTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[556],
            { "SecurityListRequestType (559)", "fix.SecurityListRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[557],
            { "SecurityRequestResult (560)", "fix.SecurityRequestResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[558],
            { "RoundLot (561)", "fix.RoundLot",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[559],
            { "MinTradeVol (562)", "fix.MinTradeVol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[560],
            { "MultiLegRptTypeReq (563)", "fix.MultiLegRptTypeReq",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[561],
            { "LegPositionEffect (564)", "fix.LegPositionEffect",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[562],
            { "LegCoveredOrUncovered (565)", "fix.LegCoveredOrUncovered",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[563],
            { "LegPrice (566)", "fix.LegPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[564],
            { "TradSesStatusRejReason (567)", "fix.TradSesStatusRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[565],
            { "TradeRequestID (568)", "fix.TradeRequestID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[566],
            { "TradeRequestType (569)", "fix.TradeRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[567],
            { "PreviouslyReported (570)", "fix.PreviouslyReported",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[568],
            { "TradeReportID (571)", "fix.TradeReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[569],
            { "TradeReportRefID (572)", "fix.TradeReportRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[570],
            { "MatchStatus (573)", "fix.MatchStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[571],
            { "MatchType (574)", "fix.MatchType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[572],
            { "OddLot (575)", "fix.OddLot",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[573],
            { "NoClearingInstructions (576)", "fix.NoClearingInstructions",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[574],
            { "ClearingInstruction (577)", "fix.ClearingInstruction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[575],
            { "TradeInputSource (578)", "fix.TradeInputSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[576],
            { "TradeInputDevice (579)", "fix.TradeInputDevice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[577],
            { "NoDates (580)", "fix.NoDates",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[578],
            { "AccountType (581)", "fix.AccountType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[579],
            { "CustOrderCapacity (582)", "fix.CustOrderCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[580],
            { "ClOrdLinkID (583)", "fix.ClOrdLinkID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[581],
            { "MassStatusReqID (584)", "fix.MassStatusReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[582],
            { "MassStatusReqType (585)", "fix.MassStatusReqType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[583],
            { "OrigOrdModTime (586)", "fix.OrigOrdModTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[584],
            { "LegSettlType (587)", "fix.LegSettlType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[585],
            { "LegSettlDate (588)", "fix.LegSettlDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[586],
            { "DayBookingInst (589)", "fix.DayBookingInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[587],
            { "BookingUnit (590)", "fix.BookingUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[588],
            { "PreallocMethod (591)", "fix.PreallocMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[589],
            { "UnderlyingCountryOfIssue (592)", "fix.UnderlyingCountryOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[590],
            { "UnderlyingStateOrProvinceOfIssue (593)", "fix.UnderlyingStateOrProvinceOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[591],
            { "UnderlyingLocaleOfIssue (594)", "fix.UnderlyingLocaleOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[592],
            { "UnderlyingInstrRegistry (595)", "fix.UnderlyingInstrRegistry",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[593],
            { "LegCountryOfIssue (596)", "fix.LegCountryOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[594],
            { "LegStateOrProvinceOfIssue (597)", "fix.LegStateOrProvinceOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[595],
            { "LegLocaleOfIssue (598)", "fix.LegLocaleOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[596],
            { "LegInstrRegistry (599)", "fix.LegInstrRegistry",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[597],
            { "LegSymbol (600)", "fix.LegSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[598],
            { "LegSymbolSfx (601)", "fix.LegSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[599],
            { "LegSecurityID (602)", "fix.LegSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[600],
            { "LegSecurityIDSource (603)", "fix.LegSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[601],
            { "NoLegSecurityAltID (604)", "fix.NoLegSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[602],
            { "LegSecurityAltID (605)", "fix.LegSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[603],
            { "LegSecurityAltIDSource (606)", "fix.LegSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[604],
            { "LegProduct (607)", "fix.LegProduct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[605],
            { "LegCFICode (608)", "fix.LegCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[606],
            { "LegSecurityType (609)", "fix.LegSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[607],
            { "LegMaturityMonthYear (610)", "fix.LegMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[608],
            { "LegMaturityDate (611)", "fix.LegMaturityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[609],
            { "LegStrikePrice (612)", "fix.LegStrikePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[610],
            { "LegOptAttribute (613)", "fix.LegOptAttribute",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[611],
            { "LegContractMultiplier (614)", "fix.LegContractMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[612],
            { "LegCouponRate (615)", "fix.LegCouponRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[613],
            { "LegSecurityExchange (616)", "fix.LegSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[614],
            { "LegIssuer (617)", "fix.LegIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[615],
            { "EncodedLegIssuerLen (618)", "fix.EncodedLegIssuerLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[616],
            { "EncodedLegIssuer (619)", "fix.EncodedLegIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[617],
            { "LegSecurityDesc (620)", "fix.LegSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[618],
            { "EncodedLegSecurityDescLen (621)", "fix.EncodedLegSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[619],
            { "EncodedLegSecurityDesc (622)", "fix.EncodedLegSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[620],
            { "LegRatioQty (623)", "fix.LegRatioQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[621],
            { "LegSide (624)", "fix.LegSide",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[622],
            { "TradingSessionSubID (625)", "fix.TradingSessionSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[623],
            { "AllocType (626)", "fix.AllocType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[624],
            { "NoHops (627)", "fix.NoHops",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[625],
            { "HopCompID (628)", "fix.HopCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[626],
            { "HopSendingTime (629)", "fix.HopSendingTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[627],
            { "HopRefID (630)", "fix.HopRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[628],
            { "MidPx (631)", "fix.MidPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[629],
            { "BidYield (632)", "fix.BidYield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[630],
            { "MidYield (633)", "fix.MidYield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[631],
            { "OfferYield (634)", "fix.OfferYield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[632],
            { "ClearingFeeIndicator (635)", "fix.ClearingFeeIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[633],
            { "WorkingIndicator (636)", "fix.WorkingIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[634],
            { "LegLastPx (637)", "fix.LegLastPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[635],
            { "PriorityIndicator (638)", "fix.PriorityIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[636],
            { "PriceImprovement (639)", "fix.PriceImprovement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[637],
            { "Price2 (640)", "fix.Price2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[638],
            { "LastForwardPoints2 (641)", "fix.LastForwardPoints2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[639],
            { "BidForwardPoints2 (642)", "fix.BidForwardPoints2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[640],
            { "OfferForwardPoints2 (643)", "fix.OfferForwardPoints2",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[641],
            { "RFQReqID (644)", "fix.RFQReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[642],
            { "MktBidPx (645)", "fix.MktBidPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[643],
            { "MktOfferPx (646)", "fix.MktOfferPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[644],
            { "MinBidSize (647)", "fix.MinBidSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[645],
            { "MinOfferSize (648)", "fix.MinOfferSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[646],
            { "QuoteStatusReqID (649)", "fix.QuoteStatusReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[647],
            { "LegalConfirm (650)", "fix.LegalConfirm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[648],
            { "UnderlyingLastPx (651)", "fix.UnderlyingLastPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[649],
            { "UnderlyingLastQty (652)", "fix.UnderlyingLastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[650],
            { "SecDefStatus (653)", "fix.SecDefStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[651],
            { "LegRefID (654)", "fix.LegRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[652],
            { "ContraLegRefID (655)", "fix.ContraLegRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[653],
            { "SettlCurrBidFxRate (656)", "fix.SettlCurrBidFxRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[654],
            { "SettlCurrOfferFxRate (657)", "fix.SettlCurrOfferFxRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[655],
            { "QuoteRequestRejectReason (658)", "fix.QuoteRequestRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[656],
            { "SideComplianceID (659)", "fix.SideComplianceID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[657],
            { "AcctIDSource (660)", "fix.AcctIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[658],
            { "AllocAcctIDSource (661)", "fix.AllocAcctIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[659],
            { "BenchmarkPrice (662)", "fix.BenchmarkPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[660],
            { "BenchmarkPriceType (663)", "fix.BenchmarkPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[661],
            { "ConfirmID (664)", "fix.ConfirmID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[662],
            { "ConfirmStatus (665)", "fix.ConfirmStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[663],
            { "ConfirmTransType (666)", "fix.ConfirmTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[664],
            { "ContractSettlMonth (667)", "fix.ContractSettlMonth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[665],
            { "DeliveryForm (668)", "fix.DeliveryForm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[666],
            { "LastParPx (669)", "fix.LastParPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[667],
            { "NoLegAllocs (670)", "fix.NoLegAllocs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[668],
            { "LegAllocAccount (671)", "fix.LegAllocAccount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[669],
            { "LegIndividualAllocID (672)", "fix.LegIndividualAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[670],
            { "LegAllocQty (673)", "fix.LegAllocQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[671],
            { "LegAllocAcctIDSource (674)", "fix.LegAllocAcctIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[672],
            { "LegSettlCurrency (675)", "fix.LegSettlCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[673],
            { "LegBenchmarkCurveCurrency (676)", "fix.LegBenchmarkCurveCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[674],
            { "LegBenchmarkCurveName (677)", "fix.LegBenchmarkCurveName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[675],
            { "LegBenchmarkCurvePoint (678)", "fix.LegBenchmarkCurvePoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[676],
            { "LegBenchmarkPrice (679)", "fix.LegBenchmarkPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[677],
            { "LegBenchmarkPriceType (680)", "fix.LegBenchmarkPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[678],
            { "LegBidPx (681)", "fix.LegBidPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[679],
            { "LegIOIQty (682)", "fix.LegIOIQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[680],
            { "NoLegStipulations (683)", "fix.NoLegStipulations",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[681],
            { "LegOfferPx (684)", "fix.LegOfferPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[682],
            { "LegOrderQty (685)", "fix.LegOrderQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[683],
            { "LegPriceType (686)", "fix.LegPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[684],
            { "LegQty (687)", "fix.LegQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[685],
            { "LegStipulationType (688)", "fix.LegStipulationType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[686],
            { "LegStipulationValue (689)", "fix.LegStipulationValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[687],
            { "LegSwapType (690)", "fix.LegSwapType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[688],
            { "Pool (691)", "fix.Pool",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[689],
            { "QuotePriceType (692)", "fix.QuotePriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[690],
            { "QuoteRespID (693)", "fix.QuoteRespID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[691],
            { "QuoteRespType (694)", "fix.QuoteRespType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[692],
            { "QuoteQualifier (695)", "fix.QuoteQualifier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[693],
            { "YieldRedemptionDate (696)", "fix.YieldRedemptionDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[694],
            { "YieldRedemptionPrice (697)", "fix.YieldRedemptionPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[695],
            { "YieldRedemptionPriceType (698)", "fix.YieldRedemptionPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[696],
            { "BenchmarkSecurityID (699)", "fix.BenchmarkSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[697],
            { "ReversalIndicator (700)", "fix.ReversalIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[698],
            { "YieldCalcDate (701)", "fix.YieldCalcDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[699],
            { "NoPositions (702)", "fix.NoPositions",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[700],
            { "PosType (703)", "fix.PosType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[701],
            { "LongQty (704)", "fix.LongQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[702],
            { "ShortQty (705)", "fix.ShortQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[703],
            { "PosQtyStatus (706)", "fix.PosQtyStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[704],
            { "PosAmtType (707)", "fix.PosAmtType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[705],
            { "PosAmt (708)", "fix.PosAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[706],
            { "PosTransType (709)", "fix.PosTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[707],
            { "PosReqID (710)", "fix.PosReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[708],
            { "NoUnderlyings (711)", "fix.NoUnderlyings",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[709],
            { "PosMaintAction (712)", "fix.PosMaintAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[710],
            { "OrigPosReqRefID (713)", "fix.OrigPosReqRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[711],
            { "PosMaintRptRefID (714)", "fix.PosMaintRptRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[712],
            { "ClearingBusinessDate (715)", "fix.ClearingBusinessDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[713],
            { "SettlSessID (716)", "fix.SettlSessID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[714],
            { "SettlSessSubID (717)", "fix.SettlSessSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[715],
            { "AdjustmentType (718)", "fix.AdjustmentType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[716],
            { "ContraryInstructionIndicator (719)", "fix.ContraryInstructionIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[717],
            { "PriorSpreadIndicator (720)", "fix.PriorSpreadIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[718],
            { "PosMaintRptID (721)", "fix.PosMaintRptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[719],
            { "PosMaintStatus (722)", "fix.PosMaintStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[720],
            { "PosMaintResult (723)", "fix.PosMaintResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[721],
            { "PosReqType (724)", "fix.PosReqType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[722],
            { "ResponseTransportType (725)", "fix.ResponseTransportType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[723],
            { "ResponseDestination (726)", "fix.ResponseDestination",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[724],
            { "TotalNumPosReports (727)", "fix.TotalNumPosReports",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[725],
            { "PosReqResult (728)", "fix.PosReqResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[726],
            { "PosReqStatus (729)", "fix.PosReqStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[727],
            { "SettlPrice (730)", "fix.SettlPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[728],
            { "SettlPriceType (731)", "fix.SettlPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[729],
            { "UnderlyingSettlPrice (732)", "fix.UnderlyingSettlPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[730],
            { "UnderlyingSettlPriceType (733)", "fix.UnderlyingSettlPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[731],
            { "PriorSettlPrice (734)", "fix.PriorSettlPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[732],
            { "NoQuoteQualifiers (735)", "fix.NoQuoteQualifiers",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[733],
            { "AllocSettlCurrency (736)", "fix.AllocSettlCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[734],
            { "AllocSettlCurrAmt (737)", "fix.AllocSettlCurrAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[735],
            { "InterestAtMaturity (738)", "fix.InterestAtMaturity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[736],
            { "LegDatedDate (739)", "fix.LegDatedDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[737],
            { "LegPool (740)", "fix.LegPool",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[738],
            { "AllocInterestAtMaturity (741)", "fix.AllocInterestAtMaturity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[739],
            { "AllocAccruedInterestAmt (742)", "fix.AllocAccruedInterestAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[740],
            { "DeliveryDate (743)", "fix.DeliveryDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[741],
            { "AssignmentMethod (744)", "fix.AssignmentMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[742],
            { "AssignmentUnit (745)", "fix.AssignmentUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[743],
            { "OpenInterest (746)", "fix.OpenInterest",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[744],
            { "ExerciseMethod (747)", "fix.ExerciseMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[745],
            { "TotNumTradeReports (748)", "fix.TotNumTradeReports",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[746],
            { "TradeRequestResult (749)", "fix.TradeRequestResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[747],
            { "TradeRequestStatus (750)", "fix.TradeRequestStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[748],
            { "TradeReportRejectReason (751)", "fix.TradeReportRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[749],
            { "SideMultiLegReportingType (752)", "fix.SideMultiLegReportingType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[750],
            { "NoPosAmt (753)", "fix.NoPosAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[751],
            { "AutoAcceptIndicator (754)", "fix.AutoAcceptIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[752],
            { "AllocReportID (755)", "fix.AllocReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[753],
            { "NoNested2PartyIDs (756)", "fix.NoNested2PartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[754],
            { "Nested2PartyID (757)", "fix.Nested2PartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[755],
            { "Nested2PartyIDSource (758)", "fix.Nested2PartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[756],
            { "Nested2PartyRole (759)", "fix.Nested2PartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[757],
            { "Nested2PartySubID (760)", "fix.Nested2PartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[758],
            { "BenchmarkSecurityIDSource (761)", "fix.BenchmarkSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[759],
            { "SecuritySubType (762)", "fix.SecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[760],
            { "UnderlyingSecuritySubType (763)", "fix.UnderlyingSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[761],
            { "LegSecuritySubType (764)", "fix.LegSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[762],
            { "AllowableOneSidednessPct (765)", "fix.AllowableOneSidednessPct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[763],
            { "AllowableOneSidednessValue (766)", "fix.AllowableOneSidednessValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[764],
            { "AllowableOneSidednessCurr (767)", "fix.AllowableOneSidednessCurr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[765],
            { "NoTrdRegTimestamps (768)", "fix.NoTrdRegTimestamps",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[766],
            { "TrdRegTimestamp (769)", "fix.TrdRegTimestamp",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[767],
            { "TrdRegTimestampType (770)", "fix.TrdRegTimestampType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[768],
            { "TrdRegTimestampOrigin (771)", "fix.TrdRegTimestampOrigin",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[769],
            { "ConfirmRefID (772)", "fix.ConfirmRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[770],
            { "ConfirmType (773)", "fix.ConfirmType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[771],
            { "ConfirmRejReason (774)", "fix.ConfirmRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[772],
            { "BookingType (775)", "fix.BookingType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[773],
            { "IndividualAllocRejCode (776)", "fix.IndividualAllocRejCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[774],
            { "SettlInstMsgID (777)", "fix.SettlInstMsgID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[775],
            { "NoSettlInst (778)", "fix.NoSettlInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[776],
            { "LastUpdateTime (779)", "fix.LastUpdateTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[777],
            { "AllocSettlInstType (780)", "fix.AllocSettlInstType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[778],
            { "NoSettlPartyIDs (781)", "fix.NoSettlPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[779],
            { "SettlPartyID (782)", "fix.SettlPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[780],
            { "SettlPartyIDSource (783)", "fix.SettlPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[781],
            { "SettlPartyRole (784)", "fix.SettlPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[782],
            { "SettlPartySubID (785)", "fix.SettlPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[783],
            { "SettlPartySubIDType (786)", "fix.SettlPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[784],
            { "DlvyInstType (787)", "fix.DlvyInstType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[785],
            { "TerminationType (788)", "fix.TerminationType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[786],
            { "NextExpectedMsgSeqNum (789)", "fix.NextExpectedMsgSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[787],
            { "OrdStatusReqID (790)", "fix.OrdStatusReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[788],
            { "SettlInstReqID (791)", "fix.SettlInstReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[789],
            { "SettlInstReqRejCode (792)", "fix.SettlInstReqRejCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[790],
            { "SecondaryAllocID (793)", "fix.SecondaryAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[791],
            { "AllocReportType (794)", "fix.AllocReportType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[792],
            { "AllocReportRefID (795)", "fix.AllocReportRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[793],
            { "AllocCancReplaceReason (796)", "fix.AllocCancReplaceReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[794],
            { "CopyMsgIndicator (797)", "fix.CopyMsgIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[795],
            { "AllocAccountType (798)", "fix.AllocAccountType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[796],
            { "OrderAvgPx (799)", "fix.OrderAvgPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[797],
            { "OrderBookingQty (800)", "fix.OrderBookingQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[798],
            { "NoSettlPartySubIDs (801)", "fix.NoSettlPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[799],
            { "NoPartySubIDs (802)", "fix.NoPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[800],
            { "PartySubIDType (803)", "fix.PartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[801],
            { "NoNestedPartySubIDs (804)", "fix.NoNestedPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[802],
            { "NestedPartySubIDType (805)", "fix.NestedPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[803],
            { "NoNested2PartySubIDs (806)", "fix.NoNested2PartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[804],
            { "Nested2PartySubIDType (807)", "fix.Nested2PartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[805],
            { "AllocIntermedReqType (808)", "fix.AllocIntermedReqType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[806],
            { "UnderlyingPx (810)", "fix.UnderlyingPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[807],
            { "PriceDelta (811)", "fix.PriceDelta",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[808],
            { "ApplQueueMax (812)", "fix.ApplQueueMax",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[809],
            { "ApplQueueDepth (813)", "fix.ApplQueueDepth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[810],
            { "ApplQueueResolution (814)", "fix.ApplQueueResolution",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[811],
            { "ApplQueueAction (815)", "fix.ApplQueueAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[812],
            { "NoAltMDSource (816)", "fix.NoAltMDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[813],
            { "AltMDSourceID (817)", "fix.AltMDSourceID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[814],
            { "SecondaryTradeReportID (818)", "fix.SecondaryTradeReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[815],
            { "AvgPxIndicator (819)", "fix.AvgPxIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[816],
            { "TradeLinkID (820)", "fix.TradeLinkID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[817],
            { "OrderInputDevice (821)", "fix.OrderInputDevice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[818],
            { "UnderlyingTradingSessionID (822)", "fix.UnderlyingTradingSessionID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[819],
            { "UnderlyingTradingSessionSubID (823)", "fix.UnderlyingTradingSessionSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[820],
            { "TradeLegRefID (824)", "fix.TradeLegRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[821],
            { "ExchangeRule (825)", "fix.ExchangeRule",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[822],
            { "TradeAllocIndicator (826)", "fix.TradeAllocIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[823],
            { "ExpirationCycle (827)", "fix.ExpirationCycle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[824],
            { "TrdType (828)", "fix.TrdType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[825],
            { "TrdSubType (829)", "fix.TrdSubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[826],
            { "TransferReason (830)", "fix.TransferReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[827],
            { "AsgnReqID (831)", "fix.AsgnReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[828],
            { "TotNumAssignmentReports (832)", "fix.TotNumAssignmentReports",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[829],
            { "AsgnRptID (833)", "fix.AsgnRptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[830],
            { "ThresholdAmount (834)", "fix.ThresholdAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[831],
            { "PegMoveType (835)", "fix.PegMoveType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[832],
            { "PegOffsetType (836)", "fix.PegOffsetType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[833],
            { "PegLimitType (837)", "fix.PegLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[834],
            { "PegRoundDirection (838)", "fix.PegRoundDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[835],
            { "PeggedPrice (839)", "fix.PeggedPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[836],
            { "PegScope (840)", "fix.PegScope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[837],
            { "DiscretionMoveType (841)", "fix.DiscretionMoveType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[838],
            { "DiscretionOffsetType (842)", "fix.DiscretionOffsetType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[839],
            { "DiscretionLimitType (843)", "fix.DiscretionLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[840],
            { "DiscretionRoundDirection (844)", "fix.DiscretionRoundDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[841],
            { "DiscretionPrice (845)", "fix.DiscretionPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[842],
            { "DiscretionScope (846)", "fix.DiscretionScope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[843],
            { "TargetStrategy (847)", "fix.TargetStrategy",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[844],
            { "TargetStrategyParameters (848)", "fix.TargetStrategyParameters",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[845],
            { "ParticipationRate (849)", "fix.ParticipationRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[846],
            { "TargetStrategyPerformance (850)", "fix.TargetStrategyPerformance",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[847],
            { "LastLiquidityInd (851)", "fix.LastLiquidityInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[848],
            { "PublishTrdIndicator (852)", "fix.PublishTrdIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[849],
            { "ShortSaleReason (853)", "fix.ShortSaleReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[850],
            { "QtyType (854)", "fix.QtyType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[851],
            { "SecondaryTrdType (855)", "fix.SecondaryTrdType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[852],
            { "TradeReportType (856)", "fix.TradeReportType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[853],
            { "AllocNoOrdersType (857)", "fix.AllocNoOrdersType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[854],
            { "SharedCommission (858)", "fix.SharedCommission",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[855],
            { "ConfirmReqID (859)", "fix.ConfirmReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[856],
            { "AvgParPx (860)", "fix.AvgParPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[857],
            { "ReportedPx (861)", "fix.ReportedPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[858],
            { "NoCapacities (862)", "fix.NoCapacities",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[859],
            { "OrderCapacityQty (863)", "fix.OrderCapacityQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[860],
            { "NoEvents (864)", "fix.NoEvents",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[861],
            { "EventType (865)", "fix.EventType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[862],
            { "EventDate (866)", "fix.EventDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[863],
            { "EventPx (867)", "fix.EventPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[864],
            { "EventText (868)", "fix.EventText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[865],
            { "PctAtRisk (869)", "fix.PctAtRisk",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[866],
            { "NoInstrAttrib (870)", "fix.NoInstrAttrib",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[867],
            { "InstrAttribType (871)", "fix.InstrAttribType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[868],
            { "InstrAttribValue (872)", "fix.InstrAttribValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[869],
            { "DatedDate (873)", "fix.DatedDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[870],
            { "InterestAccrualDate (874)", "fix.InterestAccrualDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[871],
            { "CPProgram (875)", "fix.CPProgram",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[872],
            { "CPRegType (876)", "fix.CPRegType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[873],
            { "UnderlyingCPProgram (877)", "fix.UnderlyingCPProgram",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[874],
            { "UnderlyingCPRegType (878)", "fix.UnderlyingCPRegType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[875],
            { "UnderlyingQty (879)", "fix.UnderlyingQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[876],
            { "TrdMatchID (880)", "fix.TrdMatchID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[877],
            { "SecondaryTradeReportRefID (881)", "fix.SecondaryTradeReportRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[878],
            { "UnderlyingDirtyPrice (882)", "fix.UnderlyingDirtyPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[879],
            { "UnderlyingEndPrice (883)", "fix.UnderlyingEndPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[880],
            { "UnderlyingStartValue (884)", "fix.UnderlyingStartValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[881],
            { "UnderlyingCurrentValue (885)", "fix.UnderlyingCurrentValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[882],
            { "UnderlyingEndValue (886)", "fix.UnderlyingEndValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[883],
            { "NoUnderlyingStips (887)", "fix.NoUnderlyingStips",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[884],
            { "UnderlyingStipType (888)", "fix.UnderlyingStipType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[885],
            { "UnderlyingStipValue (889)", "fix.UnderlyingStipValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[886],
            { "MaturityNetMoney (890)", "fix.MaturityNetMoney",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[887],
            { "MiscFeeBasis (891)", "fix.MiscFeeBasis",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[888],
            { "TotNoAllocs (892)", "fix.TotNoAllocs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[889],
            { "LastFragment (893)", "fix.LastFragment",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[890],
            { "CollReqID (894)", "fix.CollReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[891],
            { "CollAsgnReason (895)", "fix.CollAsgnReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[892],
            { "CollInquiryQualifier (896)", "fix.CollInquiryQualifier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[893],
            { "NoTrades (897)", "fix.NoTrades",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[894],
            { "MarginRatio (898)", "fix.MarginRatio",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[895],
            { "MarginExcess (899)", "fix.MarginExcess",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[896],
            { "TotalNetValue (900)", "fix.TotalNetValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[897],
            { "CashOutstanding (901)", "fix.CashOutstanding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[898],
            { "CollAsgnID (902)", "fix.CollAsgnID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[899],
            { "CollAsgnTransType (903)", "fix.CollAsgnTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[900],
            { "CollRespID (904)", "fix.CollRespID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[901],
            { "CollAsgnRespType (905)", "fix.CollAsgnRespType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[902],
            { "CollAsgnRejectReason (906)", "fix.CollAsgnRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[903],
            { "CollAsgnRefID (907)", "fix.CollAsgnRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[904],
            { "CollRptID (908)", "fix.CollRptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[905],
            { "CollInquiryID (909)", "fix.CollInquiryID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[906],
            { "CollStatus (910)", "fix.CollStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[907],
            { "TotNumReports (911)", "fix.TotNumReports",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[908],
            { "LastRptRequested (912)", "fix.LastRptRequested",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[909],
            { "AgreementDesc (913)", "fix.AgreementDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[910],
            { "AgreementID (914)", "fix.AgreementID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[911],
            { "AgreementDate (915)", "fix.AgreementDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[912],
            { "StartDate (916)", "fix.StartDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[913],
            { "EndDate (917)", "fix.EndDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[914],
            { "AgreementCurrency (918)", "fix.AgreementCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[915],
            { "DeliveryType (919)", "fix.DeliveryType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[916],
            { "EndAccruedInterestAmt (920)", "fix.EndAccruedInterestAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[917],
            { "StartCash (921)", "fix.StartCash",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[918],
            { "EndCash (922)", "fix.EndCash",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[919],
            { "UserRequestID (923)", "fix.UserRequestID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[920],
            { "UserRequestType (924)", "fix.UserRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[921],
            { "NewPassword (925)", "fix.NewPassword",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[922],
            { "UserStatus (926)", "fix.UserStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[923],
            { "UserStatusText (927)", "fix.UserStatusText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[924],
            { "StatusValue (928)", "fix.StatusValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[925],
            { "StatusText (929)", "fix.StatusText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[926],
            { "RefCompID (930)", "fix.RefCompID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[927],
            { "RefSubID (931)", "fix.RefSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[928],
            { "NetworkResponseID (932)", "fix.NetworkResponseID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[929],
            { "NetworkRequestID (933)", "fix.NetworkRequestID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[930],
            { "LastNetworkResponseID (934)", "fix.LastNetworkResponseID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[931],
            { "NetworkRequestType (935)", "fix.NetworkRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[932],
            { "NoCompIDs (936)", "fix.NoCompIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[933],
            { "NetworkStatusResponseType (937)", "fix.NetworkStatusResponseType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[934],
            { "NoCollInquiryQualifier (938)", "fix.NoCollInquiryQualifier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[935],
            { "TrdRptStatus (939)", "fix.TrdRptStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[936],
            { "AffirmStatus (940)", "fix.AffirmStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[937],
            { "UnderlyingStrikeCurrency (941)", "fix.UnderlyingStrikeCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[938],
            { "LegStrikeCurrency (942)", "fix.LegStrikeCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[939],
            { "TimeBracket (943)", "fix.TimeBracket",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[940],
            { "CollAction (944)", "fix.CollAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[941],
            { "CollInquiryStatus (945)", "fix.CollInquiryStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[942],
            { "CollInquiryResult (946)", "fix.CollInquiryResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[943],
            { "StrikeCurrency (947)", "fix.StrikeCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[944],
            { "NoNested3PartyIDs (948)", "fix.NoNested3PartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[945],
            { "Nested3PartyID (949)", "fix.Nested3PartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[946],
            { "Nested3PartyIDSource (950)", "fix.Nested3PartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[947],
            { "Nested3PartyRole (951)", "fix.Nested3PartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[948],
            { "NoNested3PartySubIDs (952)", "fix.NoNested3PartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[949],
            { "Nested3PartySubID (953)", "fix.Nested3PartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[950],
            { "Nested3PartySubIDType (954)", "fix.Nested3PartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[951],
            { "LegContractSettlMonth (955)", "fix.LegContractSettlMonth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[952],
            { "LegInterestAccrualDate (956)", "fix.LegInterestAccrualDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[953],
            { "NoStrategyParameters (957)", "fix.NoStrategyParameters",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[954],
            { "StrategyParameterName (958)", "fix.StrategyParameterName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[955],
            { "StrategyParameterType (959)", "fix.StrategyParameterType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[956],
            { "StrategyParameterValue (960)", "fix.StrategyParameterValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[957],
            { "HostCrossID (961)", "fix.HostCrossID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[958],
            { "SideTimeInForce (962)", "fix.SideTimeInForce",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[959],
            { "MDReportID (963)", "fix.MDReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[960],
            { "SecurityReportID (964)", "fix.SecurityReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[961],
            { "SecurityStatus (965)", "fix.SecurityStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[962],
            { "SettleOnOpenFlag (966)", "fix.SettleOnOpenFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[963],
            { "StrikeMultiplier (967)", "fix.StrikeMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[964],
            { "StrikeValue (968)", "fix.StrikeValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[965],
            { "MinPriceIncrement (969)", "fix.MinPriceIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[966],
            { "PositionLimit (970)", "fix.PositionLimit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[967],
            { "NTPositionLimit (971)", "fix.NTPositionLimit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[968],
            { "UnderlyingAllocationPercent (972)", "fix.UnderlyingAllocationPercent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[969],
            { "UnderlyingCashAmount (973)", "fix.UnderlyingCashAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[970],
            { "UnderlyingCashType (974)", "fix.UnderlyingCashType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[971],
            { "UnderlyingSettlementType (975)", "fix.UnderlyingSettlementType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[972],
            { "QuantityDate (976)", "fix.QuantityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[973],
            { "ContIntRptID (977)", "fix.ContIntRptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[974],
            { "LateIndicator (978)", "fix.LateIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[975],
            { "InputSource (979)", "fix.InputSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[976],
            { "SecurityUpdateAction (980)", "fix.SecurityUpdateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[977],
            { "NoExpiration (981)", "fix.NoExpiration",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[978],
            { "ExpirationQtyType (982)", "fix.ExpirationQtyType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[979],
            { "ExpQty (983)", "fix.ExpQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[980],
            { "NoUnderlyingAmounts (984)", "fix.NoUnderlyingAmounts",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[981],
            { "UnderlyingPayAmount (985)", "fix.UnderlyingPayAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[982],
            { "UnderlyingCollectAmount (986)", "fix.UnderlyingCollectAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[983],
            { "UnderlyingSettlementDate (987)", "fix.UnderlyingSettlementDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[984],
            { "UnderlyingSettlementStatus (988)", "fix.UnderlyingSettlementStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[985],
            { "SecondaryIndividualAllocID (989)", "fix.SecondaryIndividualAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[986],
            { "LegReportID (990)", "fix.LegReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[987],
            { "RndPx (991)", "fix.RndPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[988],
            { "IndividualAllocType (992)", "fix.IndividualAllocType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[989],
            { "AllocCustomerCapacity (993)", "fix.AllocCustomerCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[990],
            { "TierCode (994)", "fix.TierCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[991],
            { "UnitOfMeasure (996)", "fix.UnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[992],
            { "TimeUnit (997)", "fix.TimeUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[993],
            { "UnderlyingUnitOfMeasure (998)", "fix.UnderlyingUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[994],
            { "LegUnitOfMeasure (999)", "fix.LegUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[995],
            { "UnderlyingTimeUnit (1000)", "fix.UnderlyingTimeUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[996],
            { "LegTimeUnit (1001)", "fix.LegTimeUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[997],
            { "AllocMethod (1002)", "fix.AllocMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[998],
            { "TradeID (1003)", "fix.TradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[999],
            { "SideTradeReportID (1005)", "fix.SideTradeReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1000],
            { "SideFillStationCd (1006)", "fix.SideFillStationCd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1001],
            { "SideReasonCd (1007)", "fix.SideReasonCd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1002],
            { "SideTrdSubTyp (1008)", "fix.SideTrdSubTyp",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1003],
            { "SideLastQty (1009)", "fix.SideLastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1004],
            { "MessageEventSource (1011)", "fix.MessageEventSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1005],
            { "SideTrdRegTimestamp (1012)", "fix.SideTrdRegTimestamp",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1006],
            { "SideTrdRegTimestampType (1013)", "fix.SideTrdRegTimestampType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1007],
            { "SideTrdRegTimestampSrc (1014)", "fix.SideTrdRegTimestampSrc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1008],
            { "AsOfIndicator (1015)", "fix.AsOfIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1009],
            { "NoSideTrdRegTS (1016)", "fix.NoSideTrdRegTS",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1010],
            { "LegOptionRatio (1017)", "fix.LegOptionRatio",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1011],
            { "NoInstrumentParties (1018)", "fix.NoInstrumentParties",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1012],
            { "InstrumentPartyID (1019)", "fix.InstrumentPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1013],
            { "TradeVolume (1020)", "fix.TradeVolume",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1014],
            { "MDBookType (1021)", "fix.MDBookType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1015],
            { "MDFeedType (1022)", "fix.MDFeedType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1016],
            { "MDPriceLevel (1023)", "fix.MDPriceLevel",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1017],
            { "MDOriginType (1024)", "fix.MDOriginType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1018],
            { "FirstPx (1025)", "fix.FirstPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1019],
            { "MDEntrySpotRate (1026)", "fix.MDEntrySpotRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1020],
            { "MDEntryForwardPoints (1027)", "fix.MDEntryForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1021],
            { "ManualOrderIndicator (1028)", "fix.ManualOrderIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1022],
            { "CustDirectedOrder (1029)", "fix.CustDirectedOrder",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1023],
            { "ReceivedDeptID (1030)", "fix.ReceivedDeptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1024],
            { "CustOrderHandlingInst (1031)", "fix.CustOrderHandlingInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1025],
            { "OrderHandlingInstSource (1032)", "fix.OrderHandlingInstSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1026],
            { "DeskType (1033)", "fix.DeskType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1027],
            { "DeskTypeSource (1034)", "fix.DeskTypeSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1028],
            { "DeskOrderHandlingInst (1035)", "fix.DeskOrderHandlingInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1029],
            { "ExecAckStatus (1036)", "fix.ExecAckStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1030],
            { "UnderlyingDeliveryAmount (1037)", "fix.UnderlyingDeliveryAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1031],
            { "UnderlyingCapValue (1038)", "fix.UnderlyingCapValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1032],
            { "UnderlyingSettlMethod (1039)", "fix.UnderlyingSettlMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1033],
            { "SecondaryTradeID (1040)", "fix.SecondaryTradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1034],
            { "FirmTradeID (1041)", "fix.FirmTradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1035],
            { "SecondaryFirmTradeID (1042)", "fix.SecondaryFirmTradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1036],
            { "CollApplType (1043)", "fix.CollApplType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1037],
            { "UnderlyingAdjustedQuantity (1044)", "fix.UnderlyingAdjustedQuantity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1038],
            { "UnderlyingFXRate (1045)", "fix.UnderlyingFXRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1039],
            { "UnderlyingFXRateCalc (1046)", "fix.UnderlyingFXRateCalc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1040],
            { "AllocPositionEffect (1047)", "fix.AllocPositionEffect",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1041],
            { "DealingCapacity (1048)", "fix.DealingCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1042],
            { "InstrmtAssignmentMethod (1049)", "fix.InstrmtAssignmentMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1043],
            { "InstrumentPartyIDSource (1050)", "fix.InstrumentPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1044],
            { "InstrumentPartyRole (1051)", "fix.InstrumentPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1045],
            { "NoInstrumentPartySubIDs (1052)", "fix.NoInstrumentPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1046],
            { "InstrumentPartySubID (1053)", "fix.InstrumentPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1047],
            { "InstrumentPartySubIDType (1054)", "fix.InstrumentPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1048],
            { "PositionCurrency (1055)", "fix.PositionCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1049],
            { "CalculatedCcyLastQty (1056)", "fix.CalculatedCcyLastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1050],
            { "AggressorIndicator (1057)", "fix.AggressorIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1051],
            { "NoUndlyInstrumentParties (1058)", "fix.NoUndlyInstrumentParties",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1052],
            { "UnderlyingInstrumentPartyID (1059)", "fix.UnderlyingInstrumentPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1053],
            { "UnderlyingInstrumentPartyIDSource (1060)", "fix.UnderlyingInstrumentPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1054],
            { "UnderlyingInstrumentPartyRole (1061)", "fix.UnderlyingInstrumentPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1055],
            { "NoUndlyInstrumentPartySubIDs (1062)", "fix.NoUndlyInstrumentPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1056],
            { "UnderlyingInstrumentPartySubID (1063)", "fix.UnderlyingInstrumentPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1057],
            { "UnderlyingInstrumentPartySubIDType (1064)", "fix.UnderlyingInstrumentPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1058],
            { "BidSwapPoints (1065)", "fix.BidSwapPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1059],
            { "OfferSwapPoints (1066)", "fix.OfferSwapPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1060],
            { "LegBidForwardPoints (1067)", "fix.LegBidForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1061],
            { "LegOfferForwardPoints (1068)", "fix.LegOfferForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1062],
            { "SwapPoints (1069)", "fix.SwapPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1063],
            { "MDQuoteType (1070)", "fix.MDQuoteType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1064],
            { "LastSwapPoints (1071)", "fix.LastSwapPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1065],
            { "SideGrossTradeAmt (1072)", "fix.SideGrossTradeAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1066],
            { "LegLastForwardPoints (1073)", "fix.LegLastForwardPoints",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1067],
            { "LegCalculatedCcyLastQty (1074)", "fix.LegCalculatedCcyLastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1068],
            { "LegGrossTradeAmt (1075)", "fix.LegGrossTradeAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1069],
            { "MaturityTime (1079)", "fix.MaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1070],
            { "RefOrderID (1080)", "fix.RefOrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1071],
            { "RefOrderIDSource (1081)", "fix.RefOrderIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1072],
            { "SecondaryDisplayQty (1082)", "fix.SecondaryDisplayQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1073],
            { "DisplayWhen (1083)", "fix.DisplayWhen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1074],
            { "DisplayMethod (1084)", "fix.DisplayMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1075],
            { "DisplayLowQty (1085)", "fix.DisplayLowQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1076],
            { "DisplayHighQty (1086)", "fix.DisplayHighQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1077],
            { "DisplayMinIncr (1087)", "fix.DisplayMinIncr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1078],
            { "RefreshQty (1088)", "fix.RefreshQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1079],
            { "MatchIncrement (1089)", "fix.MatchIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1080],
            { "MaxPriceLevels (1090)", "fix.MaxPriceLevels",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1081],
            { "PreTradeAnonymity (1091)", "fix.PreTradeAnonymity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1082],
            { "PriceProtectionScope (1092)", "fix.PriceProtectionScope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1083],
            { "LotType (1093)", "fix.LotType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1084],
            { "PegPriceType (1094)", "fix.PegPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1085],
            { "PeggedRefPrice (1095)", "fix.PeggedRefPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1086],
            { "PegSecurityIDSource (1096)", "fix.PegSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1087],
            { "PegSecurityID (1097)", "fix.PegSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1088],
            { "PegSymbol (1098)", "fix.PegSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1089],
            { "PegSecurityDesc (1099)", "fix.PegSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1090],
            { "TriggerType (1100)", "fix.TriggerType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1091],
            { "TriggerAction (1101)", "fix.TriggerAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1092],
            { "TriggerPrice (1102)", "fix.TriggerPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1093],
            { "TriggerSymbol (1103)", "fix.TriggerSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1094],
            { "TriggerSecurityID (1104)", "fix.TriggerSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1095],
            { "TriggerSecurityIDSource (1105)", "fix.TriggerSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1096],
            { "TriggerSecurityDesc (1106)", "fix.TriggerSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1097],
            { "TriggerPriceType (1107)", "fix.TriggerPriceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1098],
            { "TriggerPriceTypeScope (1108)", "fix.TriggerPriceTypeScope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1099],
            { "TriggerPriceDirection (1109)", "fix.TriggerPriceDirection",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1100],
            { "TriggerNewPrice (1110)", "fix.TriggerNewPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1101],
            { "TriggerOrderType (1111)", "fix.TriggerOrderType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1102],
            { "TriggerNewQty (1112)", "fix.TriggerNewQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1103],
            { "TriggerTradingSessionID (1113)", "fix.TriggerTradingSessionID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1104],
            { "TriggerTradingSessionSubID (1114)", "fix.TriggerTradingSessionSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1105],
            { "OrderCategory (1115)", "fix.OrderCategory",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1106],
            { "NoRootPartyIDs (1116)", "fix.NoRootPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1107],
            { "RootPartyID (1117)", "fix.RootPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1108],
            { "RootPartyIDSource (1118)", "fix.RootPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1109],
            { "RootPartyRole (1119)", "fix.RootPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1110],
            { "NoRootPartySubIDs (1120)", "fix.NoRootPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1111],
            { "RootPartySubID (1121)", "fix.RootPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1112],
            { "RootPartySubIDType (1122)", "fix.RootPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1113],
            { "TradeHandlingInstr (1123)", "fix.TradeHandlingInstr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1114],
            { "OrigTradeHandlingInstr (1124)", "fix.OrigTradeHandlingInstr",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1115],
            { "OrigTradeDate (1125)", "fix.OrigTradeDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1116],
            { "OrigTradeID (1126)", "fix.OrigTradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1117],
            { "OrigSecondaryTradeID (1127)", "fix.OrigSecondaryTradeID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1118],
            { "ApplVerID (1128)", "fix.ApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1119],
            { "CstmApplVerID (1129)", "fix.CstmApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1120],
            { "RefApplVerID (1130)", "fix.RefApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1121],
            { "RefCstmApplVerID (1131)", "fix.RefCstmApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1122],
            { "TZTransactTime (1132)", "fix.TZTransactTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1123],
            { "ExDestinationIDSource (1133)", "fix.ExDestinationIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1124],
            { "ReportedPxDiff (1134)", "fix.ReportedPxDiff",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1125],
            { "RptSys (1135)", "fix.RptSys",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1126],
            { "AllocClearingFeeIndicator (1136)", "fix.AllocClearingFeeIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1127],
            { "DefaultApplVerID (1137)", "fix.DefaultApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1128],
            { "DisplayQty (1138)", "fix.DisplayQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1129],
            { "ExchangeSpecialInstructions (1139)", "fix.ExchangeSpecialInstructions",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1130],
            { "MaxTradeVol (1140)", "fix.MaxTradeVol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1131],
            { "NoMDFeedTypes (1141)", "fix.NoMDFeedTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1132],
            { "MatchAlgorithm (1142)", "fix.MatchAlgorithm",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1133],
            { "MaxPriceVariation (1143)", "fix.MaxPriceVariation",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1134],
            { "ImpliedMarketIndicator (1144)", "fix.ImpliedMarketIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1135],
            { "EventTime (1145)", "fix.EventTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1136],
            { "MinPriceIncrementAmount (1146)", "fix.MinPriceIncrementAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1137],
            { "UnitOfMeasureQty (1147)", "fix.UnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1138],
            { "LowLimitPrice (1148)", "fix.LowLimitPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1139],
            { "HighLimitPrice (1149)", "fix.HighLimitPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1140],
            { "TradingReferencePrice (1150)", "fix.TradingReferencePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1141],
            { "SecurityGroup (1151)", "fix.SecurityGroup",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1142],
            { "LegNumber (1152)", "fix.LegNumber",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1143],
            { "SettlementCycleNo (1153)", "fix.SettlementCycleNo",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1144],
            { "SideCurrency (1154)", "fix.SideCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1145],
            { "SideSettlCurrency (1155)", "fix.SideSettlCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1146],
            { "ApplExtID (1156)", "fix.ApplExtID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1147],
            { "CcyAmt (1157)", "fix.CcyAmt",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1148],
            { "NoSettlDetails (1158)", "fix.NoSettlDetails",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1149],
            { "SettlObligMode (1159)", "fix.SettlObligMode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1150],
            { "SettlObligMsgID (1160)", "fix.SettlObligMsgID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1151],
            { "SettlObligID (1161)", "fix.SettlObligID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1152],
            { "SettlObligTransType (1162)", "fix.SettlObligTransType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1153],
            { "SettlObligRefID (1163)", "fix.SettlObligRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1154],
            { "SettlObligSource (1164)", "fix.SettlObligSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1155],
            { "NoSettlOblig (1165)", "fix.NoSettlOblig",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1156],
            { "QuoteMsgID (1166)", "fix.QuoteMsgID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1157],
            { "QuoteEntryStatus (1167)", "fix.QuoteEntryStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1158],
            { "TotNoCxldQuotes (1168)", "fix.TotNoCxldQuotes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1159],
            { "TotNoAccQuotes (1169)", "fix.TotNoAccQuotes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1160],
            { "TotNoRejQuotes (1170)", "fix.TotNoRejQuotes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1161],
            { "PrivateQuote (1171)", "fix.PrivateQuote",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1162],
            { "RespondentType (1172)", "fix.RespondentType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1163],
            { "MDSubBookType (1173)", "fix.MDSubBookType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1164],
            { "SecurityTradingEvent (1174)", "fix.SecurityTradingEvent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1165],
            { "NoStatsIndicators (1175)", "fix.NoStatsIndicators",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1166],
            { "StatsType (1176)", "fix.StatsType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1167],
            { "NoOfSecSizes (1177)", "fix.NoOfSecSizes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1168],
            { "MDSecSizeType (1178)", "fix.MDSecSizeType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1169],
            { "MDSecSize (1179)", "fix.MDSecSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1170],
            { "ApplID (1180)", "fix.ApplID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1171],
            { "ApplSeqNum (1181)", "fix.ApplSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1172],
            { "ApplBegSeqNum (1182)", "fix.ApplBegSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1173],
            { "ApplEndSeqNum (1183)", "fix.ApplEndSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1174],
            { "SecurityXMLLen (1184)", "fix.SecurityXMLLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1175],
            { "SecurityXML (1185)", "fix.SecurityXML",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1176],
            { "SecurityXMLSchema (1186)", "fix.SecurityXMLSchema",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1177],
            { "RefreshIndicator (1187)", "fix.RefreshIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1178],
            { "Volatility (1188)", "fix.Volatility",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1179],
            { "TimeToExpiration (1189)", "fix.TimeToExpiration",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1180],
            { "RiskFreeRate (1190)", "fix.RiskFreeRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1181],
            { "PriceUnitOfMeasure (1191)", "fix.PriceUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1182],
            { "PriceUnitOfMeasureQty (1192)", "fix.PriceUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1183],
            { "SettlMethod (1193)", "fix.SettlMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1184],
            { "ExerciseStyle (1194)", "fix.ExerciseStyle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1185],
            { "OptPayoutAmount (1195)", "fix.OptPayoutAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1186],
            { "PriceQuoteMethod (1196)", "fix.PriceQuoteMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1187],
            { "ValuationMethod (1197)", "fix.ValuationMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1188],
            { "ListMethod (1198)", "fix.ListMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1189],
            { "CapPrice (1199)", "fix.CapPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1190],
            { "FloorPrice (1200)", "fix.FloorPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1191],
            { "NoStrikeRules (1201)", "fix.NoStrikeRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1192],
            { "StartStrikePxRange (1202)", "fix.StartStrikePxRange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1193],
            { "EndStrikePxRange (1203)", "fix.EndStrikePxRange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1194],
            { "StrikeIncrement (1204)", "fix.StrikeIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1195],
            { "NoTickRules (1205)", "fix.NoTickRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1196],
            { "StartTickPriceRange (1206)", "fix.StartTickPriceRange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1197],
            { "EndTickPriceRange (1207)", "fix.EndTickPriceRange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1198],
            { "TickIncrement (1208)", "fix.TickIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1199],
            { "TickRuleType (1209)", "fix.TickRuleType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1200],
            { "NestedInstrAttribType (1210)", "fix.NestedInstrAttribType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1201],
            { "NestedInstrAttribValue (1211)", "fix.NestedInstrAttribValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1202],
            { "LegMaturityTime (1212)", "fix.LegMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1203],
            { "UnderlyingMaturityTime (1213)", "fix.UnderlyingMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1204],
            { "DerivativeSymbol (1214)", "fix.DerivativeSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1205],
            { "DerivativeSymbolSfx (1215)", "fix.DerivativeSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1206],
            { "DerivativeSecurityID (1216)", "fix.DerivativeSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1207],
            { "DerivativeSecurityIDSource (1217)", "fix.DerivativeSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1208],
            { "NoDerivativeSecurityAltID (1218)", "fix.NoDerivativeSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1209],
            { "DerivativeSecurityAltID (1219)", "fix.DerivativeSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1210],
            { "DerivativeSecurityAltIDSource (1220)", "fix.DerivativeSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1211],
            { "SecondaryLowLimitPrice (1221)", "fix.SecondaryLowLimitPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1212],
            { "MaturityRuleID (1222)", "fix.MaturityRuleID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1213],
            { "StrikeRuleID (1223)", "fix.StrikeRuleID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1214],
            { "LegUnitOfMeasureQty (1224)", "fix.LegUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1215],
            { "DerivativeOptPayAmount (1225)", "fix.DerivativeOptPayAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1216],
            { "EndMaturityMonthYear (1226)", "fix.EndMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1217],
            { "ProductComplex (1227)", "fix.ProductComplex",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1218],
            { "DerivativeProductComplex (1228)", "fix.DerivativeProductComplex",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1219],
            { "MaturityMonthYearIncrement (1229)", "fix.MaturityMonthYearIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1220],
            { "SecondaryHighLimitPrice (1230)", "fix.SecondaryHighLimitPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1221],
            { "MinLotSize (1231)", "fix.MinLotSize",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1222],
            { "NoExecInstRules (1232)", "fix.NoExecInstRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1223],
            { "NoLotTypeRules (1234)", "fix.NoLotTypeRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1224],
            { "NoMatchRules (1235)", "fix.NoMatchRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1225],
            { "NoMaturityRules (1236)", "fix.NoMaturityRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1226],
            { "NoOrdTypeRules (1237)", "fix.NoOrdTypeRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1227],
            { "NoTimeInForceRules (1239)", "fix.NoTimeInForceRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1228],
            { "SecondaryTradingReferencePrice (1240)", "fix.SecondaryTradingReferencePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1229],
            { "StartMaturityMonthYear (1241)", "fix.StartMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1230],
            { "FlexProductEligibilityIndicator (1242)", "fix.FlexProductEligibilityIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1231],
            { "DerivFlexProductEligibilityIndicator (1243)", "fix.DerivFlexProductEligibilityIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1232],
            { "FlexibleIndicator (1244)", "fix.FlexibleIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1233],
            { "TradingCurrency (1245)", "fix.TradingCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1234],
            { "DerivativeProduct (1246)", "fix.DerivativeProduct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1235],
            { "DerivativeSecurityGroup (1247)", "fix.DerivativeSecurityGroup",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1236],
            { "DerivativeCFICode (1248)", "fix.DerivativeCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1237],
            { "DerivativeSecurityType (1249)", "fix.DerivativeSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1238],
            { "DerivativeSecuritySubType (1250)", "fix.DerivativeSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1239],
            { "DerivativeMaturityMonthYear (1251)", "fix.DerivativeMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1240],
            { "DerivativeMaturityDate (1252)", "fix.DerivativeMaturityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1241],
            { "DerivativeMaturityTime (1253)", "fix.DerivativeMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1242],
            { "DerivativeSettleOnOpenFlag (1254)", "fix.DerivativeSettleOnOpenFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1243],
            { "DerivativeInstrmtAssignmentMethod (1255)", "fix.DerivativeInstrmtAssignmentMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1244],
            { "DerivativeSecurityStatus (1256)", "fix.DerivativeSecurityStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1245],
            { "DerivativeInstrRegistry (1257)", "fix.DerivativeInstrRegistry",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1246],
            { "DerivativeCountryOfIssue (1258)", "fix.DerivativeCountryOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1247],
            { "DerivativeStateOrProvinceOfIssue (1259)", "fix.DerivativeStateOrProvinceOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1248],
            { "DerivativeLocaleOfIssue (1260)", "fix.DerivativeLocaleOfIssue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1249],
            { "DerivativeStrikePrice (1261)", "fix.DerivativeStrikePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1250],
            { "DerivativeStrikeCurrency (1262)", "fix.DerivativeStrikeCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1251],
            { "DerivativeStrikeMultiplier (1263)", "fix.DerivativeStrikeMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1252],
            { "DerivativeStrikeValue (1264)", "fix.DerivativeStrikeValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1253],
            { "DerivativeOptAttribute (1265)", "fix.DerivativeOptAttribute",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1254],
            { "DerivativeContractMultiplier (1266)", "fix.DerivativeContractMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1255],
            { "DerivativeMinPriceIncrement (1267)", "fix.DerivativeMinPriceIncrement",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1256],
            { "DerivativeMinPriceIncrementAmount (1268)", "fix.DerivativeMinPriceIncrementAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1257],
            { "DerivativeUnitOfMeasure (1269)", "fix.DerivativeUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1258],
            { "DerivativeUnitOfMeasureQty (1270)", "fix.DerivativeUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1259],
            { "DerivativeTimeUnit (1271)", "fix.DerivativeTimeUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1260],
            { "DerivativeSecurityExchange (1272)", "fix.DerivativeSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1261],
            { "DerivativePositionLimit (1273)", "fix.DerivativePositionLimit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1262],
            { "DerivativeNTPositionLimit (1274)", "fix.DerivativeNTPositionLimit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1263],
            { "DerivativeIssuer (1275)", "fix.DerivativeIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1264],
            { "DerivativeIssueDate (1276)", "fix.DerivativeIssueDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1265],
            { "DerivativeEncodedIssuerLen (1277)", "fix.DerivativeEncodedIssuerLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1266],
            { "DerivativeEncodedIssuer (1278)", "fix.DerivativeEncodedIssuer",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1267],
            { "DerivativeSecurityDesc (1279)", "fix.DerivativeSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1268],
            { "DerivativeEncodedSecurityDescLen (1280)", "fix.DerivativeEncodedSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1269],
            { "DerivativeEncodedSecurityDesc (1281)", "fix.DerivativeEncodedSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1270],
            { "DerivativeSecurityXMLLen (1282)", "fix.DerivativeSecurityXMLLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1271],
            { "DerivativeSecurityXML (1283)", "fix.DerivativeSecurityXML",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1272],
            { "DerivativeSecurityXMLSchema (1284)", "fix.DerivativeSecurityXMLSchema",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1273],
            { "DerivativeContractSettlMonth (1285)", "fix.DerivativeContractSettlMonth",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1274],
            { "NoDerivativeEvents (1286)", "fix.NoDerivativeEvents",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1275],
            { "DerivativeEventType (1287)", "fix.DerivativeEventType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1276],
            { "DerivativeEventDate (1288)", "fix.DerivativeEventDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1277],
            { "DerivativeEventTime (1289)", "fix.DerivativeEventTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1278],
            { "DerivativeEventPx (1290)", "fix.DerivativeEventPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1279],
            { "DerivativeEventText (1291)", "fix.DerivativeEventText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1280],
            { "NoDerivativeInstrumentParties (1292)", "fix.NoDerivativeInstrumentParties",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1281],
            { "DerivativeInstrumentPartyID (1293)", "fix.DerivativeInstrumentPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1282],
            { "DerivativeInstrumentPartyIDSource (1294)", "fix.DerivativeInstrumentPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1283],
            { "DerivativeInstrumentPartyRole (1295)", "fix.DerivativeInstrumentPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1284],
            { "NoDerivativeInstrumentPartySubIDs (1296)", "fix.NoDerivativeInstrumentPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1285],
            { "DerivativeInstrumentPartySubID (1297)", "fix.DerivativeInstrumentPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1286],
            { "DerivativeInstrumentPartySubIDType (1298)", "fix.DerivativeInstrumentPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1287],
            { "DerivativeExerciseStyle (1299)", "fix.DerivativeExerciseStyle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1288],
            { "MarketSegmentID (1300)", "fix.MarketSegmentID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1289],
            { "MarketID (1301)", "fix.MarketID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1290],
            { "MaturityMonthYearIncrementUnits (1302)", "fix.MaturityMonthYearIncrementUnits",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1291],
            { "MaturityMonthYearFormat (1303)", "fix.MaturityMonthYearFormat",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1292],
            { "StrikeExerciseStyle (1304)", "fix.StrikeExerciseStyle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1293],
            { "SecondaryPriceLimitType (1305)", "fix.SecondaryPriceLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1294],
            { "PriceLimitType (1306)", "fix.PriceLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1295],
            { "DerivativeSecurityListRequestType (1307)", "fix.DerivativeSecurityListRequestType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1296],
            { "ExecInstValue (1308)", "fix.ExecInstValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1297],
            { "NoTradingSessionRules (1309)", "fix.NoTradingSessionRules",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1298],
            { "NoMarketSegments (1310)", "fix.NoMarketSegments",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1299],
            { "NoDerivativeInstrAttrib (1311)", "fix.NoDerivativeInstrAttrib",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1300],
            { "NoNestedInstrAttrib (1312)", "fix.NoNestedInstrAttrib",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1301],
            { "DerivativeInstrAttribType (1313)", "fix.DerivativeInstrAttribType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1302],
            { "DerivativeInstrAttribValue (1314)", "fix.DerivativeInstrAttribValue",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1303],
            { "DerivativePriceUnitOfMeasure (1315)", "fix.DerivativePriceUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1304],
            { "DerivativePriceUnitOfMeasureQty (1316)", "fix.DerivativePriceUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1305],
            { "DerivativeSettlMethod (1317)", "fix.DerivativeSettlMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1306],
            { "DerivativePriceQuoteMethod (1318)", "fix.DerivativePriceQuoteMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1307],
            { "DerivativeValuationMethod (1319)", "fix.DerivativeValuationMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1308],
            { "DerivativeListMethod (1320)", "fix.DerivativeListMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1309],
            { "DerivativeCapPrice (1321)", "fix.DerivativeCapPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1310],
            { "DerivativeFloorPrice (1322)", "fix.DerivativeFloorPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1311],
            { "DerivativePutOrCall (1323)", "fix.DerivativePutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1312],
            { "ListUpdateAction (1324)", "fix.ListUpdateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1313],
            { "ParentMktSegmID (1325)", "fix.ParentMktSegmID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1314],
            { "TradingSessionDesc (1326)", "fix.TradingSessionDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1315],
            { "TradSesUpdateAction (1327)", "fix.TradSesUpdateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1316],
            { "RejectText (1328)", "fix.RejectText",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1317],
            { "FeeMultiplier (1329)", "fix.FeeMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1318],
            { "UnderlyingLegSymbol (1330)", "fix.UnderlyingLegSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1319],
            { "UnderlyingLegSymbolSfx (1331)", "fix.UnderlyingLegSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1320],
            { "UnderlyingLegSecurityID (1332)", "fix.UnderlyingLegSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1321],
            { "UnderlyingLegSecurityIDSource (1333)", "fix.UnderlyingLegSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1322],
            { "NoUnderlyingLegSecurityAltID (1334)", "fix.NoUnderlyingLegSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1323],
            { "UnderlyingLegSecurityAltID (1335)", "fix.UnderlyingLegSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1324],
            { "UnderlyingLegSecurityAltIDSource (1336)", "fix.UnderlyingLegSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1325],
            { "UnderlyingLegSecurityType (1337)", "fix.UnderlyingLegSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1326],
            { "UnderlyingLegSecuritySubType (1338)", "fix.UnderlyingLegSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1327],
            { "UnderlyingLegMaturityMonthYear (1339)", "fix.UnderlyingLegMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1328],
            { "UnderlyingLegStrikePrice (1340)", "fix.UnderlyingLegStrikePrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1329],
            { "UnderlyingLegSecurityExchange (1341)", "fix.UnderlyingLegSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1330],
            { "NoOfLegUnderlyings (1342)", "fix.NoOfLegUnderlyings",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1331],
            { "UnderlyingLegPutOrCall (1343)", "fix.UnderlyingLegPutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1332],
            { "UnderlyingLegCFICode (1344)", "fix.UnderlyingLegCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1333],
            { "UnderlyingLegMaturityDate (1345)", "fix.UnderlyingLegMaturityDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1334],
            { "ApplReqID (1346)", "fix.ApplReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1335],
            { "ApplReqType (1347)", "fix.ApplReqType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1336],
            { "ApplResponseType (1348)", "fix.ApplResponseType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1337],
            { "ApplTotalMessageCount (1349)", "fix.ApplTotalMessageCount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1338],
            { "ApplLastSeqNum (1350)", "fix.ApplLastSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1339],
            { "NoApplIDs (1351)", "fix.NoApplIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1340],
            { "ApplResendFlag (1352)", "fix.ApplResendFlag",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1341],
            { "ApplResponseID (1353)", "fix.ApplResponseID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1342],
            { "ApplResponseError (1354)", "fix.ApplResponseError",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1343],
            { "RefApplID (1355)", "fix.RefApplID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1344],
            { "ApplReportID (1356)", "fix.ApplReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1345],
            { "RefApplLastSeqNum (1357)", "fix.RefApplLastSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1346],
            { "LegPutOrCall (1358)", "fix.LegPutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1347],
            { "EncodedSymbolLen (1359)", "fix.EncodedSymbolLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1348],
            { "EncodedSymbol (1360)", "fix.EncodedSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1349],
            { "TotNoFills (1361)", "fix.TotNoFills",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1350],
            { "NoFills (1362)", "fix.NoFills",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1351],
            { "FillExecID (1363)", "fix.FillExecID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1352],
            { "FillPx (1364)", "fix.FillPx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1353],
            { "FillQty (1365)", "fix.FillQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1354],
            { "LegAllocID (1366)", "fix.LegAllocID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1355],
            { "LegAllocSettlCurrency (1367)", "fix.LegAllocSettlCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1356],
            { "TradSesEvent (1368)", "fix.TradSesEvent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1357],
            { "MassActionReportID (1369)", "fix.MassActionReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1358],
            { "NoNotAffectedOrders (1370)", "fix.NoNotAffectedOrders",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1359],
            { "NotAffectedOrderID (1371)", "fix.NotAffectedOrderID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1360],
            { "NotAffOrigClOrdID (1372)", "fix.NotAffOrigClOrdID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1361],
            { "MassActionType (1373)", "fix.MassActionType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1362],
            { "MassActionScope (1374)", "fix.MassActionScope",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1363],
            { "MassActionResponse (1375)", "fix.MassActionResponse",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1364],
            { "MassActionRejectReason (1376)", "fix.MassActionRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1365],
            { "MultilegModel (1377)", "fix.MultilegModel",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1366],
            { "MultilegPriceMethod (1378)", "fix.MultilegPriceMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1367],
            { "LegVolatility (1379)", "fix.LegVolatility",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1368],
            { "DividendYield (1380)", "fix.DividendYield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1369],
            { "LegDividendYield (1381)", "fix.LegDividendYield",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1370],
            { "CurrencyRatio (1382)", "fix.CurrencyRatio",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1371],
            { "LegCurrencyRatio (1383)", "fix.LegCurrencyRatio",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1372],
            { "LegExecInst (1384)", "fix.LegExecInst",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1373],
            { "ContingencyType (1385)", "fix.ContingencyType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1374],
            { "ListRejectReason (1386)", "fix.ListRejectReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1375],
            { "NoTrdRepIndicators (1387)", "fix.NoTrdRepIndicators",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1376],
            { "TrdRepPartyRole (1388)", "fix.TrdRepPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1377],
            { "TrdRepIndicator (1389)", "fix.TrdRepIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1378],
            { "TradePublishIndicator (1390)", "fix.TradePublishIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1379],
            { "UnderlyingLegOptAttribute (1391)", "fix.UnderlyingLegOptAttribute",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1380],
            { "UnderlyingLegSecurityDesc (1392)", "fix.UnderlyingLegSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1381],
            { "MarketReqID (1393)", "fix.MarketReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1382],
            { "MarketReportID (1394)", "fix.MarketReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1383],
            { "MarketUpdateAction (1395)", "fix.MarketUpdateAction",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1384],
            { "MarketSegmentDesc (1396)", "fix.MarketSegmentDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1385],
            { "EncodedMktSegmDescLen (1397)", "fix.EncodedMktSegmDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1386],
            { "EncodedMktSegmDesc (1398)", "fix.EncodedMktSegmDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1387],
            { "ApplNewSeqNum (1399)", "fix.ApplNewSeqNum",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1388],
            { "EncryptedPasswordMethod (1400)", "fix.EncryptedPasswordMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1389],
            { "EncryptedPasswordLen (1401)", "fix.EncryptedPasswordLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1390],
            { "EncryptedPassword (1402)", "fix.EncryptedPassword",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1391],
            { "EncryptedNewPasswordLen (1403)", "fix.EncryptedNewPasswordLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1392],
            { "EncryptedNewPassword (1404)", "fix.EncryptedNewPassword",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1393],
            { "UnderlyingLegMaturityTime (1405)", "fix.UnderlyingLegMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1394],
            { "RefApplExtID (1406)", "fix.RefApplExtID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1395],
            { "DefaultApplExtID (1407)", "fix.DefaultApplExtID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1396],
            { "DefaultCstmApplVerID (1408)", "fix.DefaultCstmApplVerID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1397],
            { "SessionStatus (1409)", "fix.SessionStatus",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1398],
            { "DefaultVerIndicator (1410)", "fix.DefaultVerIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1399],
            { "Nested4PartySubIDType (1411)", "fix.Nested4PartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1400],
            { "Nested4PartySubID (1412)", "fix.Nested4PartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1401],
            { "NoNested4PartySubIDs (1413)", "fix.NoNested4PartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1402],
            { "NoNested4PartyIDs (1414)", "fix.NoNested4PartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1403],
            { "Nested4PartyID (1415)", "fix.Nested4PartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1404],
            { "Nested4PartyIDSource (1416)", "fix.Nested4PartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1405],
            { "Nested4PartyRole (1417)", "fix.Nested4PartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1406],
            { "LegLastQty (1418)", "fix.LegLastQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1407],
            { "UnderlyingExerciseStyle (1419)", "fix.UnderlyingExerciseStyle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1408],
            { "LegExerciseStyle (1420)", "fix.LegExerciseStyle",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1409],
            { "LegPriceUnitOfMeasure (1421)", "fix.LegPriceUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1410],
            { "LegPriceUnitOfMeasureQty (1422)", "fix.LegPriceUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1411],
            { "UnderlyingUnitOfMeasureQty (1423)", "fix.UnderlyingUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1412],
            { "UnderlyingPriceUnitOfMeasure (1424)", "fix.UnderlyingPriceUnitOfMeasure",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1413],
            { "UnderlyingPriceUnitOfMeasureQty (1425)", "fix.UnderlyingPriceUnitOfMeasureQty",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1414],
            { "ApplReportType (1426)", "fix.ApplReportType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1415],
            { "SideExecID (1427)", "fix.SideExecID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1416],
            { "OrderDelay (1428)", "fix.OrderDelay",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1417],
            { "OrderDelayUnit (1429)", "fix.OrderDelayUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1418],
            { "VenueType (1430)", "fix.VenueType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1419],
            { "RefOrdIDReason (1431)", "fix.RefOrdIDReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1420],
            { "OrigCustOrderCapacity (1432)", "fix.OrigCustOrderCapacity",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1421],
            { "RefApplReqID (1433)", "fix.RefApplReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1422],
            { "ModelType (1434)", "fix.ModelType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1423],
            { "ContractMultiplierUnit (1435)", "fix.ContractMultiplierUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1424],
            { "LegContractMultiplierUnit (1436)", "fix.LegContractMultiplierUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1425],
            { "UnderlyingContractMultiplierUnit (1437)", "fix.UnderlyingContractMultiplierUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1426],
            { "DerivativeContractMultiplierUnit (1438)", "fix.DerivativeContractMultiplierUnit",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1427],
            { "FlowScheduleType (1439)", "fix.FlowScheduleType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1428],
            { "LegFlowScheduleType (1440)", "fix.LegFlowScheduleType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1429],
            { "UnderlyingFlowScheduleType (1441)", "fix.UnderlyingFlowScheduleType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1430],
            { "DerivativeFlowScheduleType (1442)", "fix.DerivativeFlowScheduleType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1431],
            { "FillLiquidityInd (1443)", "fix.FillLiquidityInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1432],
            { "SideLiquidityInd (1444)", "fix.SideLiquidityInd",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1433],
            { "NoRateSources (1445)", "fix.NoRateSources",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1434],
            { "RateSource (1446)", "fix.RateSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1435],
            { "RateSourceType (1447)", "fix.RateSourceType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1436],
            { "ReferencePage (1448)", "fix.ReferencePage",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1437],
            { "RestructuringType (1449)", "fix.RestructuringType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1438],
            { "Seniority (1450)", "fix.Seniority",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1439],
            { "NotionalPercentageOutstanding (1451)", "fix.NotionalPercentageOutstanding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1440],
            { "OriginalNotionalPercentageOutstanding (1452)", "fix.OriginalNotionalPercentageOutstanding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1441],
            { "UnderlyingRestructuringType (1453)", "fix.UnderlyingRestructuringType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1442],
            { "UnderlyingSeniority (1454)", "fix.UnderlyingSeniority",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1443],
            { "UnderlyingNotionalPercentageOutstanding (1455)", "fix.UnderlyingNotionalPercentageOutstanding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1444],
            { "UnderlyingOriginalNotionalPercentageOutstanding (1456)", "fix.UnderlyingOriginalNotionalPercentageOutstanding",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1445],
            { "AttachmentPoint (1457)", "fix.AttachmentPoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1446],
            { "DetachmentPoint (1458)", "fix.DetachmentPoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1447],
            { "UnderlyingAttachmentPoint (1459)", "fix.UnderlyingAttachmentPoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1448],
            { "UnderlyingDetachmentPoint (1460)", "fix.UnderlyingDetachmentPoint",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1449],
            { "NoTargetPartyIDs (1461)", "fix.NoTargetPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1450],
            { "TargetPartyID (1462)", "fix.TargetPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1451],
            { "TargetPartyIDSource (1463)", "fix.TargetPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1452],
            { "TargetPartyRole (1464)", "fix.TargetPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1453],
            { "SecurityListID (1465)", "fix.SecurityListID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1454],
            { "SecurityListRefID (1466)", "fix.SecurityListRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1455],
            { "SecurityListDesc (1467)", "fix.SecurityListDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1456],
            { "EncodedSecurityListDescLen (1468)", "fix.EncodedSecurityListDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1457],
            { "EncodedSecurityListDesc (1469)", "fix.EncodedSecurityListDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1458],
            { "SecurityListType (1470)", "fix.SecurityListType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1459],
            { "SecurityListTypeSource (1471)", "fix.SecurityListTypeSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1460],
            { "NewsID (1472)", "fix.NewsID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1461],
            { "NewsCategory (1473)", "fix.NewsCategory",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1462],
            { "LanguageCode (1474)", "fix.LanguageCode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1463],
            { "NoNewsRefIDs (1475)", "fix.NoNewsRefIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1464],
            { "NewsRefID (1476)", "fix.NewsRefID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1465],
            { "NewsRefType (1477)", "fix.NewsRefType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1466],
            { "StrikePriceDeterminationMethod (1478)", "fix.StrikePriceDeterminationMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1467],
            { "StrikePriceBoundaryMethod (1479)", "fix.StrikePriceBoundaryMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1468],
            { "StrikePriceBoundaryPrecision (1480)", "fix.StrikePriceBoundaryPrecision",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1469],
            { "UnderlyingPriceDeterminationMethod (1481)", "fix.UnderlyingPriceDeterminationMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1470],
            { "OptPayoutType (1482)", "fix.OptPayoutType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1471],
            { "NoComplexEvents (1483)", "fix.NoComplexEvents",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1472],
            { "ComplexEventType (1484)", "fix.ComplexEventType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1473],
            { "ComplexOptPayoutAmount (1485)", "fix.ComplexOptPayoutAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1474],
            { "ComplexEventPrice (1486)", "fix.ComplexEventPrice",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1475],
            { "ComplexEventPriceBoundaryMethod (1487)", "fix.ComplexEventPriceBoundaryMethod",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1476],
            { "ComplexEventPriceBoundaryPrecision (1488)", "fix.ComplexEventPriceBoundaryPrecision",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1477],
            { "ComplexEventPriceTimeType (1489)", "fix.ComplexEventPriceTimeType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1478],
            { "ComplexEventCondition (1490)", "fix.ComplexEventCondition",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1479],
            { "NoComplexEventDates (1491)", "fix.NoComplexEventDates",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1480],
            { "ComplexEventStartDate (1492)", "fix.ComplexEventStartDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1481],
            { "ComplexEventEndDate (1493)", "fix.ComplexEventEndDate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1482],
            { "NoComplexEventTimes (1494)", "fix.NoComplexEventTimes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1483],
            { "ComplexEventStartTime (1495)", "fix.ComplexEventStartTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1484],
            { "ComplexEventEndTime (1496)", "fix.ComplexEventEndTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1485],
            { "StreamAsgnReqID (1497)", "fix.StreamAsgnReqID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1486],
            { "StreamAsgnReqType (1498)", "fix.StreamAsgnReqType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1487],
            { "NoAsgnReqs (1499)", "fix.NoAsgnReqs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1488],
            { "MDStreamID (1500)", "fix.MDStreamID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1489],
            { "StreamAsgnRptID (1501)", "fix.StreamAsgnRptID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1490],
            { "StreamAsgnRejReason (1502)", "fix.StreamAsgnRejReason",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1491],
            { "StreamAsgnAckType (1503)", "fix.StreamAsgnAckType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1492],
            { "RelSymTransactTime (1504)", "fix.RelSymTransactTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1493],
            { "PartyDetailsListRequestID (1505)", "fix.PartyDetailsListRequestID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1494],
            { "NoPartyListResponseTypes (1506)", "fix.NoPartyListResponseTypes",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1495],
            { "PartyListResponseType (1507)", "fix.PartyListResponseType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1496],
            { "NoRequestedPartyRoles (1508)", "fix.NoRequestedPartyRoles",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1497],
            { "RequestedPartyRole (1509)", "fix.RequestedPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1498],
            { "PartyDetailsListReportID (1510)", "fix.PartyDetailsListReportID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1499],
            { "PartyDetailsRequestResult (1511)", "fix.PartyDetailsRequestResult",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1500],
            { "TotNoPartyList (1512)", "fix.TotNoPartyList",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1501],
            { "NoPartyList (1513)", "fix.NoPartyList",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1502],
            { "NoPartyRelationships (1514)", "fix.NoPartyRelationships",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1503],
            { "PartyRelationship (1515)", "fix.PartyRelationship",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1504],
            { "NoPartyAltIDs (1516)", "fix.NoPartyAltIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1505],
            { "PartyAltID (1517)", "fix.PartyAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1506],
            { "PartyAltIDSource (1518)", "fix.PartyAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1507],
            { "NoPartyAltSubIDs (1519)", "fix.NoPartyAltSubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1508],
            { "PartyAltSubID (1520)", "fix.PartyAltSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1509],
            { "PartyAltSubIDType (1521)", "fix.PartyAltSubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1510],
            { "NoContextPartyIDs (1522)", "fix.NoContextPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1511],
            { "ContextPartyID (1523)", "fix.ContextPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1512],
            { "ContextPartyIDSource (1524)", "fix.ContextPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1513],
            { "ContextPartyRole (1525)", "fix.ContextPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1514],
            { "NoContextPartySubIDs (1526)", "fix.NoContextPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1515],
            { "ContextPartySubID (1527)", "fix.ContextPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1516],
            { "ContextPartySubIDType (1528)", "fix.ContextPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1517],
            { "NoRiskLimits (1529)", "fix.NoRiskLimits",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1518],
            { "RiskLimitType (1530)", "fix.RiskLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1519],
            { "RiskLimitAmount (1531)", "fix.RiskLimitAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1520],
            { "RiskLimitCurrency (1532)", "fix.RiskLimitCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1521],
            { "RiskLimitPlatform (1533)", "fix.RiskLimitPlatform",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1522],
            { "NoRiskInstruments (1534)", "fix.NoRiskInstruments",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1523],
            { "RiskInstrumentOperator (1535)", "fix.RiskInstrumentOperator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1524],
            { "RiskSymbol (1536)", "fix.RiskSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1525],
            { "RiskSymbolSfx (1537)", "fix.RiskSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1526],
            { "RiskSecurityID (1538)", "fix.RiskSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1527],
            { "RiskSecurityIDSource (1539)", "fix.RiskSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1528],
            { "NoRiskSecurityAltID (1540)", "fix.NoRiskSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1529],
            { "RiskSecurityAltID (1541)", "fix.RiskSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1530],
            { "RiskSecurityAltIDSource (1542)", "fix.RiskSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1531],
            { "RiskProduct (1543)", "fix.RiskProduct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1532],
            { "RiskProductComplex (1544)", "fix.RiskProductComplex",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1533],
            { "RiskSecurityGroup (1545)", "fix.RiskSecurityGroup",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1534],
            { "RiskCFICode (1546)", "fix.RiskCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1535],
            { "RiskSecurityType (1547)", "fix.RiskSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1536],
            { "RiskSecuritySubType (1548)", "fix.RiskSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1537],
            { "RiskMaturityMonthYear (1549)", "fix.RiskMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1538],
            { "RiskMaturityTime (1550)", "fix.RiskMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1539],
            { "RiskRestructuringType (1551)", "fix.RiskRestructuringType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1540],
            { "RiskSeniority (1552)", "fix.RiskSeniority",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1541],
            { "RiskPutOrCall (1553)", "fix.RiskPutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1542],
            { "RiskFlexibleIndicator (1554)", "fix.RiskFlexibleIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1543],
            { "RiskCouponRate (1555)", "fix.RiskCouponRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1544],
            { "RiskSecurityDesc (1556)", "fix.RiskSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1545],
            { "RiskInstrumentSettlType (1557)", "fix.RiskInstrumentSettlType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1546],
            { "RiskInstrumentMultiplier (1558)", "fix.RiskInstrumentMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1547],
            { "NoRiskWarningLevels (1559)", "fix.NoRiskWarningLevels",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1548],
            { "RiskWarningLevelPercent (1560)", "fix.RiskWarningLevelPercent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1549],
            { "RiskWarningLevelName (1561)", "fix.RiskWarningLevelName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1550],
            { "NoRelatedPartyIDs (1562)", "fix.NoRelatedPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1551],
            { "RelatedPartyID (1563)", "fix.RelatedPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1552],
            { "RelatedPartyIDSource (1564)", "fix.RelatedPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1553],
            { "RelatedPartyRole (1565)", "fix.RelatedPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1554],
            { "NoRelatedPartySubIDs (1566)", "fix.NoRelatedPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1555],
            { "RelatedPartySubID (1567)", "fix.RelatedPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1556],
            { "RelatedPartySubIDType (1568)", "fix.RelatedPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1557],
            { "NoRelatedPartyAltIDs (1569)", "fix.NoRelatedPartyAltIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1558],
            { "RelatedPartyAltID (1570)", "fix.RelatedPartyAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1559],
            { "RelatedPartyAltIDSource (1571)", "fix.RelatedPartyAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1560],
            { "NoRelatedPartyAltSubIDs (1572)", "fix.NoRelatedPartyAltSubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1561],
            { "RelatedPartyAltSubID (1573)", "fix.RelatedPartyAltSubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1562],
            { "RelatedPartyAltSubIDType (1574)", "fix.RelatedPartyAltSubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1563],
            { "NoRelatedContextPartyIDs (1575)", "fix.NoRelatedContextPartyIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1564],
            { "RelatedContextPartyID (1576)", "fix.RelatedContextPartyID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1565],
            { "RelatedContextPartyIDSource (1577)", "fix.RelatedContextPartyIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1566],
            { "RelatedContextPartyRole (1578)", "fix.RelatedContextPartyRole",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1567],
            { "NoRelatedContextPartySubIDs (1579)", "fix.NoRelatedContextPartySubIDs",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1568],
            { "RelatedContextPartySubID (1580)", "fix.RelatedContextPartySubID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1569],
            { "RelatedContextPartySubIDType (1581)", "fix.RelatedContextPartySubIDType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1570],
            { "NoRelationshipRiskLimits (1582)", "fix.NoRelationshipRiskLimits",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1571],
            { "RelationshipRiskLimitType (1583)", "fix.RelationshipRiskLimitType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1572],
            { "RelationshipRiskLimitAmount (1584)", "fix.RelationshipRiskLimitAmount",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1573],
            { "RelationshipRiskLimitCurrency (1585)", "fix.RelationshipRiskLimitCurrency",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1574],
            { "RelationshipRiskLimitPlatform (1586)", "fix.RelationshipRiskLimitPlatform",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1575],
            { "NoRelationshipRiskInstruments (1587)", "fix.NoRelationshipRiskInstruments",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1576],
            { "RelationshipRiskInstrumentOperator (1588)", "fix.RelationshipRiskInstrumentOperator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1577],
            { "RelationshipRiskSymbol (1589)", "fix.RelationshipRiskSymbol",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1578],
            { "RelationshipRiskSymbolSfx (1590)", "fix.RelationshipRiskSymbolSfx",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1579],
            { "RelationshipRiskSecurityID (1591)", "fix.RelationshipRiskSecurityID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1580],
            { "RelationshipRiskSecurityIDSource (1592)", "fix.RelationshipRiskSecurityIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1581],
            { "NoRelationshipRiskSecurityAltID (1593)", "fix.NoRelationshipRiskSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1582],
            { "RelationshipRiskSecurityAltID (1594)", "fix.RelationshipRiskSecurityAltID",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1583],
            { "RelationshipRiskSecurityAltIDSource (1595)", "fix.RelationshipRiskSecurityAltIDSource",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1584],
            { "RelationshipRiskProduct (1596)", "fix.RelationshipRiskProduct",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1585],
            { "RelationshipRiskProductComplex (1597)", "fix.RelationshipRiskProductComplex",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1586],
            { "RelationshipRiskSecurityGroup (1598)", "fix.RelationshipRiskSecurityGroup",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1587],
            { "RelationshipRiskCFICode (1599)", "fix.RelationshipRiskCFICode",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1588],
            { "RelationshipRiskSecurityType (1600)", "fix.RelationshipRiskSecurityType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1589],
            { "RelationshipRiskSecuritySubType (1601)", "fix.RelationshipRiskSecuritySubType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1590],
            { "RelationshipRiskMaturityMonthYear (1602)", "fix.RelationshipRiskMaturityMonthYear",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1591],
            { "RelationshipRiskMaturityTime (1603)", "fix.RelationshipRiskMaturityTime",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1592],
            { "RelationshipRiskRestructuringType (1604)", "fix.RelationshipRiskRestructuringType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1593],
            { "RelationshipRiskSeniority (1605)", "fix.RelationshipRiskSeniority",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1594],
            { "RelationshipRiskPutOrCall (1606)", "fix.RelationshipRiskPutOrCall",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1595],
            { "RelationshipRiskFlexibleIndicator (1607)", "fix.RelationshipRiskFlexibleIndicator",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1596],
            { "RelationshipRiskCouponRate (1608)", "fix.RelationshipRiskCouponRate",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1597],
            { "RelationshipRiskSecurityExchange (1609)", "fix.RelationshipRiskSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1598],
            { "RelationshipRiskSecurityDesc (1610)", "fix.RelationshipRiskSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1599],
            { "RelationshipRiskInstrumentSettlType (1611)", "fix.RelationshipRiskInstrumentSettlType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1600],
            { "RelationshipRiskInstrumentMultiplier (1612)", "fix.RelationshipRiskInstrumentMultiplier",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1601],
            { "NoRelationshipRiskWarningLevels (1613)", "fix.NoRelationshipRiskWarningLevels",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1602],
            { "RelationshipRiskWarningLevelPercent (1614)", "fix.RelationshipRiskWarningLevelPercent",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1603],
            { "RelationshipRiskWarningLevelName (1615)", "fix.RelationshipRiskWarningLevelName",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1604],
            { "RiskSecurityExchange (1616)", "fix.RiskSecurityExchange",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1605],
            { "StreamAsgnType (1617)", "fix.StreamAsgnType",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1606],
            { "RelationshipRiskEncodedSecurityDescLen (1618)", "fix.RelationshipRiskEncodedSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1607],
            { "RelationshipRiskEncodedSecurityDesc (1619)", "fix.RelationshipRiskEncodedSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1608],
            { "RiskEncodedSecurityDescLen (1620)", "fix.RiskEncodedSecurityDescLen",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
        { &fix_hf[1609],
            { "RiskEncodedSecurityDesc (1621)", "fix.RiskEncodedSecurityDesc",
            FT_STRING, BASE_NONE, NULL, 0x00,
            NULL, HFILL }
        },
    };

/*
 * Editor modelines
 *
 * Local Variables:
 * c-basic-offset: 4
 * tab-width: 8
 * indent-tabs-mode: nil
 * End:
 *
 * ex: set shiftwidth=4 tabstop=8 expandtab:
 * :indentSize=4:tabSize=8:noTabs=true:
 */
#define FIX_40 140
#define FIX_41 211
#define FIX_42 446
#define FIX_43 659
#define FIX_44 956

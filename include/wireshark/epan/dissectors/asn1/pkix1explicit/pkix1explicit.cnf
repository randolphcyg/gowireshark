# pkix1explicit.cnf
# pkix1explicit conformation file

#.MODULE_IMPORT

#.EXPORTS
Attribute
AttributeTypeAndValue
CertificateSerialNumber
DirectoryString
Extension
Extensions
RelativeDistinguishedName
RDNSequence
TeletexDomainDefinedAttribute
TerminalType
Version
Time
UniqueIdentifier

#.REGISTER
DirectoryString		B "1.3.6.1.5.5.7.2.1" "id-qt-cps"
DomainParameters	B "1.2.840.10046.2.1" "dhpublicnumber"
IPAddrBlocks		B "1.3.6.1.5.5.7.1.7" "id-pe-ipAddrBlocks"
ASIdentifiers		B "1.3.6.1.5.5.7.1.8" "id-pe-autonomousSysIds"
# X.509v3 TLS Feature extension (RFC 7633)
Features            B "1.3.6.1.5.5.7.1.24" "id-pe-tlsfeature"
# From PKCS 9 / RFC 2985
DirectoryString B "1.2.840.113549.1.9.7"  "pkcs-9-at-challengePassword"
Extensions      B "1.2.840.113549.1.9.14" "pkcs-9-at-extensionRequest"

#.PDU

#.NO_EMIT

#.TYPE_RENAME

#.FIELD_RENAME

#.FN_BODY DirectoryString
	offset = dissect_ber_octet_string(implicit_tag, actx, tree, tvb, offset, hf_index, NULL);

#.FN_PARS Attribute/type
  FN_VARIANT = _str  HF_INDEX = hf_pkix1explicit_type  VAL_PTR = &actx->external.direct_reference

#.FN_BODY Attribute/values/_item
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, tree, NULL);

#.FN_PARS AttributeTypeAndValue/type
  FN_VARIANT = _str  HF_INDEX = hf_pkix1explicit_type_01  VAL_PTR = &actx->external.direct_reference

#.FN_BODY AttributeTypeAndValue/value
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, tree, NULL);

#.FN_PARS Extension/extnId
  FN_VARIANT = _str  HF_INDEX = hf_pkix1explicit_object_identifier_id  VAL_PTR = &actx->external.direct_reference

#.FN_BODY Extension/extnId
%(DEFAULT_BODY)s
  actx->external.direct_ref_present = (actx->external.direct_reference != NULL) ? true : false;

#.FN_BODY Extension/extnValue
  int8_t appclass;
  bool pc, ind;
  int32_t tag;
  uint32_t len;
  /* skip past the T and L  */
  offset = dissect_ber_identifier(actx->pinfo, tree, tvb, offset, &appclass, &pc, &tag);
  offset = dissect_ber_length(actx->pinfo, tree, tvb, offset, &len, &ind);
  if (actx->external.direct_ref_present) {
    offset=call_ber_oid_callback(actx->external.direct_reference, tvb, offset, actx->pinfo, tree, NULL);
  }

# IPAddrAndASCertExtn

#.FN_BODY IPAddressFamily/addressFamily VAL_PTR = &parameter_tvb
	tvbuff_t	*parameter_tvb;
	proto_tree *subtree;

%(DEFAULT_BODY)s

	if (!parameter_tvb)
		return offset;
	subtree = proto_item_add_subtree(actx->created_item, ett_pkix1explicit_addressFamily);
	proto_tree_add_item(subtree, hf_pkix1explicit_addressFamily_afn, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
	if(tvb_reported_length(parameter_tvb)>2)
		proto_tree_add_item(subtree, hf_pkix1explicit_addressFamily_safi, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);

#.TYPE_ATTR
TeletexDomainDefinedAttribute/type DISPLAY = BASE_NONE

#.TYPE_ATTR
TeletexDomainDefinedAttribute/value DISPLAY = BASE_NONE

#.TYPE_ATTR
Features/_item TYPE = FT_UINT16  STRINGS = VALS(tls_hello_extension_types) BLURB = "TLS Extension that MUST be supported by the server"

#.END

